#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_GPIO_H
#define _MOCK_GPIO_H

#include "unity.h"
#include "gpio.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_gpio_Init(void);
void mock_gpio_Destroy(void);
void mock_gpio_Verify(void);




#define gpio_init_Ignore() gpio_init_CMockIgnore()
void gpio_init_CMockIgnore(void);
#define gpio_init_StopIgnore() gpio_init_CMockStopIgnore()
void gpio_init_CMockStopIgnore(void);
#define gpio_init_Expect() gpio_init_CMockExpect(__LINE__)
void gpio_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_gpio_init_CALLBACK)(int cmock_num_calls);
void gpio_init_AddCallback(CMOCK_gpio_init_CALLBACK Callback);
void gpio_init_Stub(CMOCK_gpio_init_CALLBACK Callback);
#define gpio_init_StubWithCallback gpio_init_Stub
#define gpio_output_set_Ignore() gpio_output_set_CMockIgnore()
void gpio_output_set_CMockIgnore(void);
#define gpio_output_set_StopIgnore() gpio_output_set_CMockStopIgnore()
void gpio_output_set_CMockStopIgnore(void);
#define gpio_output_set_Expect(set_mask, clear_mask, enable_mask, disable_mask) gpio_output_set_CMockExpect(__LINE__, set_mask, clear_mask, enable_mask, disable_mask)
void gpio_output_set_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t set_mask, uint32_t clear_mask, uint32_t enable_mask, uint32_t disable_mask);
typedef void (* CMOCK_gpio_output_set_CALLBACK)(uint32_t set_mask, uint32_t clear_mask, uint32_t enable_mask, uint32_t disable_mask, int cmock_num_calls);
void gpio_output_set_AddCallback(CMOCK_gpio_output_set_CALLBACK Callback);
void gpio_output_set_Stub(CMOCK_gpio_output_set_CALLBACK Callback);
#define gpio_output_set_StubWithCallback gpio_output_set_Stub
#define gpio_output_set_IgnoreArg_set_mask() gpio_output_set_CMockIgnoreArg_set_mask(__LINE__)
void gpio_output_set_CMockIgnoreArg_set_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_IgnoreArg_clear_mask() gpio_output_set_CMockIgnoreArg_clear_mask(__LINE__)
void gpio_output_set_CMockIgnoreArg_clear_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_IgnoreArg_enable_mask() gpio_output_set_CMockIgnoreArg_enable_mask(__LINE__)
void gpio_output_set_CMockIgnoreArg_enable_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_IgnoreArg_disable_mask() gpio_output_set_CMockIgnoreArg_disable_mask(__LINE__)
void gpio_output_set_CMockIgnoreArg_disable_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_high_Ignore() gpio_output_set_high_CMockIgnore()
void gpio_output_set_high_CMockIgnore(void);
#define gpio_output_set_high_StopIgnore() gpio_output_set_high_CMockStopIgnore()
void gpio_output_set_high_CMockStopIgnore(void);
#define gpio_output_set_high_Expect(set_mask, clear_mask, enable_mask, disable_mask) gpio_output_set_high_CMockExpect(__LINE__, set_mask, clear_mask, enable_mask, disable_mask)
void gpio_output_set_high_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t set_mask, uint32_t clear_mask, uint32_t enable_mask, uint32_t disable_mask);
typedef void (* CMOCK_gpio_output_set_high_CALLBACK)(uint32_t set_mask, uint32_t clear_mask, uint32_t enable_mask, uint32_t disable_mask, int cmock_num_calls);
void gpio_output_set_high_AddCallback(CMOCK_gpio_output_set_high_CALLBACK Callback);
void gpio_output_set_high_Stub(CMOCK_gpio_output_set_high_CALLBACK Callback);
#define gpio_output_set_high_StubWithCallback gpio_output_set_high_Stub
#define gpio_output_set_high_IgnoreArg_set_mask() gpio_output_set_high_CMockIgnoreArg_set_mask(__LINE__)
void gpio_output_set_high_CMockIgnoreArg_set_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_high_IgnoreArg_clear_mask() gpio_output_set_high_CMockIgnoreArg_clear_mask(__LINE__)
void gpio_output_set_high_CMockIgnoreArg_clear_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_high_IgnoreArg_enable_mask() gpio_output_set_high_CMockIgnoreArg_enable_mask(__LINE__)
void gpio_output_set_high_CMockIgnoreArg_enable_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_output_set_high_IgnoreArg_disable_mask() gpio_output_set_high_CMockIgnoreArg_disable_mask(__LINE__)
void gpio_output_set_high_CMockIgnoreArg_disable_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_input_get_IgnoreAndReturn(cmock_retval) gpio_input_get_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_input_get_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define gpio_input_get_StopIgnore() gpio_input_get_CMockStopIgnore()
void gpio_input_get_CMockStopIgnore(void);
#define gpio_input_get_ExpectAndReturn(cmock_retval) gpio_input_get_CMockExpectAndReturn(__LINE__, cmock_retval)
void gpio_input_get_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_gpio_input_get_CALLBACK)(int cmock_num_calls);
void gpio_input_get_AddCallback(CMOCK_gpio_input_get_CALLBACK Callback);
void gpio_input_get_Stub(CMOCK_gpio_input_get_CALLBACK Callback);
#define gpio_input_get_StubWithCallback gpio_input_get_Stub
#define gpio_input_get_high_IgnoreAndReturn(cmock_retval) gpio_input_get_high_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_input_get_high_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define gpio_input_get_high_StopIgnore() gpio_input_get_high_CMockStopIgnore()
void gpio_input_get_high_CMockStopIgnore(void);
#define gpio_input_get_high_ExpectAndReturn(cmock_retval) gpio_input_get_high_CMockExpectAndReturn(__LINE__, cmock_retval)
void gpio_input_get_high_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_gpio_input_get_high_CALLBACK)(int cmock_num_calls);
void gpio_input_get_high_AddCallback(CMOCK_gpio_input_get_high_CALLBACK Callback);
void gpio_input_get_high_Stub(CMOCK_gpio_input_get_high_CALLBACK Callback);
#define gpio_input_get_high_StubWithCallback gpio_input_get_high_Stub
#define gpio_intr_handler_register_Ignore() gpio_intr_handler_register_CMockIgnore()
void gpio_intr_handler_register_CMockIgnore(void);
#define gpio_intr_handler_register_StopIgnore() gpio_intr_handler_register_CMockStopIgnore()
void gpio_intr_handler_register_CMockStopIgnore(void);
#define gpio_intr_handler_register_Expect(fn, arg) gpio_intr_handler_register_CMockExpect(__LINE__, fn, arg)
void gpio_intr_handler_register_CMockExpect(UNITY_LINE_TYPE cmock_line, gpio_intr_handler_fn_t fn, void* arg);
typedef void (* CMOCK_gpio_intr_handler_register_CALLBACK)(gpio_intr_handler_fn_t fn, void* arg, int cmock_num_calls);
void gpio_intr_handler_register_AddCallback(CMOCK_gpio_intr_handler_register_CALLBACK Callback);
void gpio_intr_handler_register_Stub(CMOCK_gpio_intr_handler_register_CALLBACK Callback);
#define gpio_intr_handler_register_StubWithCallback gpio_intr_handler_register_Stub
#define gpio_intr_handler_register_ExpectWithArray(fn, arg, arg_Depth) gpio_intr_handler_register_CMockExpectWithArray(__LINE__, fn, arg, arg_Depth)
void gpio_intr_handler_register_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, gpio_intr_handler_fn_t fn, void* arg, int arg_Depth);
#define gpio_intr_handler_register_ReturnThruPtr_arg(arg) gpio_intr_handler_register_CMockReturnMemThruPtr_arg(__LINE__, arg, sizeof(void))
#define gpio_intr_handler_register_ReturnArrayThruPtr_arg(arg, cmock_len) gpio_intr_handler_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_len * sizeof(*arg))
#define gpio_intr_handler_register_ReturnMemThruPtr_arg(arg, cmock_size) gpio_intr_handler_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_size)
void gpio_intr_handler_register_CMockReturnMemThruPtr_arg(UNITY_LINE_TYPE cmock_line, void* arg, size_t cmock_size);
#define gpio_intr_handler_register_IgnoreArg_fn() gpio_intr_handler_register_CMockIgnoreArg_fn(__LINE__)
void gpio_intr_handler_register_CMockIgnoreArg_fn(UNITY_LINE_TYPE cmock_line);
#define gpio_intr_handler_register_IgnoreArg_arg() gpio_intr_handler_register_CMockIgnoreArg_arg(__LINE__)
void gpio_intr_handler_register_CMockIgnoreArg_arg(UNITY_LINE_TYPE cmock_line);
#define gpio_intr_pending_IgnoreAndReturn(cmock_retval) gpio_intr_pending_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_intr_pending_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define gpio_intr_pending_StopIgnore() gpio_intr_pending_CMockStopIgnore()
void gpio_intr_pending_CMockStopIgnore(void);
#define gpio_intr_pending_ExpectAndReturn(cmock_retval) gpio_intr_pending_CMockExpectAndReturn(__LINE__, cmock_retval)
void gpio_intr_pending_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_gpio_intr_pending_CALLBACK)(int cmock_num_calls);
void gpio_intr_pending_AddCallback(CMOCK_gpio_intr_pending_CALLBACK Callback);
void gpio_intr_pending_Stub(CMOCK_gpio_intr_pending_CALLBACK Callback);
#define gpio_intr_pending_StubWithCallback gpio_intr_pending_Stub
#define gpio_intr_pending_high_IgnoreAndReturn(cmock_retval) gpio_intr_pending_high_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_intr_pending_high_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define gpio_intr_pending_high_StopIgnore() gpio_intr_pending_high_CMockStopIgnore()
void gpio_intr_pending_high_CMockStopIgnore(void);
#define gpio_intr_pending_high_ExpectAndReturn(cmock_retval) gpio_intr_pending_high_CMockExpectAndReturn(__LINE__, cmock_retval)
void gpio_intr_pending_high_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_gpio_intr_pending_high_CALLBACK)(int cmock_num_calls);
void gpio_intr_pending_high_AddCallback(CMOCK_gpio_intr_pending_high_CALLBACK Callback);
void gpio_intr_pending_high_Stub(CMOCK_gpio_intr_pending_high_CALLBACK Callback);
#define gpio_intr_pending_high_StubWithCallback gpio_intr_pending_high_Stub
#define gpio_intr_ack_Ignore() gpio_intr_ack_CMockIgnore()
void gpio_intr_ack_CMockIgnore(void);
#define gpio_intr_ack_StopIgnore() gpio_intr_ack_CMockStopIgnore()
void gpio_intr_ack_CMockStopIgnore(void);
#define gpio_intr_ack_Expect(ack_mask) gpio_intr_ack_CMockExpect(__LINE__, ack_mask)
void gpio_intr_ack_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t ack_mask);
typedef void (* CMOCK_gpio_intr_ack_CALLBACK)(uint32_t ack_mask, int cmock_num_calls);
void gpio_intr_ack_AddCallback(CMOCK_gpio_intr_ack_CALLBACK Callback);
void gpio_intr_ack_Stub(CMOCK_gpio_intr_ack_CALLBACK Callback);
#define gpio_intr_ack_StubWithCallback gpio_intr_ack_Stub
#define gpio_intr_ack_IgnoreArg_ack_mask() gpio_intr_ack_CMockIgnoreArg_ack_mask(__LINE__)
void gpio_intr_ack_CMockIgnoreArg_ack_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_intr_ack_high_Ignore() gpio_intr_ack_high_CMockIgnore()
void gpio_intr_ack_high_CMockIgnore(void);
#define gpio_intr_ack_high_StopIgnore() gpio_intr_ack_high_CMockStopIgnore()
void gpio_intr_ack_high_CMockStopIgnore(void);
#define gpio_intr_ack_high_Expect(ack_mask) gpio_intr_ack_high_CMockExpect(__LINE__, ack_mask)
void gpio_intr_ack_high_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t ack_mask);
typedef void (* CMOCK_gpio_intr_ack_high_CALLBACK)(uint32_t ack_mask, int cmock_num_calls);
void gpio_intr_ack_high_AddCallback(CMOCK_gpio_intr_ack_high_CALLBACK Callback);
void gpio_intr_ack_high_Stub(CMOCK_gpio_intr_ack_high_CALLBACK Callback);
#define gpio_intr_ack_high_StubWithCallback gpio_intr_ack_high_Stub
#define gpio_intr_ack_high_IgnoreArg_ack_mask() gpio_intr_ack_high_CMockIgnoreArg_ack_mask(__LINE__)
void gpio_intr_ack_high_CMockIgnoreArg_ack_mask(UNITY_LINE_TYPE cmock_line);
#define gpio_pin_wakeup_enable_Ignore() gpio_pin_wakeup_enable_CMockIgnore()
void gpio_pin_wakeup_enable_CMockIgnore(void);
#define gpio_pin_wakeup_enable_StopIgnore() gpio_pin_wakeup_enable_CMockStopIgnore()
void gpio_pin_wakeup_enable_CMockStopIgnore(void);
#define gpio_pin_wakeup_enable_Expect(i, intr_state) gpio_pin_wakeup_enable_CMockExpect(__LINE__, i, intr_state)
void gpio_pin_wakeup_enable_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t i, GPIO_INT_TYPE intr_state);
typedef void (* CMOCK_gpio_pin_wakeup_enable_CALLBACK)(uint32_t i, GPIO_INT_TYPE intr_state, int cmock_num_calls);
void gpio_pin_wakeup_enable_AddCallback(CMOCK_gpio_pin_wakeup_enable_CALLBACK Callback);
void gpio_pin_wakeup_enable_Stub(CMOCK_gpio_pin_wakeup_enable_CALLBACK Callback);
#define gpio_pin_wakeup_enable_StubWithCallback gpio_pin_wakeup_enable_Stub
#define gpio_pin_wakeup_enable_IgnoreArg_i() gpio_pin_wakeup_enable_CMockIgnoreArg_i(__LINE__)
void gpio_pin_wakeup_enable_CMockIgnoreArg_i(UNITY_LINE_TYPE cmock_line);
#define gpio_pin_wakeup_enable_IgnoreArg_intr_state() gpio_pin_wakeup_enable_CMockIgnoreArg_intr_state(__LINE__)
void gpio_pin_wakeup_enable_CMockIgnoreArg_intr_state(UNITY_LINE_TYPE cmock_line);
#define gpio_pin_wakeup_disable_Ignore() gpio_pin_wakeup_disable_CMockIgnore()
void gpio_pin_wakeup_disable_CMockIgnore(void);
#define gpio_pin_wakeup_disable_StopIgnore() gpio_pin_wakeup_disable_CMockStopIgnore()
void gpio_pin_wakeup_disable_CMockStopIgnore(void);
#define gpio_pin_wakeup_disable_Expect() gpio_pin_wakeup_disable_CMockExpect(__LINE__)
void gpio_pin_wakeup_disable_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_gpio_pin_wakeup_disable_CALLBACK)(int cmock_num_calls);
void gpio_pin_wakeup_disable_AddCallback(CMOCK_gpio_pin_wakeup_disable_CALLBACK Callback);
void gpio_pin_wakeup_disable_Stub(CMOCK_gpio_pin_wakeup_disable_CALLBACK Callback);
#define gpio_pin_wakeup_disable_StubWithCallback gpio_pin_wakeup_disable_Stub
#define gpio_matrix_in_Ignore() gpio_matrix_in_CMockIgnore()
void gpio_matrix_in_CMockIgnore(void);
#define gpio_matrix_in_StopIgnore() gpio_matrix_in_CMockStopIgnore()
void gpio_matrix_in_CMockStopIgnore(void);
#define gpio_matrix_in_Expect(gpio, signal_idx, inv) gpio_matrix_in_CMockExpect(__LINE__, gpio, signal_idx, inv)
void gpio_matrix_in_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio, uint32_t signal_idx, bool inv);
typedef void (* CMOCK_gpio_matrix_in_CALLBACK)(uint32_t gpio, uint32_t signal_idx, bool inv, int cmock_num_calls);
void gpio_matrix_in_AddCallback(CMOCK_gpio_matrix_in_CALLBACK Callback);
void gpio_matrix_in_Stub(CMOCK_gpio_matrix_in_CALLBACK Callback);
#define gpio_matrix_in_StubWithCallback gpio_matrix_in_Stub
#define gpio_matrix_in_IgnoreArg_gpio() gpio_matrix_in_CMockIgnoreArg_gpio(__LINE__)
void gpio_matrix_in_CMockIgnoreArg_gpio(UNITY_LINE_TYPE cmock_line);
#define gpio_matrix_in_IgnoreArg_signal_idx() gpio_matrix_in_CMockIgnoreArg_signal_idx(__LINE__)
void gpio_matrix_in_CMockIgnoreArg_signal_idx(UNITY_LINE_TYPE cmock_line);
#define gpio_matrix_in_IgnoreArg_inv() gpio_matrix_in_CMockIgnoreArg_inv(__LINE__)
void gpio_matrix_in_CMockIgnoreArg_inv(UNITY_LINE_TYPE cmock_line);
#define gpio_matrix_out_Ignore() gpio_matrix_out_CMockIgnore()
void gpio_matrix_out_CMockIgnore(void);
#define gpio_matrix_out_StopIgnore() gpio_matrix_out_CMockStopIgnore()
void gpio_matrix_out_CMockStopIgnore(void);
#define gpio_matrix_out_Expect(gpio, signal_idx, out_inv, oen_inv) gpio_matrix_out_CMockExpect(__LINE__, gpio, signal_idx, out_inv, oen_inv)
void gpio_matrix_out_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio, uint32_t signal_idx, bool out_inv, bool oen_inv);
typedef void (* CMOCK_gpio_matrix_out_CALLBACK)(uint32_t gpio, uint32_t signal_idx, bool out_inv, bool oen_inv, int cmock_num_calls);
void gpio_matrix_out_AddCallback(CMOCK_gpio_matrix_out_CALLBACK Callback);
void gpio_matrix_out_Stub(CMOCK_gpio_matrix_out_CALLBACK Callback);
#define gpio_matrix_out_StubWithCallback gpio_matrix_out_Stub
#define gpio_matrix_out_IgnoreArg_gpio() gpio_matrix_out_CMockIgnoreArg_gpio(__LINE__)
void gpio_matrix_out_CMockIgnoreArg_gpio(UNITY_LINE_TYPE cmock_line);
#define gpio_matrix_out_IgnoreArg_signal_idx() gpio_matrix_out_CMockIgnoreArg_signal_idx(__LINE__)
void gpio_matrix_out_CMockIgnoreArg_signal_idx(UNITY_LINE_TYPE cmock_line);
#define gpio_matrix_out_IgnoreArg_out_inv() gpio_matrix_out_CMockIgnoreArg_out_inv(__LINE__)
void gpio_matrix_out_CMockIgnoreArg_out_inv(UNITY_LINE_TYPE cmock_line);
#define gpio_matrix_out_IgnoreArg_oen_inv() gpio_matrix_out_CMockIgnoreArg_oen_inv(__LINE__)
void gpio_matrix_out_CMockIgnoreArg_oen_inv(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_select_gpio_Ignore() gpio_pad_select_gpio_CMockIgnore()
void gpio_pad_select_gpio_CMockIgnore(void);
#define gpio_pad_select_gpio_StopIgnore() gpio_pad_select_gpio_CMockStopIgnore()
void gpio_pad_select_gpio_CMockStopIgnore(void);
#define gpio_pad_select_gpio_Expect(gpio_num) gpio_pad_select_gpio_CMockExpect(__LINE__, gpio_num)
void gpio_pad_select_gpio_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num);
typedef void (* CMOCK_gpio_pad_select_gpio_CALLBACK)(uint32_t gpio_num, int cmock_num_calls);
void gpio_pad_select_gpio_AddCallback(CMOCK_gpio_pad_select_gpio_CALLBACK Callback);
void gpio_pad_select_gpio_Stub(CMOCK_gpio_pad_select_gpio_CALLBACK Callback);
#define gpio_pad_select_gpio_StubWithCallback gpio_pad_select_gpio_Stub
#define gpio_pad_select_gpio_IgnoreArg_gpio_num() gpio_pad_select_gpio_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_select_gpio_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_set_drv_Ignore() gpio_pad_set_drv_CMockIgnore()
void gpio_pad_set_drv_CMockIgnore(void);
#define gpio_pad_set_drv_StopIgnore() gpio_pad_set_drv_CMockStopIgnore()
void gpio_pad_set_drv_CMockStopIgnore(void);
#define gpio_pad_set_drv_Expect(gpio_num, drv) gpio_pad_set_drv_CMockExpect(__LINE__, gpio_num, drv)
void gpio_pad_set_drv_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num, uint32_t drv);
typedef void (* CMOCK_gpio_pad_set_drv_CALLBACK)(uint32_t gpio_num, uint32_t drv, int cmock_num_calls);
void gpio_pad_set_drv_AddCallback(CMOCK_gpio_pad_set_drv_CALLBACK Callback);
void gpio_pad_set_drv_Stub(CMOCK_gpio_pad_set_drv_CALLBACK Callback);
#define gpio_pad_set_drv_StubWithCallback gpio_pad_set_drv_Stub
#define gpio_pad_set_drv_IgnoreArg_gpio_num() gpio_pad_set_drv_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_set_drv_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_set_drv_IgnoreArg_drv() gpio_pad_set_drv_CMockIgnoreArg_drv(__LINE__)
void gpio_pad_set_drv_CMockIgnoreArg_drv(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_pullup_Ignore() gpio_pad_pullup_CMockIgnore()
void gpio_pad_pullup_CMockIgnore(void);
#define gpio_pad_pullup_StopIgnore() gpio_pad_pullup_CMockStopIgnore()
void gpio_pad_pullup_CMockStopIgnore(void);
#define gpio_pad_pullup_Expect(gpio_num) gpio_pad_pullup_CMockExpect(__LINE__, gpio_num)
void gpio_pad_pullup_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num);
typedef void (* CMOCK_gpio_pad_pullup_CALLBACK)(uint32_t gpio_num, int cmock_num_calls);
void gpio_pad_pullup_AddCallback(CMOCK_gpio_pad_pullup_CALLBACK Callback);
void gpio_pad_pullup_Stub(CMOCK_gpio_pad_pullup_CALLBACK Callback);
#define gpio_pad_pullup_StubWithCallback gpio_pad_pullup_Stub
#define gpio_pad_pullup_IgnoreArg_gpio_num() gpio_pad_pullup_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_pullup_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_pulldown_Ignore() gpio_pad_pulldown_CMockIgnore()
void gpio_pad_pulldown_CMockIgnore(void);
#define gpio_pad_pulldown_StopIgnore() gpio_pad_pulldown_CMockStopIgnore()
void gpio_pad_pulldown_CMockStopIgnore(void);
#define gpio_pad_pulldown_Expect(gpio_num) gpio_pad_pulldown_CMockExpect(__LINE__, gpio_num)
void gpio_pad_pulldown_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num);
typedef void (* CMOCK_gpio_pad_pulldown_CALLBACK)(uint32_t gpio_num, int cmock_num_calls);
void gpio_pad_pulldown_AddCallback(CMOCK_gpio_pad_pulldown_CALLBACK Callback);
void gpio_pad_pulldown_Stub(CMOCK_gpio_pad_pulldown_CALLBACK Callback);
#define gpio_pad_pulldown_StubWithCallback gpio_pad_pulldown_Stub
#define gpio_pad_pulldown_IgnoreArg_gpio_num() gpio_pad_pulldown_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_pulldown_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_unhold_Ignore() gpio_pad_unhold_CMockIgnore()
void gpio_pad_unhold_CMockIgnore(void);
#define gpio_pad_unhold_StopIgnore() gpio_pad_unhold_CMockStopIgnore()
void gpio_pad_unhold_CMockStopIgnore(void);
#define gpio_pad_unhold_Expect(gpio_num) gpio_pad_unhold_CMockExpect(__LINE__, gpio_num)
void gpio_pad_unhold_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num);
typedef void (* CMOCK_gpio_pad_unhold_CALLBACK)(uint32_t gpio_num, int cmock_num_calls);
void gpio_pad_unhold_AddCallback(CMOCK_gpio_pad_unhold_CALLBACK Callback);
void gpio_pad_unhold_Stub(CMOCK_gpio_pad_unhold_CALLBACK Callback);
#define gpio_pad_unhold_StubWithCallback gpio_pad_unhold_Stub
#define gpio_pad_unhold_IgnoreArg_gpio_num() gpio_pad_unhold_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_unhold_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_hold_Ignore() gpio_pad_hold_CMockIgnore()
void gpio_pad_hold_CMockIgnore(void);
#define gpio_pad_hold_StopIgnore() gpio_pad_hold_CMockStopIgnore()
void gpio_pad_hold_CMockStopIgnore(void);
#define gpio_pad_hold_Expect(gpio_num) gpio_pad_hold_CMockExpect(__LINE__, gpio_num)
void gpio_pad_hold_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num);
typedef void (* CMOCK_gpio_pad_hold_CALLBACK)(uint32_t gpio_num, int cmock_num_calls);
void gpio_pad_hold_AddCallback(CMOCK_gpio_pad_hold_CALLBACK Callback);
void gpio_pad_hold_Stub(CMOCK_gpio_pad_hold_CALLBACK Callback);
#define gpio_pad_hold_StubWithCallback gpio_pad_hold_Stub
#define gpio_pad_hold_IgnoreArg_gpio_num() gpio_pad_hold_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_hold_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pad_input_enable_Ignore() gpio_pad_input_enable_CMockIgnore()
void gpio_pad_input_enable_CMockIgnore(void);
#define gpio_pad_input_enable_StopIgnore() gpio_pad_input_enable_CMockStopIgnore()
void gpio_pad_input_enable_CMockStopIgnore(void);
#define gpio_pad_input_enable_Expect(gpio_num) gpio_pad_input_enable_CMockExpect(__LINE__, gpio_num)
void gpio_pad_input_enable_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num);
typedef void (* CMOCK_gpio_pad_input_enable_CALLBACK)(uint32_t gpio_num, int cmock_num_calls);
void gpio_pad_input_enable_AddCallback(CMOCK_gpio_pad_input_enable_CALLBACK Callback);
void gpio_pad_input_enable_Stub(CMOCK_gpio_pad_input_enable_CALLBACK Callback);
#define gpio_pad_input_enable_StubWithCallback gpio_pad_input_enable_Stub
#define gpio_pad_input_enable_IgnoreArg_gpio_num() gpio_pad_input_enable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pad_input_enable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BLE_SVC_GAP_H
#define _MOCK_BLE_SVC_GAP_H

#include "unity.h"
#include "ble_svc_gap.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ble_svc_gap_Init(void);
void mock_ble_svc_gap_Destroy(void);
void mock_ble_svc_gap_Verify(void);




#define ble_svc_gap_set_chr_changed_cb_Ignore() ble_svc_gap_set_chr_changed_cb_CMockIgnore()
void ble_svc_gap_set_chr_changed_cb_CMockIgnore(void);
#define ble_svc_gap_set_chr_changed_cb_StopIgnore() ble_svc_gap_set_chr_changed_cb_CMockStopIgnore()
void ble_svc_gap_set_chr_changed_cb_CMockStopIgnore(void);
#define ble_svc_gap_set_chr_changed_cb_Expect(cb) ble_svc_gap_set_chr_changed_cb_CMockExpect(__LINE__, cb)
void ble_svc_gap_set_chr_changed_cb_CMockExpect(UNITY_LINE_TYPE cmock_line, ble_svc_gap_chr_changed_fn* cb);
typedef void (* CMOCK_ble_svc_gap_set_chr_changed_cb_CALLBACK)(ble_svc_gap_chr_changed_fn* cb, int cmock_num_calls);
void ble_svc_gap_set_chr_changed_cb_AddCallback(CMOCK_ble_svc_gap_set_chr_changed_cb_CALLBACK Callback);
void ble_svc_gap_set_chr_changed_cb_Stub(CMOCK_ble_svc_gap_set_chr_changed_cb_CALLBACK Callback);
#define ble_svc_gap_set_chr_changed_cb_StubWithCallback ble_svc_gap_set_chr_changed_cb_Stub
#define ble_svc_gap_set_chr_changed_cb_ExpectWithArray(cb, cb_Depth) ble_svc_gap_set_chr_changed_cb_CMockExpectWithArray(__LINE__, cb, cb_Depth)
void ble_svc_gap_set_chr_changed_cb_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, ble_svc_gap_chr_changed_fn* cb, int cb_Depth);
#define ble_svc_gap_set_chr_changed_cb_ReturnThruPtr_cb(cb) ble_svc_gap_set_chr_changed_cb_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_svc_gap_chr_changed_fn))
#define ble_svc_gap_set_chr_changed_cb_ReturnArrayThruPtr_cb(cb, cmock_len) ble_svc_gap_set_chr_changed_cb_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_svc_gap_set_chr_changed_cb_ReturnMemThruPtr_cb(cb, cmock_size) ble_svc_gap_set_chr_changed_cb_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_svc_gap_set_chr_changed_cb_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_svc_gap_chr_changed_fn* cb, size_t cmock_size);
#define ble_svc_gap_set_chr_changed_cb_IgnoreArg_cb() ble_svc_gap_set_chr_changed_cb_CMockIgnoreArg_cb(__LINE__)
void ble_svc_gap_set_chr_changed_cb_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_svc_gap_device_name_IgnoreAndReturn(cmock_retval) ble_svc_gap_device_name_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_svc_gap_device_name_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, const char* cmock_to_return);
#define ble_svc_gap_device_name_StopIgnore() ble_svc_gap_device_name_CMockStopIgnore()
void ble_svc_gap_device_name_CMockStopIgnore(void);
#define ble_svc_gap_device_name_ExpectAndReturn(cmock_retval) ble_svc_gap_device_name_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_svc_gap_device_name_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* cmock_to_return);
typedef const char* (* CMOCK_ble_svc_gap_device_name_CALLBACK)(int cmock_num_calls);
void ble_svc_gap_device_name_AddCallback(CMOCK_ble_svc_gap_device_name_CALLBACK Callback);
void ble_svc_gap_device_name_Stub(CMOCK_ble_svc_gap_device_name_CALLBACK Callback);
#define ble_svc_gap_device_name_StubWithCallback ble_svc_gap_device_name_Stub
#define ble_svc_gap_device_name_set_IgnoreAndReturn(cmock_retval) ble_svc_gap_device_name_set_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_svc_gap_device_name_set_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_svc_gap_device_name_set_StopIgnore() ble_svc_gap_device_name_set_CMockStopIgnore()
void ble_svc_gap_device_name_set_CMockStopIgnore(void);
#define ble_svc_gap_device_name_set_ExpectAndReturn(name, cmock_retval) ble_svc_gap_device_name_set_CMockExpectAndReturn(__LINE__, name, cmock_retval)
void ble_svc_gap_device_name_set_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* name, int cmock_to_return);
typedef int (* CMOCK_ble_svc_gap_device_name_set_CALLBACK)(const char* name, int cmock_num_calls);
void ble_svc_gap_device_name_set_AddCallback(CMOCK_ble_svc_gap_device_name_set_CALLBACK Callback);
void ble_svc_gap_device_name_set_Stub(CMOCK_ble_svc_gap_device_name_set_CALLBACK Callback);
#define ble_svc_gap_device_name_set_StubWithCallback ble_svc_gap_device_name_set_Stub
#define ble_svc_gap_device_name_set_IgnoreArg_name() ble_svc_gap_device_name_set_CMockIgnoreArg_name(__LINE__)
void ble_svc_gap_device_name_set_CMockIgnoreArg_name(UNITY_LINE_TYPE cmock_line);
#define ble_svc_gap_device_appearance_IgnoreAndReturn(cmock_retval) ble_svc_gap_device_appearance_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_svc_gap_device_appearance_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define ble_svc_gap_device_appearance_StopIgnore() ble_svc_gap_device_appearance_CMockStopIgnore()
void ble_svc_gap_device_appearance_CMockStopIgnore(void);
#define ble_svc_gap_device_appearance_ExpectAndReturn(cmock_retval) ble_svc_gap_device_appearance_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_svc_gap_device_appearance_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_ble_svc_gap_device_appearance_CALLBACK)(int cmock_num_calls);
void ble_svc_gap_device_appearance_AddCallback(CMOCK_ble_svc_gap_device_appearance_CALLBACK Callback);
void ble_svc_gap_device_appearance_Stub(CMOCK_ble_svc_gap_device_appearance_CALLBACK Callback);
#define ble_svc_gap_device_appearance_StubWithCallback ble_svc_gap_device_appearance_Stub
#define ble_svc_gap_device_appearance_set_IgnoreAndReturn(cmock_retval) ble_svc_gap_device_appearance_set_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_svc_gap_device_appearance_set_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_svc_gap_device_appearance_set_StopIgnore() ble_svc_gap_device_appearance_set_CMockStopIgnore()
void ble_svc_gap_device_appearance_set_CMockStopIgnore(void);
#define ble_svc_gap_device_appearance_set_ExpectAndReturn(appearance, cmock_retval) ble_svc_gap_device_appearance_set_CMockExpectAndReturn(__LINE__, appearance, cmock_retval)
void ble_svc_gap_device_appearance_set_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t appearance, int cmock_to_return);
typedef int (* CMOCK_ble_svc_gap_device_appearance_set_CALLBACK)(uint16_t appearance, int cmock_num_calls);
void ble_svc_gap_device_appearance_set_AddCallback(CMOCK_ble_svc_gap_device_appearance_set_CALLBACK Callback);
void ble_svc_gap_device_appearance_set_Stub(CMOCK_ble_svc_gap_device_appearance_set_CALLBACK Callback);
#define ble_svc_gap_device_appearance_set_StubWithCallback ble_svc_gap_device_appearance_set_Stub
#define ble_svc_gap_device_appearance_set_IgnoreArg_appearance() ble_svc_gap_device_appearance_set_CMockIgnoreArg_appearance(__LINE__)
void ble_svc_gap_device_appearance_set_CMockIgnoreArg_appearance(UNITY_LINE_TYPE cmock_line);
#define ble_svc_gap_init_Ignore() ble_svc_gap_init_CMockIgnore()
void ble_svc_gap_init_CMockIgnore(void);
#define ble_svc_gap_init_StopIgnore() ble_svc_gap_init_CMockStopIgnore()
void ble_svc_gap_init_CMockStopIgnore(void);
#define ble_svc_gap_init_Expect() ble_svc_gap_init_CMockExpect(__LINE__)
void ble_svc_gap_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_ble_svc_gap_init_CALLBACK)(int cmock_num_calls);
void ble_svc_gap_init_AddCallback(CMOCK_ble_svc_gap_init_CALLBACK Callback);
void ble_svc_gap_init_Stub(CMOCK_ble_svc_gap_init_CALLBACK Callback);
#define ble_svc_gap_init_StubWithCallback ble_svc_gap_init_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

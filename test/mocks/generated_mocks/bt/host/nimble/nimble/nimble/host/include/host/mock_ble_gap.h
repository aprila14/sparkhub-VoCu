#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BLE_GAP_H
#define _MOCK_BLE_GAP_H

#include "unity.h"
#include "ble_gap.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ble_gap_Init(void);
void mock_ble_gap_Destroy(void);
void mock_ble_gap_Verify(void);


struct ble_gap_periodic_sync_params
{
    int dummyByte;
};

struct ble_gap_ext_adv_params
{
    int dummyByte;
};

struct ble_gap_periodic_adv_params
{
    int dummyByte;
};


#define ble_gap_conn_find_IgnoreAndReturn(cmock_retval) ble_gap_conn_find_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_find_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_conn_find_StopIgnore() ble_gap_conn_find_CMockStopIgnore()
void ble_gap_conn_find_CMockStopIgnore(void);
#define ble_gap_conn_find_ExpectAndReturn(handle, out_desc, cmock_retval) ble_gap_conn_find_CMockExpectAndReturn(__LINE__, handle, out_desc, cmock_retval)
void ble_gap_conn_find_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t handle, struct ble_gap_conn_desc* out_desc, int cmock_to_return);
typedef int (* CMOCK_ble_gap_conn_find_CALLBACK)(uint16_t handle, struct ble_gap_conn_desc* out_desc, int cmock_num_calls);
void ble_gap_conn_find_AddCallback(CMOCK_ble_gap_conn_find_CALLBACK Callback);
void ble_gap_conn_find_Stub(CMOCK_ble_gap_conn_find_CALLBACK Callback);
#define ble_gap_conn_find_StubWithCallback ble_gap_conn_find_Stub
#define ble_gap_conn_find_ExpectWithArrayAndReturn(handle, out_desc, out_desc_Depth, cmock_retval) ble_gap_conn_find_CMockExpectWithArrayAndReturn(__LINE__, handle, out_desc, out_desc_Depth, cmock_retval)
void ble_gap_conn_find_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t handle, struct ble_gap_conn_desc* out_desc, int out_desc_Depth, int cmock_to_return);
#define ble_gap_conn_find_ReturnThruPtr_out_desc(out_desc) ble_gap_conn_find_CMockReturnMemThruPtr_out_desc(__LINE__, out_desc, sizeof(struct ble_gap_conn_desc))
#define ble_gap_conn_find_ReturnArrayThruPtr_out_desc(out_desc, cmock_len) ble_gap_conn_find_CMockReturnMemThruPtr_out_desc(__LINE__, out_desc, cmock_len * sizeof(*out_desc))
#define ble_gap_conn_find_ReturnMemThruPtr_out_desc(out_desc, cmock_size) ble_gap_conn_find_CMockReturnMemThruPtr_out_desc(__LINE__, out_desc, cmock_size)
void ble_gap_conn_find_CMockReturnMemThruPtr_out_desc(UNITY_LINE_TYPE cmock_line, struct ble_gap_conn_desc* out_desc, size_t cmock_size);
#define ble_gap_conn_find_IgnoreArg_handle() ble_gap_conn_find_CMockIgnoreArg_handle(__LINE__)
void ble_gap_conn_find_CMockIgnoreArg_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_conn_find_IgnoreArg_out_desc() ble_gap_conn_find_CMockIgnoreArg_out_desc(__LINE__)
void ble_gap_conn_find_CMockIgnoreArg_out_desc(UNITY_LINE_TYPE cmock_line);
#define ble_gap_conn_find_by_addr_IgnoreAndReturn(cmock_retval) ble_gap_conn_find_by_addr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_find_by_addr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_conn_find_by_addr_StopIgnore() ble_gap_conn_find_by_addr_CMockStopIgnore()
void ble_gap_conn_find_by_addr_CMockStopIgnore(void);
#define ble_gap_conn_find_by_addr_ExpectAndReturn(addr, out_desc, cmock_retval) ble_gap_conn_find_by_addr_CMockExpectAndReturn(__LINE__, addr, out_desc, cmock_retval)
void ble_gap_conn_find_by_addr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addr, struct ble_gap_conn_desc* out_desc, int cmock_to_return);
typedef int (* CMOCK_ble_gap_conn_find_by_addr_CALLBACK)(const ble_addr_t* addr, struct ble_gap_conn_desc* out_desc, int cmock_num_calls);
void ble_gap_conn_find_by_addr_AddCallback(CMOCK_ble_gap_conn_find_by_addr_CALLBACK Callback);
void ble_gap_conn_find_by_addr_Stub(CMOCK_ble_gap_conn_find_by_addr_CALLBACK Callback);
#define ble_gap_conn_find_by_addr_StubWithCallback ble_gap_conn_find_by_addr_Stub
#define ble_gap_conn_find_by_addr_ExpectWithArrayAndReturn(addr, addr_Depth, out_desc, out_desc_Depth, cmock_retval) ble_gap_conn_find_by_addr_CMockExpectWithArrayAndReturn(__LINE__, addr, addr_Depth, out_desc, out_desc_Depth, cmock_retval)
void ble_gap_conn_find_by_addr_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addr, int addr_Depth, struct ble_gap_conn_desc* out_desc, int out_desc_Depth, int cmock_to_return);
#define ble_gap_conn_find_by_addr_ReturnThruPtr_out_desc(out_desc) ble_gap_conn_find_by_addr_CMockReturnMemThruPtr_out_desc(__LINE__, out_desc, sizeof(struct ble_gap_conn_desc))
#define ble_gap_conn_find_by_addr_ReturnArrayThruPtr_out_desc(out_desc, cmock_len) ble_gap_conn_find_by_addr_CMockReturnMemThruPtr_out_desc(__LINE__, out_desc, cmock_len * sizeof(*out_desc))
#define ble_gap_conn_find_by_addr_ReturnMemThruPtr_out_desc(out_desc, cmock_size) ble_gap_conn_find_by_addr_CMockReturnMemThruPtr_out_desc(__LINE__, out_desc, cmock_size)
void ble_gap_conn_find_by_addr_CMockReturnMemThruPtr_out_desc(UNITY_LINE_TYPE cmock_line, struct ble_gap_conn_desc* out_desc, size_t cmock_size);
#define ble_gap_conn_find_by_addr_IgnoreArg_addr() ble_gap_conn_find_by_addr_CMockIgnoreArg_addr(__LINE__)
void ble_gap_conn_find_by_addr_CMockIgnoreArg_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_conn_find_by_addr_IgnoreArg_out_desc() ble_gap_conn_find_by_addr_CMockIgnoreArg_out_desc(__LINE__)
void ble_gap_conn_find_by_addr_CMockIgnoreArg_out_desc(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_event_cb_IgnoreAndReturn(cmock_retval) ble_gap_set_event_cb_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_set_event_cb_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_set_event_cb_StopIgnore() ble_gap_set_event_cb_CMockStopIgnore()
void ble_gap_set_event_cb_CMockStopIgnore(void);
#define ble_gap_set_event_cb_ExpectAndReturn(conn_handle, cb, cb_arg, cmock_retval) ble_gap_set_event_cb_CMockExpectAndReturn(__LINE__, conn_handle, cb, cb_arg, cmock_retval)
void ble_gap_set_event_cb_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_set_event_cb_CALLBACK)(uint16_t conn_handle, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_set_event_cb_AddCallback(CMOCK_ble_gap_set_event_cb_CALLBACK Callback);
void ble_gap_set_event_cb_Stub(CMOCK_ble_gap_set_event_cb_CALLBACK Callback);
#define ble_gap_set_event_cb_StubWithCallback ble_gap_set_event_cb_Stub
#define ble_gap_set_event_cb_ExpectWithArrayAndReturn(conn_handle, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_set_event_cb_CMockExpectWithArrayAndReturn(__LINE__, conn_handle, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_set_event_cb_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_set_event_cb_ReturnThruPtr_cb(cb) ble_gap_set_event_cb_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_set_event_cb_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_set_event_cb_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_set_event_cb_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_set_event_cb_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_set_event_cb_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_set_event_cb_ReturnThruPtr_cb_arg(cb_arg) ble_gap_set_event_cb_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_set_event_cb_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_set_event_cb_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_set_event_cb_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_set_event_cb_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_set_event_cb_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_set_event_cb_IgnoreArg_conn_handle() ble_gap_set_event_cb_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_set_event_cb_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_event_cb_IgnoreArg_cb() ble_gap_set_event_cb_CMockIgnoreArg_cb(__LINE__)
void ble_gap_set_event_cb_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_event_cb_IgnoreArg_cb_arg() ble_gap_set_event_cb_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_set_event_cb_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_start_IgnoreAndReturn(cmock_retval) ble_gap_adv_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_start_StopIgnore() ble_gap_adv_start_CMockStopIgnore()
void ble_gap_adv_start_CMockStopIgnore(void);
#define ble_gap_adv_start_ExpectAndReturn(own_addr_type, direct_addr, duration_ms, adv_params, cb, cb_arg, cmock_retval) ble_gap_adv_start_CMockExpectAndReturn(__LINE__, own_addr_type, direct_addr, duration_ms, adv_params, cb, cb_arg, cmock_retval)
void ble_gap_adv_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, const ble_addr_t* direct_addr, int32_t duration_ms, const struct ble_gap_adv_params* adv_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_start_CALLBACK)(uint8_t own_addr_type, const ble_addr_t* direct_addr, int32_t duration_ms, const struct ble_gap_adv_params* adv_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_adv_start_AddCallback(CMOCK_ble_gap_adv_start_CALLBACK Callback);
void ble_gap_adv_start_Stub(CMOCK_ble_gap_adv_start_CALLBACK Callback);
#define ble_gap_adv_start_StubWithCallback ble_gap_adv_start_Stub
#define ble_gap_adv_start_ExpectWithArrayAndReturn(own_addr_type, direct_addr, direct_addr_Depth, duration_ms, adv_params, adv_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_adv_start_CMockExpectWithArrayAndReturn(__LINE__, own_addr_type, direct_addr, direct_addr_Depth, duration_ms, adv_params, adv_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_adv_start_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, const ble_addr_t* direct_addr, int direct_addr_Depth, int32_t duration_ms, const struct ble_gap_adv_params* adv_params, int adv_params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_adv_start_ReturnThruPtr_cb(cb) ble_gap_adv_start_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_adv_start_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_adv_start_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_adv_start_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_adv_start_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_adv_start_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_adv_start_ReturnThruPtr_cb_arg(cb_arg) ble_gap_adv_start_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_adv_start_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_adv_start_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_adv_start_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_adv_start_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_adv_start_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_adv_start_IgnoreArg_own_addr_type() ble_gap_adv_start_CMockIgnoreArg_own_addr_type(__LINE__)
void ble_gap_adv_start_CMockIgnoreArg_own_addr_type(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_start_IgnoreArg_direct_addr() ble_gap_adv_start_CMockIgnoreArg_direct_addr(__LINE__)
void ble_gap_adv_start_CMockIgnoreArg_direct_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_start_IgnoreArg_duration_ms() ble_gap_adv_start_CMockIgnoreArg_duration_ms(__LINE__)
void ble_gap_adv_start_CMockIgnoreArg_duration_ms(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_start_IgnoreArg_adv_params() ble_gap_adv_start_CMockIgnoreArg_adv_params(__LINE__)
void ble_gap_adv_start_CMockIgnoreArg_adv_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_start_IgnoreArg_cb() ble_gap_adv_start_CMockIgnoreArg_cb(__LINE__)
void ble_gap_adv_start_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_start_IgnoreArg_cb_arg() ble_gap_adv_start_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_adv_start_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_stop_IgnoreAndReturn(cmock_retval) ble_gap_adv_stop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_stop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_stop_StopIgnore() ble_gap_adv_stop_CMockStopIgnore()
void ble_gap_adv_stop_CMockStopIgnore(void);
#define ble_gap_adv_stop_ExpectAndReturn(cmock_retval) ble_gap_adv_stop_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_stop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_stop_CALLBACK)(int cmock_num_calls);
void ble_gap_adv_stop_AddCallback(CMOCK_ble_gap_adv_stop_CALLBACK Callback);
void ble_gap_adv_stop_Stub(CMOCK_ble_gap_adv_stop_CALLBACK Callback);
#define ble_gap_adv_stop_StubWithCallback ble_gap_adv_stop_Stub
#define ble_gap_adv_active_IgnoreAndReturn(cmock_retval) ble_gap_adv_active_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_active_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_active_StopIgnore() ble_gap_adv_active_CMockStopIgnore()
void ble_gap_adv_active_CMockStopIgnore(void);
#define ble_gap_adv_active_ExpectAndReturn(cmock_retval) ble_gap_adv_active_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_active_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_active_CALLBACK)(int cmock_num_calls);
void ble_gap_adv_active_AddCallback(CMOCK_ble_gap_adv_active_CALLBACK Callback);
void ble_gap_adv_active_Stub(CMOCK_ble_gap_adv_active_CALLBACK Callback);
#define ble_gap_adv_active_StubWithCallback ble_gap_adv_active_Stub
#define ble_gap_adv_set_data_IgnoreAndReturn(cmock_retval) ble_gap_adv_set_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_set_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_set_data_StopIgnore() ble_gap_adv_set_data_CMockStopIgnore()
void ble_gap_adv_set_data_CMockStopIgnore(void);
#define ble_gap_adv_set_data_ExpectAndReturn(data, data_len, cmock_retval) ble_gap_adv_set_data_CMockExpectAndReturn(__LINE__, data, data_len, cmock_retval)
void ble_gap_adv_set_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* data, int data_len, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_set_data_CALLBACK)(const uint8_t* data, int data_len, int cmock_num_calls);
void ble_gap_adv_set_data_AddCallback(CMOCK_ble_gap_adv_set_data_CALLBACK Callback);
void ble_gap_adv_set_data_Stub(CMOCK_ble_gap_adv_set_data_CALLBACK Callback);
#define ble_gap_adv_set_data_StubWithCallback ble_gap_adv_set_data_Stub
#define ble_gap_adv_set_data_ExpectWithArrayAndReturn(data, data_Depth, data_len, cmock_retval) ble_gap_adv_set_data_CMockExpectWithArrayAndReturn(__LINE__, data, data_Depth, data_len, cmock_retval)
void ble_gap_adv_set_data_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* data, int data_Depth, int data_len, int cmock_to_return);
#define ble_gap_adv_set_data_IgnoreArg_data() ble_gap_adv_set_data_CMockIgnoreArg_data(__LINE__)
void ble_gap_adv_set_data_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_set_data_IgnoreArg_data_len() ble_gap_adv_set_data_CMockIgnoreArg_data_len(__LINE__)
void ble_gap_adv_set_data_CMockIgnoreArg_data_len(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_rsp_set_data_IgnoreAndReturn(cmock_retval) ble_gap_adv_rsp_set_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_rsp_set_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_rsp_set_data_StopIgnore() ble_gap_adv_rsp_set_data_CMockStopIgnore()
void ble_gap_adv_rsp_set_data_CMockStopIgnore(void);
#define ble_gap_adv_rsp_set_data_ExpectAndReturn(data, data_len, cmock_retval) ble_gap_adv_rsp_set_data_CMockExpectAndReturn(__LINE__, data, data_len, cmock_retval)
void ble_gap_adv_rsp_set_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* data, int data_len, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_rsp_set_data_CALLBACK)(const uint8_t* data, int data_len, int cmock_num_calls);
void ble_gap_adv_rsp_set_data_AddCallback(CMOCK_ble_gap_adv_rsp_set_data_CALLBACK Callback);
void ble_gap_adv_rsp_set_data_Stub(CMOCK_ble_gap_adv_rsp_set_data_CALLBACK Callback);
#define ble_gap_adv_rsp_set_data_StubWithCallback ble_gap_adv_rsp_set_data_Stub
#define ble_gap_adv_rsp_set_data_ExpectWithArrayAndReturn(data, data_Depth, data_len, cmock_retval) ble_gap_adv_rsp_set_data_CMockExpectWithArrayAndReturn(__LINE__, data, data_Depth, data_len, cmock_retval)
void ble_gap_adv_rsp_set_data_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* data, int data_Depth, int data_len, int cmock_to_return);
#define ble_gap_adv_rsp_set_data_IgnoreArg_data() ble_gap_adv_rsp_set_data_CMockIgnoreArg_data(__LINE__)
void ble_gap_adv_rsp_set_data_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_rsp_set_data_IgnoreArg_data_len() ble_gap_adv_rsp_set_data_CMockIgnoreArg_data_len(__LINE__)
void ble_gap_adv_rsp_set_data_CMockIgnoreArg_data_len(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_set_fields_IgnoreAndReturn(cmock_retval) ble_gap_adv_set_fields_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_set_fields_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_set_fields_StopIgnore() ble_gap_adv_set_fields_CMockStopIgnore()
void ble_gap_adv_set_fields_CMockStopIgnore(void);
#define ble_gap_adv_set_fields_ExpectAndReturn(rsp_fields, cmock_retval) ble_gap_adv_set_fields_CMockExpectAndReturn(__LINE__, rsp_fields, cmock_retval)
void ble_gap_adv_set_fields_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_hs_adv_fields* rsp_fields, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_set_fields_CALLBACK)(const struct ble_hs_adv_fields* rsp_fields, int cmock_num_calls);
void ble_gap_adv_set_fields_AddCallback(CMOCK_ble_gap_adv_set_fields_CALLBACK Callback);
void ble_gap_adv_set_fields_Stub(CMOCK_ble_gap_adv_set_fields_CALLBACK Callback);
#define ble_gap_adv_set_fields_StubWithCallback ble_gap_adv_set_fields_Stub
#define ble_gap_adv_set_fields_ExpectWithArrayAndReturn(rsp_fields, rsp_fields_Depth, cmock_retval) ble_gap_adv_set_fields_CMockExpectWithArrayAndReturn(__LINE__, rsp_fields, rsp_fields_Depth, cmock_retval)
void ble_gap_adv_set_fields_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_hs_adv_fields* rsp_fields, int rsp_fields_Depth, int cmock_to_return);
#define ble_gap_adv_set_fields_IgnoreArg_rsp_fields() ble_gap_adv_set_fields_CMockIgnoreArg_rsp_fields(__LINE__)
void ble_gap_adv_set_fields_CMockIgnoreArg_rsp_fields(UNITY_LINE_TYPE cmock_line);
#define ble_gap_adv_rsp_set_fields_IgnoreAndReturn(cmock_retval) ble_gap_adv_rsp_set_fields_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_adv_rsp_set_fields_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_adv_rsp_set_fields_StopIgnore() ble_gap_adv_rsp_set_fields_CMockStopIgnore()
void ble_gap_adv_rsp_set_fields_CMockStopIgnore(void);
#define ble_gap_adv_rsp_set_fields_ExpectAndReturn(rsp_fields, cmock_retval) ble_gap_adv_rsp_set_fields_CMockExpectAndReturn(__LINE__, rsp_fields, cmock_retval)
void ble_gap_adv_rsp_set_fields_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_hs_adv_fields* rsp_fields, int cmock_to_return);
typedef int (* CMOCK_ble_gap_adv_rsp_set_fields_CALLBACK)(const struct ble_hs_adv_fields* rsp_fields, int cmock_num_calls);
void ble_gap_adv_rsp_set_fields_AddCallback(CMOCK_ble_gap_adv_rsp_set_fields_CALLBACK Callback);
void ble_gap_adv_rsp_set_fields_Stub(CMOCK_ble_gap_adv_rsp_set_fields_CALLBACK Callback);
#define ble_gap_adv_rsp_set_fields_StubWithCallback ble_gap_adv_rsp_set_fields_Stub
#define ble_gap_adv_rsp_set_fields_ExpectWithArrayAndReturn(rsp_fields, rsp_fields_Depth, cmock_retval) ble_gap_adv_rsp_set_fields_CMockExpectWithArrayAndReturn(__LINE__, rsp_fields, rsp_fields_Depth, cmock_retval)
void ble_gap_adv_rsp_set_fields_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_hs_adv_fields* rsp_fields, int rsp_fields_Depth, int cmock_to_return);
#define ble_gap_adv_rsp_set_fields_IgnoreArg_rsp_fields() ble_gap_adv_rsp_set_fields_CMockIgnoreArg_rsp_fields(__LINE__)
void ble_gap_adv_rsp_set_fields_CMockIgnoreArg_rsp_fields(UNITY_LINE_TYPE cmock_line);
#define ble_hs_hci_util_set_data_len_IgnoreAndReturn(cmock_retval) ble_hs_hci_util_set_data_len_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_hs_hci_util_set_data_len_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_hs_hci_util_set_data_len_StopIgnore() ble_hs_hci_util_set_data_len_CMockStopIgnore()
void ble_hs_hci_util_set_data_len_CMockStopIgnore(void);
#define ble_hs_hci_util_set_data_len_ExpectAndReturn(conn_handle, tx_octets, tx_time, cmock_retval) ble_hs_hci_util_set_data_len_CMockExpectAndReturn(__LINE__, conn_handle, tx_octets, tx_time, cmock_retval)
void ble_hs_hci_util_set_data_len_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint16_t tx_octets, uint16_t tx_time, int cmock_to_return);
typedef int (* CMOCK_ble_hs_hci_util_set_data_len_CALLBACK)(uint16_t conn_handle, uint16_t tx_octets, uint16_t tx_time, int cmock_num_calls);
void ble_hs_hci_util_set_data_len_AddCallback(CMOCK_ble_hs_hci_util_set_data_len_CALLBACK Callback);
void ble_hs_hci_util_set_data_len_Stub(CMOCK_ble_hs_hci_util_set_data_len_CALLBACK Callback);
#define ble_hs_hci_util_set_data_len_StubWithCallback ble_hs_hci_util_set_data_len_Stub
#define ble_hs_hci_util_set_data_len_IgnoreArg_conn_handle() ble_hs_hci_util_set_data_len_CMockIgnoreArg_conn_handle(__LINE__)
void ble_hs_hci_util_set_data_len_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_hs_hci_util_set_data_len_IgnoreArg_tx_octets() ble_hs_hci_util_set_data_len_CMockIgnoreArg_tx_octets(__LINE__)
void ble_hs_hci_util_set_data_len_CMockIgnoreArg_tx_octets(UNITY_LINE_TYPE cmock_line);
#define ble_hs_hci_util_set_data_len_IgnoreArg_tx_time() ble_hs_hci_util_set_data_len_CMockIgnoreArg_tx_time(__LINE__)
void ble_hs_hci_util_set_data_len_CMockIgnoreArg_tx_time(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_configure_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_configure_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_configure_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_configure_StopIgnore() ble_gap_ext_adv_configure_CMockStopIgnore()
void ble_gap_ext_adv_configure_CMockStopIgnore(void);
#define ble_gap_ext_adv_configure_ExpectAndReturn(instance, params, selected_tx_power, cb, cb_arg, cmock_retval) ble_gap_ext_adv_configure_CMockExpectAndReturn(__LINE__, instance, params, selected_tx_power, cb, cb_arg, cmock_retval)
void ble_gap_ext_adv_configure_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, const struct ble_gap_ext_adv_params* params, int8_t* selected_tx_power, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_configure_CALLBACK)(uint8_t instance, const struct ble_gap_ext_adv_params* params, int8_t* selected_tx_power, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_ext_adv_configure_AddCallback(CMOCK_ble_gap_ext_adv_configure_CALLBACK Callback);
void ble_gap_ext_adv_configure_Stub(CMOCK_ble_gap_ext_adv_configure_CALLBACK Callback);
#define ble_gap_ext_adv_configure_StubWithCallback ble_gap_ext_adv_configure_Stub
#define ble_gap_ext_adv_configure_ExpectWithArrayAndReturn(instance, params, params_Depth, selected_tx_power, selected_tx_power_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_ext_adv_configure_CMockExpectWithArrayAndReturn(__LINE__, instance, params, params_Depth, selected_tx_power, selected_tx_power_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_ext_adv_configure_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, const struct ble_gap_ext_adv_params* params, int params_Depth, int8_t* selected_tx_power, int selected_tx_power_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_ext_adv_configure_ReturnThruPtr_selected_tx_power(selected_tx_power) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_selected_tx_power(__LINE__, selected_tx_power, sizeof(int8_t))
#define ble_gap_ext_adv_configure_ReturnArrayThruPtr_selected_tx_power(selected_tx_power, cmock_len) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_selected_tx_power(__LINE__, selected_tx_power, cmock_len * sizeof(*selected_tx_power))
#define ble_gap_ext_adv_configure_ReturnMemThruPtr_selected_tx_power(selected_tx_power, cmock_size) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_selected_tx_power(__LINE__, selected_tx_power, cmock_size)
void ble_gap_ext_adv_configure_CMockReturnMemThruPtr_selected_tx_power(UNITY_LINE_TYPE cmock_line, int8_t* selected_tx_power, size_t cmock_size);
#define ble_gap_ext_adv_configure_ReturnThruPtr_cb(cb) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_ext_adv_configure_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_ext_adv_configure_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_ext_adv_configure_ReturnThruPtr_cb_arg(cb_arg) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_ext_adv_configure_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_ext_adv_configure_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_ext_adv_configure_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_ext_adv_configure_IgnoreArg_instance() ble_gap_ext_adv_configure_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_configure_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_configure_IgnoreArg_params() ble_gap_ext_adv_configure_CMockIgnoreArg_params(__LINE__)
void ble_gap_ext_adv_configure_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_configure_IgnoreArg_selected_tx_power() ble_gap_ext_adv_configure_CMockIgnoreArg_selected_tx_power(__LINE__)
void ble_gap_ext_adv_configure_CMockIgnoreArg_selected_tx_power(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_configure_IgnoreArg_cb() ble_gap_ext_adv_configure_CMockIgnoreArg_cb(__LINE__)
void ble_gap_ext_adv_configure_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_configure_IgnoreArg_cb_arg() ble_gap_ext_adv_configure_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_ext_adv_configure_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_set_addr_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_set_addr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_set_addr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_set_addr_StopIgnore() ble_gap_ext_adv_set_addr_CMockStopIgnore()
void ble_gap_ext_adv_set_addr_CMockStopIgnore(void);
#define ble_gap_ext_adv_set_addr_ExpectAndReturn(instance, addr, cmock_retval) ble_gap_ext_adv_set_addr_CMockExpectAndReturn(__LINE__, instance, addr, cmock_retval)
void ble_gap_ext_adv_set_addr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, const ble_addr_t* addr, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_set_addr_CALLBACK)(uint8_t instance, const ble_addr_t* addr, int cmock_num_calls);
void ble_gap_ext_adv_set_addr_AddCallback(CMOCK_ble_gap_ext_adv_set_addr_CALLBACK Callback);
void ble_gap_ext_adv_set_addr_Stub(CMOCK_ble_gap_ext_adv_set_addr_CALLBACK Callback);
#define ble_gap_ext_adv_set_addr_StubWithCallback ble_gap_ext_adv_set_addr_Stub
#define ble_gap_ext_adv_set_addr_ExpectWithArrayAndReturn(instance, addr, addr_Depth, cmock_retval) ble_gap_ext_adv_set_addr_CMockExpectWithArrayAndReturn(__LINE__, instance, addr, addr_Depth, cmock_retval)
void ble_gap_ext_adv_set_addr_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, const ble_addr_t* addr, int addr_Depth, int cmock_to_return);
#define ble_gap_ext_adv_set_addr_IgnoreArg_instance() ble_gap_ext_adv_set_addr_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_set_addr_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_set_addr_IgnoreArg_addr() ble_gap_ext_adv_set_addr_CMockIgnoreArg_addr(__LINE__)
void ble_gap_ext_adv_set_addr_CMockIgnoreArg_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_start_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_start_StopIgnore() ble_gap_ext_adv_start_CMockStopIgnore()
void ble_gap_ext_adv_start_CMockStopIgnore(void);
#define ble_gap_ext_adv_start_ExpectAndReturn(instance, duration, max_events, cmock_retval) ble_gap_ext_adv_start_CMockExpectAndReturn(__LINE__, instance, duration, max_events, cmock_retval)
void ble_gap_ext_adv_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, int duration, int max_events, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_start_CALLBACK)(uint8_t instance, int duration, int max_events, int cmock_num_calls);
void ble_gap_ext_adv_start_AddCallback(CMOCK_ble_gap_ext_adv_start_CALLBACK Callback);
void ble_gap_ext_adv_start_Stub(CMOCK_ble_gap_ext_adv_start_CALLBACK Callback);
#define ble_gap_ext_adv_start_StubWithCallback ble_gap_ext_adv_start_Stub
#define ble_gap_ext_adv_start_IgnoreArg_instance() ble_gap_ext_adv_start_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_start_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_start_IgnoreArg_duration() ble_gap_ext_adv_start_CMockIgnoreArg_duration(__LINE__)
void ble_gap_ext_adv_start_CMockIgnoreArg_duration(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_start_IgnoreArg_max_events() ble_gap_ext_adv_start_CMockIgnoreArg_max_events(__LINE__)
void ble_gap_ext_adv_start_CMockIgnoreArg_max_events(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_stop_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_stop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_stop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_stop_StopIgnore() ble_gap_ext_adv_stop_CMockStopIgnore()
void ble_gap_ext_adv_stop_CMockStopIgnore(void);
#define ble_gap_ext_adv_stop_ExpectAndReturn(instance, cmock_retval) ble_gap_ext_adv_stop_CMockExpectAndReturn(__LINE__, instance, cmock_retval)
void ble_gap_ext_adv_stop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_stop_CALLBACK)(uint8_t instance, int cmock_num_calls);
void ble_gap_ext_adv_stop_AddCallback(CMOCK_ble_gap_ext_adv_stop_CALLBACK Callback);
void ble_gap_ext_adv_stop_Stub(CMOCK_ble_gap_ext_adv_stop_CALLBACK Callback);
#define ble_gap_ext_adv_stop_StubWithCallback ble_gap_ext_adv_stop_Stub
#define ble_gap_ext_adv_stop_IgnoreArg_instance() ble_gap_ext_adv_stop_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_stop_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_set_data_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_set_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_set_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_set_data_StopIgnore() ble_gap_ext_adv_set_data_CMockStopIgnore()
void ble_gap_ext_adv_set_data_CMockStopIgnore(void);
#define ble_gap_ext_adv_set_data_ExpectAndReturn(instance, data, cmock_retval) ble_gap_ext_adv_set_data_CMockExpectAndReturn(__LINE__, instance, data, cmock_retval)
void ble_gap_ext_adv_set_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, struct os_mbuf* data, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_set_data_CALLBACK)(uint8_t instance, struct os_mbuf* data, int cmock_num_calls);
void ble_gap_ext_adv_set_data_AddCallback(CMOCK_ble_gap_ext_adv_set_data_CALLBACK Callback);
void ble_gap_ext_adv_set_data_Stub(CMOCK_ble_gap_ext_adv_set_data_CALLBACK Callback);
#define ble_gap_ext_adv_set_data_StubWithCallback ble_gap_ext_adv_set_data_Stub
#define ble_gap_ext_adv_set_data_ExpectWithArrayAndReturn(instance, data, data_Depth, cmock_retval) ble_gap_ext_adv_set_data_CMockExpectWithArrayAndReturn(__LINE__, instance, data, data_Depth, cmock_retval)
void ble_gap_ext_adv_set_data_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, struct os_mbuf* data, int data_Depth, int cmock_to_return);
#define ble_gap_ext_adv_set_data_ReturnThruPtr_data(data) ble_gap_ext_adv_set_data_CMockReturnMemThruPtr_data(__LINE__, data, sizeof(struct os_mbuf))
#define ble_gap_ext_adv_set_data_ReturnArrayThruPtr_data(data, cmock_len) ble_gap_ext_adv_set_data_CMockReturnMemThruPtr_data(__LINE__, data, cmock_len * sizeof(*data))
#define ble_gap_ext_adv_set_data_ReturnMemThruPtr_data(data, cmock_size) ble_gap_ext_adv_set_data_CMockReturnMemThruPtr_data(__LINE__, data, cmock_size)
void ble_gap_ext_adv_set_data_CMockReturnMemThruPtr_data(UNITY_LINE_TYPE cmock_line, struct os_mbuf* data, size_t cmock_size);
#define ble_gap_ext_adv_set_data_IgnoreArg_instance() ble_gap_ext_adv_set_data_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_set_data_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_set_data_IgnoreArg_data() ble_gap_ext_adv_set_data_CMockIgnoreArg_data(__LINE__)
void ble_gap_ext_adv_set_data_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_rsp_set_data_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_rsp_set_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_rsp_set_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_rsp_set_data_StopIgnore() ble_gap_ext_adv_rsp_set_data_CMockStopIgnore()
void ble_gap_ext_adv_rsp_set_data_CMockStopIgnore(void);
#define ble_gap_ext_adv_rsp_set_data_ExpectAndReturn(instance, data, cmock_retval) ble_gap_ext_adv_rsp_set_data_CMockExpectAndReturn(__LINE__, instance, data, cmock_retval)
void ble_gap_ext_adv_rsp_set_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, struct os_mbuf* data, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_rsp_set_data_CALLBACK)(uint8_t instance, struct os_mbuf* data, int cmock_num_calls);
void ble_gap_ext_adv_rsp_set_data_AddCallback(CMOCK_ble_gap_ext_adv_rsp_set_data_CALLBACK Callback);
void ble_gap_ext_adv_rsp_set_data_Stub(CMOCK_ble_gap_ext_adv_rsp_set_data_CALLBACK Callback);
#define ble_gap_ext_adv_rsp_set_data_StubWithCallback ble_gap_ext_adv_rsp_set_data_Stub
#define ble_gap_ext_adv_rsp_set_data_ExpectWithArrayAndReturn(instance, data, data_Depth, cmock_retval) ble_gap_ext_adv_rsp_set_data_CMockExpectWithArrayAndReturn(__LINE__, instance, data, data_Depth, cmock_retval)
void ble_gap_ext_adv_rsp_set_data_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, struct os_mbuf* data, int data_Depth, int cmock_to_return);
#define ble_gap_ext_adv_rsp_set_data_ReturnThruPtr_data(data) ble_gap_ext_adv_rsp_set_data_CMockReturnMemThruPtr_data(__LINE__, data, sizeof(struct os_mbuf))
#define ble_gap_ext_adv_rsp_set_data_ReturnArrayThruPtr_data(data, cmock_len) ble_gap_ext_adv_rsp_set_data_CMockReturnMemThruPtr_data(__LINE__, data, cmock_len * sizeof(*data))
#define ble_gap_ext_adv_rsp_set_data_ReturnMemThruPtr_data(data, cmock_size) ble_gap_ext_adv_rsp_set_data_CMockReturnMemThruPtr_data(__LINE__, data, cmock_size)
void ble_gap_ext_adv_rsp_set_data_CMockReturnMemThruPtr_data(UNITY_LINE_TYPE cmock_line, struct os_mbuf* data, size_t cmock_size);
#define ble_gap_ext_adv_rsp_set_data_IgnoreArg_instance() ble_gap_ext_adv_rsp_set_data_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_rsp_set_data_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_rsp_set_data_IgnoreArg_data() ble_gap_ext_adv_rsp_set_data_CMockIgnoreArg_data(__LINE__)
void ble_gap_ext_adv_rsp_set_data_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_remove_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_remove_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_remove_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_remove_StopIgnore() ble_gap_ext_adv_remove_CMockStopIgnore()
void ble_gap_ext_adv_remove_CMockStopIgnore(void);
#define ble_gap_ext_adv_remove_ExpectAndReturn(instance, cmock_retval) ble_gap_ext_adv_remove_CMockExpectAndReturn(__LINE__, instance, cmock_retval)
void ble_gap_ext_adv_remove_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_remove_CALLBACK)(uint8_t instance, int cmock_num_calls);
void ble_gap_ext_adv_remove_AddCallback(CMOCK_ble_gap_ext_adv_remove_CALLBACK Callback);
void ble_gap_ext_adv_remove_Stub(CMOCK_ble_gap_ext_adv_remove_CALLBACK Callback);
#define ble_gap_ext_adv_remove_StubWithCallback ble_gap_ext_adv_remove_Stub
#define ble_gap_ext_adv_remove_IgnoreArg_instance() ble_gap_ext_adv_remove_CMockIgnoreArg_instance(__LINE__)
void ble_gap_ext_adv_remove_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_adv_clear_IgnoreAndReturn(cmock_retval) ble_gap_ext_adv_clear_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_clear_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_adv_clear_StopIgnore() ble_gap_ext_adv_clear_CMockStopIgnore()
void ble_gap_ext_adv_clear_CMockStopIgnore(void);
#define ble_gap_ext_adv_clear_ExpectAndReturn(cmock_retval) ble_gap_ext_adv_clear_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_adv_clear_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_adv_clear_CALLBACK)(int cmock_num_calls);
void ble_gap_ext_adv_clear_AddCallback(CMOCK_ble_gap_ext_adv_clear_CALLBACK Callback);
void ble_gap_ext_adv_clear_Stub(CMOCK_ble_gap_ext_adv_clear_CALLBACK Callback);
#define ble_gap_ext_adv_clear_StubWithCallback ble_gap_ext_adv_clear_Stub
#define ble_gap_periodic_adv_configure_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_configure_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_configure_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_configure_StopIgnore() ble_gap_periodic_adv_configure_CMockStopIgnore()
void ble_gap_periodic_adv_configure_CMockStopIgnore(void);
#define ble_gap_periodic_adv_configure_ExpectAndReturn(instance, params, cmock_retval) ble_gap_periodic_adv_configure_CMockExpectAndReturn(__LINE__, instance, params, cmock_retval)
void ble_gap_periodic_adv_configure_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, const struct ble_gap_periodic_adv_params* params, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_configure_CALLBACK)(uint8_t instance, const struct ble_gap_periodic_adv_params* params, int cmock_num_calls);
void ble_gap_periodic_adv_configure_AddCallback(CMOCK_ble_gap_periodic_adv_configure_CALLBACK Callback);
void ble_gap_periodic_adv_configure_Stub(CMOCK_ble_gap_periodic_adv_configure_CALLBACK Callback);
#define ble_gap_periodic_adv_configure_StubWithCallback ble_gap_periodic_adv_configure_Stub
#define ble_gap_periodic_adv_configure_ExpectWithArrayAndReturn(instance, params, params_Depth, cmock_retval) ble_gap_periodic_adv_configure_CMockExpectWithArrayAndReturn(__LINE__, instance, params, params_Depth, cmock_retval)
void ble_gap_periodic_adv_configure_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, const struct ble_gap_periodic_adv_params* params, int params_Depth, int cmock_to_return);
#define ble_gap_periodic_adv_configure_IgnoreArg_instance() ble_gap_periodic_adv_configure_CMockIgnoreArg_instance(__LINE__)
void ble_gap_periodic_adv_configure_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_configure_IgnoreArg_params() ble_gap_periodic_adv_configure_CMockIgnoreArg_params(__LINE__)
void ble_gap_periodic_adv_configure_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_start_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_start_StopIgnore() ble_gap_periodic_adv_start_CMockStopIgnore()
void ble_gap_periodic_adv_start_CMockStopIgnore(void);
#define ble_gap_periodic_adv_start_ExpectAndReturn(instance, cmock_retval) ble_gap_periodic_adv_start_CMockExpectAndReturn(__LINE__, instance, cmock_retval)
void ble_gap_periodic_adv_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_start_CALLBACK)(uint8_t instance, int cmock_num_calls);
void ble_gap_periodic_adv_start_AddCallback(CMOCK_ble_gap_periodic_adv_start_CALLBACK Callback);
void ble_gap_periodic_adv_start_Stub(CMOCK_ble_gap_periodic_adv_start_CALLBACK Callback);
#define ble_gap_periodic_adv_start_StubWithCallback ble_gap_periodic_adv_start_Stub
#define ble_gap_periodic_adv_start_IgnoreArg_instance() ble_gap_periodic_adv_start_CMockIgnoreArg_instance(__LINE__)
void ble_gap_periodic_adv_start_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_stop_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_stop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_stop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_stop_StopIgnore() ble_gap_periodic_adv_stop_CMockStopIgnore()
void ble_gap_periodic_adv_stop_CMockStopIgnore(void);
#define ble_gap_periodic_adv_stop_ExpectAndReturn(instance, cmock_retval) ble_gap_periodic_adv_stop_CMockExpectAndReturn(__LINE__, instance, cmock_retval)
void ble_gap_periodic_adv_stop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_stop_CALLBACK)(uint8_t instance, int cmock_num_calls);
void ble_gap_periodic_adv_stop_AddCallback(CMOCK_ble_gap_periodic_adv_stop_CALLBACK Callback);
void ble_gap_periodic_adv_stop_Stub(CMOCK_ble_gap_periodic_adv_stop_CALLBACK Callback);
#define ble_gap_periodic_adv_stop_StubWithCallback ble_gap_periodic_adv_stop_Stub
#define ble_gap_periodic_adv_stop_IgnoreArg_instance() ble_gap_periodic_adv_stop_CMockIgnoreArg_instance(__LINE__)
void ble_gap_periodic_adv_stop_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_set_data_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_set_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_set_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_set_data_StopIgnore() ble_gap_periodic_adv_set_data_CMockStopIgnore()
void ble_gap_periodic_adv_set_data_CMockStopIgnore(void);
#define ble_gap_periodic_adv_set_data_ExpectAndReturn(instance, data, cmock_retval) ble_gap_periodic_adv_set_data_CMockExpectAndReturn(__LINE__, instance, data, cmock_retval)
void ble_gap_periodic_adv_set_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, struct os_mbuf* data, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_set_data_CALLBACK)(uint8_t instance, struct os_mbuf* data, int cmock_num_calls);
void ble_gap_periodic_adv_set_data_AddCallback(CMOCK_ble_gap_periodic_adv_set_data_CALLBACK Callback);
void ble_gap_periodic_adv_set_data_Stub(CMOCK_ble_gap_periodic_adv_set_data_CALLBACK Callback);
#define ble_gap_periodic_adv_set_data_StubWithCallback ble_gap_periodic_adv_set_data_Stub
#define ble_gap_periodic_adv_set_data_ExpectWithArrayAndReturn(instance, data, data_Depth, cmock_retval) ble_gap_periodic_adv_set_data_CMockExpectWithArrayAndReturn(__LINE__, instance, data, data_Depth, cmock_retval)
void ble_gap_periodic_adv_set_data_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, struct os_mbuf* data, int data_Depth, int cmock_to_return);
#define ble_gap_periodic_adv_set_data_ReturnThruPtr_data(data) ble_gap_periodic_adv_set_data_CMockReturnMemThruPtr_data(__LINE__, data, sizeof(struct os_mbuf))
#define ble_gap_periodic_adv_set_data_ReturnArrayThruPtr_data(data, cmock_len) ble_gap_periodic_adv_set_data_CMockReturnMemThruPtr_data(__LINE__, data, cmock_len * sizeof(*data))
#define ble_gap_periodic_adv_set_data_ReturnMemThruPtr_data(data, cmock_size) ble_gap_periodic_adv_set_data_CMockReturnMemThruPtr_data(__LINE__, data, cmock_size)
void ble_gap_periodic_adv_set_data_CMockReturnMemThruPtr_data(UNITY_LINE_TYPE cmock_line, struct os_mbuf* data, size_t cmock_size);
#define ble_gap_periodic_adv_set_data_IgnoreArg_instance() ble_gap_periodic_adv_set_data_CMockIgnoreArg_instance(__LINE__)
void ble_gap_periodic_adv_set_data_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_set_data_IgnoreArg_data() ble_gap_periodic_adv_set_data_CMockIgnoreArg_data(__LINE__)
void ble_gap_periodic_adv_set_data_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_create_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_create_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_create_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_create_StopIgnore() ble_gap_periodic_adv_sync_create_CMockStopIgnore()
void ble_gap_periodic_adv_sync_create_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_create_ExpectAndReturn(addr, adv_sid, params, cb, cb_arg, cmock_retval) ble_gap_periodic_adv_sync_create_CMockExpectAndReturn(__LINE__, addr, adv_sid, params, cb, cb_arg, cmock_retval)
void ble_gap_periodic_adv_sync_create_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addr, uint8_t adv_sid, const struct ble_gap_periodic_sync_params* params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_create_CALLBACK)(const ble_addr_t* addr, uint8_t adv_sid, const struct ble_gap_periodic_sync_params* params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_periodic_adv_sync_create_AddCallback(CMOCK_ble_gap_periodic_adv_sync_create_CALLBACK Callback);
void ble_gap_periodic_adv_sync_create_Stub(CMOCK_ble_gap_periodic_adv_sync_create_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_create_StubWithCallback ble_gap_periodic_adv_sync_create_Stub
#define ble_gap_periodic_adv_sync_create_ExpectWithArrayAndReturn(addr, addr_Depth, adv_sid, params, params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_periodic_adv_sync_create_CMockExpectWithArrayAndReturn(__LINE__, addr, addr_Depth, adv_sid, params, params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_periodic_adv_sync_create_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addr, int addr_Depth, uint8_t adv_sid, const struct ble_gap_periodic_sync_params* params, int params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_periodic_adv_sync_create_ReturnThruPtr_cb(cb) ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_periodic_adv_sync_create_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_periodic_adv_sync_create_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_periodic_adv_sync_create_ReturnThruPtr_cb_arg(cb_arg) ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_periodic_adv_sync_create_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_periodic_adv_sync_create_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_periodic_adv_sync_create_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_periodic_adv_sync_create_IgnoreArg_addr() ble_gap_periodic_adv_sync_create_CMockIgnoreArg_addr(__LINE__)
void ble_gap_periodic_adv_sync_create_CMockIgnoreArg_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_create_IgnoreArg_adv_sid() ble_gap_periodic_adv_sync_create_CMockIgnoreArg_adv_sid(__LINE__)
void ble_gap_periodic_adv_sync_create_CMockIgnoreArg_adv_sid(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_create_IgnoreArg_params() ble_gap_periodic_adv_sync_create_CMockIgnoreArg_params(__LINE__)
void ble_gap_periodic_adv_sync_create_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_create_IgnoreArg_cb() ble_gap_periodic_adv_sync_create_CMockIgnoreArg_cb(__LINE__)
void ble_gap_periodic_adv_sync_create_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_create_IgnoreArg_cb_arg() ble_gap_periodic_adv_sync_create_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_periodic_adv_sync_create_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_create_cancel_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_create_cancel_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_create_cancel_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_create_cancel_StopIgnore() ble_gap_periodic_adv_sync_create_cancel_CMockStopIgnore()
void ble_gap_periodic_adv_sync_create_cancel_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_create_cancel_ExpectAndReturn(cmock_retval) ble_gap_periodic_adv_sync_create_cancel_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_create_cancel_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_create_cancel_CALLBACK)(int cmock_num_calls);
void ble_gap_periodic_adv_sync_create_cancel_AddCallback(CMOCK_ble_gap_periodic_adv_sync_create_cancel_CALLBACK Callback);
void ble_gap_periodic_adv_sync_create_cancel_Stub(CMOCK_ble_gap_periodic_adv_sync_create_cancel_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_create_cancel_StubWithCallback ble_gap_periodic_adv_sync_create_cancel_Stub
#define ble_gap_periodic_adv_sync_terminate_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_terminate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_terminate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_terminate_StopIgnore() ble_gap_periodic_adv_sync_terminate_CMockStopIgnore()
void ble_gap_periodic_adv_sync_terminate_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_terminate_ExpectAndReturn(sync_handle, cmock_retval) ble_gap_periodic_adv_sync_terminate_CMockExpectAndReturn(__LINE__, sync_handle, cmock_retval)
void ble_gap_periodic_adv_sync_terminate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t sync_handle, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_terminate_CALLBACK)(uint16_t sync_handle, int cmock_num_calls);
void ble_gap_periodic_adv_sync_terminate_AddCallback(CMOCK_ble_gap_periodic_adv_sync_terminate_CALLBACK Callback);
void ble_gap_periodic_adv_sync_terminate_Stub(CMOCK_ble_gap_periodic_adv_sync_terminate_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_terminate_StubWithCallback ble_gap_periodic_adv_sync_terminate_Stub
#define ble_gap_periodic_adv_sync_terminate_IgnoreArg_sync_handle() ble_gap_periodic_adv_sync_terminate_CMockIgnoreArg_sync_handle(__LINE__)
void ble_gap_periodic_adv_sync_terminate_CMockIgnoreArg_sync_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_reporting_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_reporting_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_reporting_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_reporting_StopIgnore() ble_gap_periodic_adv_sync_reporting_CMockStopIgnore()
void ble_gap_periodic_adv_sync_reporting_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_reporting_ExpectAndReturn(sync_handle, enable, cmock_retval) ble_gap_periodic_adv_sync_reporting_CMockExpectAndReturn(__LINE__, sync_handle, enable, cmock_retval)
void ble_gap_periodic_adv_sync_reporting_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t sync_handle, bool enable, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_reporting_CALLBACK)(uint16_t sync_handle, bool enable, int cmock_num_calls);
void ble_gap_periodic_adv_sync_reporting_AddCallback(CMOCK_ble_gap_periodic_adv_sync_reporting_CALLBACK Callback);
void ble_gap_periodic_adv_sync_reporting_Stub(CMOCK_ble_gap_periodic_adv_sync_reporting_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_reporting_StubWithCallback ble_gap_periodic_adv_sync_reporting_Stub
#define ble_gap_periodic_adv_sync_reporting_IgnoreArg_sync_handle() ble_gap_periodic_adv_sync_reporting_CMockIgnoreArg_sync_handle(__LINE__)
void ble_gap_periodic_adv_sync_reporting_CMockIgnoreArg_sync_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_reporting_IgnoreArg_enable() ble_gap_periodic_adv_sync_reporting_CMockIgnoreArg_enable(__LINE__)
void ble_gap_periodic_adv_sync_reporting_CMockIgnoreArg_enable(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_transfer_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_transfer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_transfer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_transfer_StopIgnore() ble_gap_periodic_adv_sync_transfer_CMockStopIgnore()
void ble_gap_periodic_adv_sync_transfer_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_transfer_ExpectAndReturn(sync_handle, conn_handle, service_data, cmock_retval) ble_gap_periodic_adv_sync_transfer_CMockExpectAndReturn(__LINE__, sync_handle, conn_handle, service_data, cmock_retval)
void ble_gap_periodic_adv_sync_transfer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t sync_handle, uint16_t conn_handle, uint16_t service_data, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_transfer_CALLBACK)(uint16_t sync_handle, uint16_t conn_handle, uint16_t service_data, int cmock_num_calls);
void ble_gap_periodic_adv_sync_transfer_AddCallback(CMOCK_ble_gap_periodic_adv_sync_transfer_CALLBACK Callback);
void ble_gap_periodic_adv_sync_transfer_Stub(CMOCK_ble_gap_periodic_adv_sync_transfer_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_transfer_StubWithCallback ble_gap_periodic_adv_sync_transfer_Stub
#define ble_gap_periodic_adv_sync_transfer_IgnoreArg_sync_handle() ble_gap_periodic_adv_sync_transfer_CMockIgnoreArg_sync_handle(__LINE__)
void ble_gap_periodic_adv_sync_transfer_CMockIgnoreArg_sync_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_transfer_IgnoreArg_conn_handle() ble_gap_periodic_adv_sync_transfer_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_periodic_adv_sync_transfer_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_transfer_IgnoreArg_service_data() ble_gap_periodic_adv_sync_transfer_CMockIgnoreArg_service_data(__LINE__)
void ble_gap_periodic_adv_sync_transfer_CMockIgnoreArg_service_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_set_info_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_set_info_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_set_info_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_set_info_StopIgnore() ble_gap_periodic_adv_sync_set_info_CMockStopIgnore()
void ble_gap_periodic_adv_sync_set_info_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_set_info_ExpectAndReturn(instance, conn_handle, service_data, cmock_retval) ble_gap_periodic_adv_sync_set_info_CMockExpectAndReturn(__LINE__, instance, conn_handle, service_data, cmock_retval)
void ble_gap_periodic_adv_sync_set_info_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t instance, uint16_t conn_handle, uint16_t service_data, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_set_info_CALLBACK)(uint8_t instance, uint16_t conn_handle, uint16_t service_data, int cmock_num_calls);
void ble_gap_periodic_adv_sync_set_info_AddCallback(CMOCK_ble_gap_periodic_adv_sync_set_info_CALLBACK Callback);
void ble_gap_periodic_adv_sync_set_info_Stub(CMOCK_ble_gap_periodic_adv_sync_set_info_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_set_info_StubWithCallback ble_gap_periodic_adv_sync_set_info_Stub
#define ble_gap_periodic_adv_sync_set_info_IgnoreArg_instance() ble_gap_periodic_adv_sync_set_info_CMockIgnoreArg_instance(__LINE__)
void ble_gap_periodic_adv_sync_set_info_CMockIgnoreArg_instance(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_set_info_IgnoreArg_conn_handle() ble_gap_periodic_adv_sync_set_info_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_periodic_adv_sync_set_info_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_set_info_IgnoreArg_service_data() ble_gap_periodic_adv_sync_set_info_CMockIgnoreArg_service_data(__LINE__)
void ble_gap_periodic_adv_sync_set_info_CMockIgnoreArg_service_data(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_receive_IgnoreAndReturn(cmock_retval) ble_gap_periodic_adv_sync_receive_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_periodic_adv_sync_receive_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_periodic_adv_sync_receive_StopIgnore() ble_gap_periodic_adv_sync_receive_CMockStopIgnore()
void ble_gap_periodic_adv_sync_receive_CMockStopIgnore(void);
#define ble_gap_periodic_adv_sync_receive_ExpectAndReturn(conn_handle, params, cb, cb_arg, cmock_retval) ble_gap_periodic_adv_sync_receive_CMockExpectAndReturn(__LINE__, conn_handle, params, cb, cb_arg, cmock_retval)
void ble_gap_periodic_adv_sync_receive_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, const struct ble_gap_periodic_sync_params* params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_periodic_adv_sync_receive_CALLBACK)(uint16_t conn_handle, const struct ble_gap_periodic_sync_params* params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_periodic_adv_sync_receive_AddCallback(CMOCK_ble_gap_periodic_adv_sync_receive_CALLBACK Callback);
void ble_gap_periodic_adv_sync_receive_Stub(CMOCK_ble_gap_periodic_adv_sync_receive_CALLBACK Callback);
#define ble_gap_periodic_adv_sync_receive_StubWithCallback ble_gap_periodic_adv_sync_receive_Stub
#define ble_gap_periodic_adv_sync_receive_ExpectWithArrayAndReturn(conn_handle, params, params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_periodic_adv_sync_receive_CMockExpectWithArrayAndReturn(__LINE__, conn_handle, params, params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_periodic_adv_sync_receive_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, const struct ble_gap_periodic_sync_params* params, int params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_periodic_adv_sync_receive_ReturnThruPtr_cb(cb) ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_periodic_adv_sync_receive_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_periodic_adv_sync_receive_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_periodic_adv_sync_receive_ReturnThruPtr_cb_arg(cb_arg) ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_periodic_adv_sync_receive_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_periodic_adv_sync_receive_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_periodic_adv_sync_receive_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_periodic_adv_sync_receive_IgnoreArg_conn_handle() ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_receive_IgnoreArg_params() ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_params(__LINE__)
void ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_receive_IgnoreArg_cb() ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_cb(__LINE__)
void ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_periodic_adv_sync_receive_IgnoreArg_cb_arg() ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_periodic_adv_sync_receive_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_add_dev_to_periodic_adv_list_IgnoreAndReturn(cmock_retval) ble_gap_add_dev_to_periodic_adv_list_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_add_dev_to_periodic_adv_list_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_add_dev_to_periodic_adv_list_StopIgnore() ble_gap_add_dev_to_periodic_adv_list_CMockStopIgnore()
void ble_gap_add_dev_to_periodic_adv_list_CMockStopIgnore(void);
#define ble_gap_add_dev_to_periodic_adv_list_ExpectAndReturn(peer_addr, adv_sid, cmock_retval) ble_gap_add_dev_to_periodic_adv_list_CMockExpectAndReturn(__LINE__, peer_addr, adv_sid, cmock_retval)
void ble_gap_add_dev_to_periodic_adv_list_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, uint8_t adv_sid, int cmock_to_return);
typedef int (* CMOCK_ble_gap_add_dev_to_periodic_adv_list_CALLBACK)(const ble_addr_t* peer_addr, uint8_t adv_sid, int cmock_num_calls);
void ble_gap_add_dev_to_periodic_adv_list_AddCallback(CMOCK_ble_gap_add_dev_to_periodic_adv_list_CALLBACK Callback);
void ble_gap_add_dev_to_periodic_adv_list_Stub(CMOCK_ble_gap_add_dev_to_periodic_adv_list_CALLBACK Callback);
#define ble_gap_add_dev_to_periodic_adv_list_StubWithCallback ble_gap_add_dev_to_periodic_adv_list_Stub
#define ble_gap_add_dev_to_periodic_adv_list_ExpectWithArrayAndReturn(peer_addr, peer_addr_Depth, adv_sid, cmock_retval) ble_gap_add_dev_to_periodic_adv_list_CMockExpectWithArrayAndReturn(__LINE__, peer_addr, peer_addr_Depth, adv_sid, cmock_retval)
void ble_gap_add_dev_to_periodic_adv_list_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int peer_addr_Depth, uint8_t adv_sid, int cmock_to_return);
#define ble_gap_add_dev_to_periodic_adv_list_IgnoreArg_peer_addr() ble_gap_add_dev_to_periodic_adv_list_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_add_dev_to_periodic_adv_list_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_add_dev_to_periodic_adv_list_IgnoreArg_adv_sid() ble_gap_add_dev_to_periodic_adv_list_CMockIgnoreArg_adv_sid(__LINE__)
void ble_gap_add_dev_to_periodic_adv_list_CMockIgnoreArg_adv_sid(UNITY_LINE_TYPE cmock_line);
#define ble_gap_rem_dev_from_periodic_adv_list_IgnoreAndReturn(cmock_retval) ble_gap_rem_dev_from_periodic_adv_list_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_rem_dev_from_periodic_adv_list_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_rem_dev_from_periodic_adv_list_StopIgnore() ble_gap_rem_dev_from_periodic_adv_list_CMockStopIgnore()
void ble_gap_rem_dev_from_periodic_adv_list_CMockStopIgnore(void);
#define ble_gap_rem_dev_from_periodic_adv_list_ExpectAndReturn(peer_addr, adv_sid, cmock_retval) ble_gap_rem_dev_from_periodic_adv_list_CMockExpectAndReturn(__LINE__, peer_addr, adv_sid, cmock_retval)
void ble_gap_rem_dev_from_periodic_adv_list_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, uint8_t adv_sid, int cmock_to_return);
typedef int (* CMOCK_ble_gap_rem_dev_from_periodic_adv_list_CALLBACK)(const ble_addr_t* peer_addr, uint8_t adv_sid, int cmock_num_calls);
void ble_gap_rem_dev_from_periodic_adv_list_AddCallback(CMOCK_ble_gap_rem_dev_from_periodic_adv_list_CALLBACK Callback);
void ble_gap_rem_dev_from_periodic_adv_list_Stub(CMOCK_ble_gap_rem_dev_from_periodic_adv_list_CALLBACK Callback);
#define ble_gap_rem_dev_from_periodic_adv_list_StubWithCallback ble_gap_rem_dev_from_periodic_adv_list_Stub
#define ble_gap_rem_dev_from_periodic_adv_list_ExpectWithArrayAndReturn(peer_addr, peer_addr_Depth, adv_sid, cmock_retval) ble_gap_rem_dev_from_periodic_adv_list_CMockExpectWithArrayAndReturn(__LINE__, peer_addr, peer_addr_Depth, adv_sid, cmock_retval)
void ble_gap_rem_dev_from_periodic_adv_list_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int peer_addr_Depth, uint8_t adv_sid, int cmock_to_return);
#define ble_gap_rem_dev_from_periodic_adv_list_IgnoreArg_peer_addr() ble_gap_rem_dev_from_periodic_adv_list_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_rem_dev_from_periodic_adv_list_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_rem_dev_from_periodic_adv_list_IgnoreArg_adv_sid() ble_gap_rem_dev_from_periodic_adv_list_CMockIgnoreArg_adv_sid(__LINE__)
void ble_gap_rem_dev_from_periodic_adv_list_CMockIgnoreArg_adv_sid(UNITY_LINE_TYPE cmock_line);
#define ble_gap_clear_periodic_adv_list_IgnoreAndReturn(cmock_retval) ble_gap_clear_periodic_adv_list_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_clear_periodic_adv_list_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_clear_periodic_adv_list_StopIgnore() ble_gap_clear_periodic_adv_list_CMockStopIgnore()
void ble_gap_clear_periodic_adv_list_CMockStopIgnore(void);
#define ble_gap_clear_periodic_adv_list_ExpectAndReturn(cmock_retval) ble_gap_clear_periodic_adv_list_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_clear_periodic_adv_list_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_clear_periodic_adv_list_CALLBACK)(int cmock_num_calls);
void ble_gap_clear_periodic_adv_list_AddCallback(CMOCK_ble_gap_clear_periodic_adv_list_CALLBACK Callback);
void ble_gap_clear_periodic_adv_list_Stub(CMOCK_ble_gap_clear_periodic_adv_list_CALLBACK Callback);
#define ble_gap_clear_periodic_adv_list_StubWithCallback ble_gap_clear_periodic_adv_list_Stub
#define ble_gap_read_periodic_adv_list_size_IgnoreAndReturn(cmock_retval) ble_gap_read_periodic_adv_list_size_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_read_periodic_adv_list_size_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_read_periodic_adv_list_size_StopIgnore() ble_gap_read_periodic_adv_list_size_CMockStopIgnore()
void ble_gap_read_periodic_adv_list_size_CMockStopIgnore(void);
#define ble_gap_read_periodic_adv_list_size_ExpectAndReturn(per_adv_list_size, cmock_retval) ble_gap_read_periodic_adv_list_size_CMockExpectAndReturn(__LINE__, per_adv_list_size, cmock_retval)
void ble_gap_read_periodic_adv_list_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* per_adv_list_size, int cmock_to_return);
typedef int (* CMOCK_ble_gap_read_periodic_adv_list_size_CALLBACK)(uint8_t* per_adv_list_size, int cmock_num_calls);
void ble_gap_read_periodic_adv_list_size_AddCallback(CMOCK_ble_gap_read_periodic_adv_list_size_CALLBACK Callback);
void ble_gap_read_periodic_adv_list_size_Stub(CMOCK_ble_gap_read_periodic_adv_list_size_CALLBACK Callback);
#define ble_gap_read_periodic_adv_list_size_StubWithCallback ble_gap_read_periodic_adv_list_size_Stub
#define ble_gap_read_periodic_adv_list_size_ExpectWithArrayAndReturn(per_adv_list_size, per_adv_list_size_Depth, cmock_retval) ble_gap_read_periodic_adv_list_size_CMockExpectWithArrayAndReturn(__LINE__, per_adv_list_size, per_adv_list_size_Depth, cmock_retval)
void ble_gap_read_periodic_adv_list_size_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* per_adv_list_size, int per_adv_list_size_Depth, int cmock_to_return);
#define ble_gap_read_periodic_adv_list_size_ReturnThruPtr_per_adv_list_size(per_adv_list_size) ble_gap_read_periodic_adv_list_size_CMockReturnMemThruPtr_per_adv_list_size(__LINE__, per_adv_list_size, sizeof(uint8_t))
#define ble_gap_read_periodic_adv_list_size_ReturnArrayThruPtr_per_adv_list_size(per_adv_list_size, cmock_len) ble_gap_read_periodic_adv_list_size_CMockReturnMemThruPtr_per_adv_list_size(__LINE__, per_adv_list_size, cmock_len * sizeof(*per_adv_list_size))
#define ble_gap_read_periodic_adv_list_size_ReturnMemThruPtr_per_adv_list_size(per_adv_list_size, cmock_size) ble_gap_read_periodic_adv_list_size_CMockReturnMemThruPtr_per_adv_list_size(__LINE__, per_adv_list_size, cmock_size)
void ble_gap_read_periodic_adv_list_size_CMockReturnMemThruPtr_per_adv_list_size(UNITY_LINE_TYPE cmock_line, uint8_t* per_adv_list_size, size_t cmock_size);
#define ble_gap_read_periodic_adv_list_size_IgnoreArg_per_adv_list_size() ble_gap_read_periodic_adv_list_size_CMockIgnoreArg_per_adv_list_size(__LINE__)
void ble_gap_read_periodic_adv_list_size_CMockIgnoreArg_per_adv_list_size(UNITY_LINE_TYPE cmock_line);
#define ble_gap_disc_IgnoreAndReturn(cmock_retval) ble_gap_disc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_disc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_disc_StopIgnore() ble_gap_disc_CMockStopIgnore()
void ble_gap_disc_CMockStopIgnore(void);
#define ble_gap_disc_ExpectAndReturn(own_addr_type, duration_ms, disc_params, cb, cb_arg, cmock_retval) ble_gap_disc_CMockExpectAndReturn(__LINE__, own_addr_type, duration_ms, disc_params, cb, cb_arg, cmock_retval)
void ble_gap_disc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, int32_t duration_ms, const struct ble_gap_disc_params* disc_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_disc_CALLBACK)(uint8_t own_addr_type, int32_t duration_ms, const struct ble_gap_disc_params* disc_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_disc_AddCallback(CMOCK_ble_gap_disc_CALLBACK Callback);
void ble_gap_disc_Stub(CMOCK_ble_gap_disc_CALLBACK Callback);
#define ble_gap_disc_StubWithCallback ble_gap_disc_Stub
#define ble_gap_disc_ExpectWithArrayAndReturn(own_addr_type, duration_ms, disc_params, disc_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_disc_CMockExpectWithArrayAndReturn(__LINE__, own_addr_type, duration_ms, disc_params, disc_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_disc_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, int32_t duration_ms, const struct ble_gap_disc_params* disc_params, int disc_params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_disc_ReturnThruPtr_cb(cb) ble_gap_disc_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_disc_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_disc_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_disc_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_disc_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_disc_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_disc_ReturnThruPtr_cb_arg(cb_arg) ble_gap_disc_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_disc_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_disc_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_disc_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_disc_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_disc_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_disc_IgnoreArg_own_addr_type() ble_gap_disc_CMockIgnoreArg_own_addr_type(__LINE__)
void ble_gap_disc_CMockIgnoreArg_own_addr_type(UNITY_LINE_TYPE cmock_line);
#define ble_gap_disc_IgnoreArg_duration_ms() ble_gap_disc_CMockIgnoreArg_duration_ms(__LINE__)
void ble_gap_disc_CMockIgnoreArg_duration_ms(UNITY_LINE_TYPE cmock_line);
#define ble_gap_disc_IgnoreArg_disc_params() ble_gap_disc_CMockIgnoreArg_disc_params(__LINE__)
void ble_gap_disc_CMockIgnoreArg_disc_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_disc_IgnoreArg_cb() ble_gap_disc_CMockIgnoreArg_cb(__LINE__)
void ble_gap_disc_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_disc_IgnoreArg_cb_arg() ble_gap_disc_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_disc_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreAndReturn(cmock_retval) ble_gap_ext_disc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_disc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_disc_StopIgnore() ble_gap_ext_disc_CMockStopIgnore()
void ble_gap_ext_disc_CMockStopIgnore(void);
#define ble_gap_ext_disc_ExpectAndReturn(own_addr_type, duration, period, filter_duplicates, filter_policy, limited, uncoded_params, coded_params, cb, cb_arg, cmock_retval) ble_gap_ext_disc_CMockExpectAndReturn(__LINE__, own_addr_type, duration, period, filter_duplicates, filter_policy, limited, uncoded_params, coded_params, cb, cb_arg, cmock_retval)
void ble_gap_ext_disc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, uint16_t duration, uint16_t period, uint8_t filter_duplicates, uint8_t filter_policy, uint8_t limited, const struct ble_gap_ext_disc_params* uncoded_params, const struct ble_gap_ext_disc_params* coded_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_disc_CALLBACK)(uint8_t own_addr_type, uint16_t duration, uint16_t period, uint8_t filter_duplicates, uint8_t filter_policy, uint8_t limited, const struct ble_gap_ext_disc_params* uncoded_params, const struct ble_gap_ext_disc_params* coded_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_ext_disc_AddCallback(CMOCK_ble_gap_ext_disc_CALLBACK Callback);
void ble_gap_ext_disc_Stub(CMOCK_ble_gap_ext_disc_CALLBACK Callback);
#define ble_gap_ext_disc_StubWithCallback ble_gap_ext_disc_Stub
#define ble_gap_ext_disc_ExpectWithArrayAndReturn(own_addr_type, duration, period, filter_duplicates, filter_policy, limited, uncoded_params, uncoded_params_Depth, coded_params, coded_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_ext_disc_CMockExpectWithArrayAndReturn(__LINE__, own_addr_type, duration, period, filter_duplicates, filter_policy, limited, uncoded_params, uncoded_params_Depth, coded_params, coded_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_ext_disc_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, uint16_t duration, uint16_t period, uint8_t filter_duplicates, uint8_t filter_policy, uint8_t limited, const struct ble_gap_ext_disc_params* uncoded_params, int uncoded_params_Depth, const struct ble_gap_ext_disc_params* coded_params, int coded_params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_ext_disc_ReturnThruPtr_cb(cb) ble_gap_ext_disc_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_ext_disc_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_ext_disc_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_ext_disc_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_ext_disc_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_ext_disc_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_ext_disc_ReturnThruPtr_cb_arg(cb_arg) ble_gap_ext_disc_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_ext_disc_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_ext_disc_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_ext_disc_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_ext_disc_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_ext_disc_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_ext_disc_IgnoreArg_own_addr_type() ble_gap_ext_disc_CMockIgnoreArg_own_addr_type(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_own_addr_type(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_duration() ble_gap_ext_disc_CMockIgnoreArg_duration(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_duration(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_period() ble_gap_ext_disc_CMockIgnoreArg_period(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_period(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_filter_duplicates() ble_gap_ext_disc_CMockIgnoreArg_filter_duplicates(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_filter_duplicates(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_filter_policy() ble_gap_ext_disc_CMockIgnoreArg_filter_policy(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_filter_policy(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_limited() ble_gap_ext_disc_CMockIgnoreArg_limited(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_limited(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_uncoded_params() ble_gap_ext_disc_CMockIgnoreArg_uncoded_params(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_uncoded_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_coded_params() ble_gap_ext_disc_CMockIgnoreArg_coded_params(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_coded_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_cb() ble_gap_ext_disc_CMockIgnoreArg_cb(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_disc_IgnoreArg_cb_arg() ble_gap_ext_disc_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_ext_disc_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_disc_cancel_IgnoreAndReturn(cmock_retval) ble_gap_disc_cancel_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_disc_cancel_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_disc_cancel_StopIgnore() ble_gap_disc_cancel_CMockStopIgnore()
void ble_gap_disc_cancel_CMockStopIgnore(void);
#define ble_gap_disc_cancel_ExpectAndReturn(cmock_retval) ble_gap_disc_cancel_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_disc_cancel_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_disc_cancel_CALLBACK)(int cmock_num_calls);
void ble_gap_disc_cancel_AddCallback(CMOCK_ble_gap_disc_cancel_CALLBACK Callback);
void ble_gap_disc_cancel_Stub(CMOCK_ble_gap_disc_cancel_CALLBACK Callback);
#define ble_gap_disc_cancel_StubWithCallback ble_gap_disc_cancel_Stub
#define ble_gap_disc_active_IgnoreAndReturn(cmock_retval) ble_gap_disc_active_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_disc_active_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_disc_active_StopIgnore() ble_gap_disc_active_CMockStopIgnore()
void ble_gap_disc_active_CMockStopIgnore(void);
#define ble_gap_disc_active_ExpectAndReturn(cmock_retval) ble_gap_disc_active_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_disc_active_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_disc_active_CALLBACK)(int cmock_num_calls);
void ble_gap_disc_active_AddCallback(CMOCK_ble_gap_disc_active_CALLBACK Callback);
void ble_gap_disc_active_Stub(CMOCK_ble_gap_disc_active_CALLBACK Callback);
#define ble_gap_disc_active_StubWithCallback ble_gap_disc_active_Stub
#define ble_gap_connect_IgnoreAndReturn(cmock_retval) ble_gap_connect_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_connect_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_connect_StopIgnore() ble_gap_connect_CMockStopIgnore()
void ble_gap_connect_CMockStopIgnore(void);
#define ble_gap_connect_ExpectAndReturn(own_addr_type, peer_addr, duration_ms, params, cb, cb_arg, cmock_retval) ble_gap_connect_CMockExpectAndReturn(__LINE__, own_addr_type, peer_addr, duration_ms, params, cb, cb_arg, cmock_retval)
void ble_gap_connect_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, const ble_addr_t* peer_addr, int32_t duration_ms, const struct ble_gap_conn_params* params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_connect_CALLBACK)(uint8_t own_addr_type, const ble_addr_t* peer_addr, int32_t duration_ms, const struct ble_gap_conn_params* params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_connect_AddCallback(CMOCK_ble_gap_connect_CALLBACK Callback);
void ble_gap_connect_Stub(CMOCK_ble_gap_connect_CALLBACK Callback);
#define ble_gap_connect_StubWithCallback ble_gap_connect_Stub
#define ble_gap_connect_ExpectWithArrayAndReturn(own_addr_type, peer_addr, peer_addr_Depth, duration_ms, params, params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_connect_CMockExpectWithArrayAndReturn(__LINE__, own_addr_type, peer_addr, peer_addr_Depth, duration_ms, params, params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_connect_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, const ble_addr_t* peer_addr, int peer_addr_Depth, int32_t duration_ms, const struct ble_gap_conn_params* params, int params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_connect_ReturnThruPtr_cb(cb) ble_gap_connect_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_connect_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_connect_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_connect_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_connect_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_connect_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_connect_ReturnThruPtr_cb_arg(cb_arg) ble_gap_connect_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_connect_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_connect_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_connect_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_connect_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_connect_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_connect_IgnoreArg_own_addr_type() ble_gap_connect_CMockIgnoreArg_own_addr_type(__LINE__)
void ble_gap_connect_CMockIgnoreArg_own_addr_type(UNITY_LINE_TYPE cmock_line);
#define ble_gap_connect_IgnoreArg_peer_addr() ble_gap_connect_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_connect_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_connect_IgnoreArg_duration_ms() ble_gap_connect_CMockIgnoreArg_duration_ms(__LINE__)
void ble_gap_connect_CMockIgnoreArg_duration_ms(UNITY_LINE_TYPE cmock_line);
#define ble_gap_connect_IgnoreArg_params() ble_gap_connect_CMockIgnoreArg_params(__LINE__)
void ble_gap_connect_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_connect_IgnoreArg_cb() ble_gap_connect_CMockIgnoreArg_cb(__LINE__)
void ble_gap_connect_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_connect_IgnoreArg_cb_arg() ble_gap_connect_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_connect_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreAndReturn(cmock_retval) ble_gap_ext_connect_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_ext_connect_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_ext_connect_StopIgnore() ble_gap_ext_connect_CMockStopIgnore()
void ble_gap_ext_connect_CMockStopIgnore(void);
#define ble_gap_ext_connect_ExpectAndReturn(own_addr_type, peer_addr, duration_ms, phy_mask, phy_1m_conn_params, phy_2m_conn_params, phy_coded_conn_params, cb, cb_arg, cmock_retval) ble_gap_ext_connect_CMockExpectAndReturn(__LINE__, own_addr_type, peer_addr, duration_ms, phy_mask, phy_1m_conn_params, phy_2m_conn_params, phy_coded_conn_params, cb, cb_arg, cmock_retval)
void ble_gap_ext_connect_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, const ble_addr_t* peer_addr, int32_t duration_ms, uint8_t phy_mask, const struct ble_gap_conn_params* phy_1m_conn_params, const struct ble_gap_conn_params* phy_2m_conn_params, const struct ble_gap_conn_params* phy_coded_conn_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_ext_connect_CALLBACK)(uint8_t own_addr_type, const ble_addr_t* peer_addr, int32_t duration_ms, uint8_t phy_mask, const struct ble_gap_conn_params* phy_1m_conn_params, const struct ble_gap_conn_params* phy_2m_conn_params, const struct ble_gap_conn_params* phy_coded_conn_params, ble_gap_event_fn* cb, void* cb_arg, int cmock_num_calls);
void ble_gap_ext_connect_AddCallback(CMOCK_ble_gap_ext_connect_CALLBACK Callback);
void ble_gap_ext_connect_Stub(CMOCK_ble_gap_ext_connect_CALLBACK Callback);
#define ble_gap_ext_connect_StubWithCallback ble_gap_ext_connect_Stub
#define ble_gap_ext_connect_ExpectWithArrayAndReturn(own_addr_type, peer_addr, peer_addr_Depth, duration_ms, phy_mask, phy_1m_conn_params, phy_1m_conn_params_Depth, phy_2m_conn_params, phy_2m_conn_params_Depth, phy_coded_conn_params, phy_coded_conn_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval) ble_gap_ext_connect_CMockExpectWithArrayAndReturn(__LINE__, own_addr_type, peer_addr, peer_addr_Depth, duration_ms, phy_mask, phy_1m_conn_params, phy_1m_conn_params_Depth, phy_2m_conn_params, phy_2m_conn_params_Depth, phy_coded_conn_params, phy_coded_conn_params_Depth, cb, cb_Depth, cb_arg, cb_arg_Depth, cmock_retval)
void ble_gap_ext_connect_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t own_addr_type, const ble_addr_t* peer_addr, int peer_addr_Depth, int32_t duration_ms, uint8_t phy_mask, const struct ble_gap_conn_params* phy_1m_conn_params, int phy_1m_conn_params_Depth, const struct ble_gap_conn_params* phy_2m_conn_params, int phy_2m_conn_params_Depth, const struct ble_gap_conn_params* phy_coded_conn_params, int phy_coded_conn_params_Depth, ble_gap_event_fn* cb, int cb_Depth, void* cb_arg, int cb_arg_Depth, int cmock_to_return);
#define ble_gap_ext_connect_ReturnThruPtr_cb(cb) ble_gap_ext_connect_CMockReturnMemThruPtr_cb(__LINE__, cb, sizeof(ble_gap_event_fn))
#define ble_gap_ext_connect_ReturnArrayThruPtr_cb(cb, cmock_len) ble_gap_ext_connect_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_len * sizeof(*cb))
#define ble_gap_ext_connect_ReturnMemThruPtr_cb(cb, cmock_size) ble_gap_ext_connect_CMockReturnMemThruPtr_cb(__LINE__, cb, cmock_size)
void ble_gap_ext_connect_CMockReturnMemThruPtr_cb(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* cb, size_t cmock_size);
#define ble_gap_ext_connect_ReturnThruPtr_cb_arg(cb_arg) ble_gap_ext_connect_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, sizeof(void))
#define ble_gap_ext_connect_ReturnArrayThruPtr_cb_arg(cb_arg, cmock_len) ble_gap_ext_connect_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_len * sizeof(*cb_arg))
#define ble_gap_ext_connect_ReturnMemThruPtr_cb_arg(cb_arg, cmock_size) ble_gap_ext_connect_CMockReturnMemThruPtr_cb_arg(__LINE__, cb_arg, cmock_size)
void ble_gap_ext_connect_CMockReturnMemThruPtr_cb_arg(UNITY_LINE_TYPE cmock_line, void* cb_arg, size_t cmock_size);
#define ble_gap_ext_connect_IgnoreArg_own_addr_type() ble_gap_ext_connect_CMockIgnoreArg_own_addr_type(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_own_addr_type(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_peer_addr() ble_gap_ext_connect_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_duration_ms() ble_gap_ext_connect_CMockIgnoreArg_duration_ms(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_duration_ms(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_phy_mask() ble_gap_ext_connect_CMockIgnoreArg_phy_mask(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_phy_mask(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_phy_1m_conn_params() ble_gap_ext_connect_CMockIgnoreArg_phy_1m_conn_params(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_phy_1m_conn_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_phy_2m_conn_params() ble_gap_ext_connect_CMockIgnoreArg_phy_2m_conn_params(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_phy_2m_conn_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_phy_coded_conn_params() ble_gap_ext_connect_CMockIgnoreArg_phy_coded_conn_params(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_phy_coded_conn_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_cb() ble_gap_ext_connect_CMockIgnoreArg_cb(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_cb(UNITY_LINE_TYPE cmock_line);
#define ble_gap_ext_connect_IgnoreArg_cb_arg() ble_gap_ext_connect_CMockIgnoreArg_cb_arg(__LINE__)
void ble_gap_ext_connect_CMockIgnoreArg_cb_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_conn_cancel_IgnoreAndReturn(cmock_retval) ble_gap_conn_cancel_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_cancel_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_conn_cancel_StopIgnore() ble_gap_conn_cancel_CMockStopIgnore()
void ble_gap_conn_cancel_CMockStopIgnore(void);
#define ble_gap_conn_cancel_ExpectAndReturn(cmock_retval) ble_gap_conn_cancel_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_cancel_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_conn_cancel_CALLBACK)(int cmock_num_calls);
void ble_gap_conn_cancel_AddCallback(CMOCK_ble_gap_conn_cancel_CALLBACK Callback);
void ble_gap_conn_cancel_Stub(CMOCK_ble_gap_conn_cancel_CALLBACK Callback);
#define ble_gap_conn_cancel_StubWithCallback ble_gap_conn_cancel_Stub
#define ble_gap_conn_active_IgnoreAndReturn(cmock_retval) ble_gap_conn_active_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_active_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_conn_active_StopIgnore() ble_gap_conn_active_CMockStopIgnore()
void ble_gap_conn_active_CMockStopIgnore(void);
#define ble_gap_conn_active_ExpectAndReturn(cmock_retval) ble_gap_conn_active_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_active_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_conn_active_CALLBACK)(int cmock_num_calls);
void ble_gap_conn_active_AddCallback(CMOCK_ble_gap_conn_active_CALLBACK Callback);
void ble_gap_conn_active_Stub(CMOCK_ble_gap_conn_active_CALLBACK Callback);
#define ble_gap_conn_active_StubWithCallback ble_gap_conn_active_Stub
#define ble_gap_terminate_IgnoreAndReturn(cmock_retval) ble_gap_terminate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_terminate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_terminate_StopIgnore() ble_gap_terminate_CMockStopIgnore()
void ble_gap_terminate_CMockStopIgnore(void);
#define ble_gap_terminate_ExpectAndReturn(conn_handle, hci_reason, cmock_retval) ble_gap_terminate_CMockExpectAndReturn(__LINE__, conn_handle, hci_reason, cmock_retval)
void ble_gap_terminate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint8_t hci_reason, int cmock_to_return);
typedef int (* CMOCK_ble_gap_terminate_CALLBACK)(uint16_t conn_handle, uint8_t hci_reason, int cmock_num_calls);
void ble_gap_terminate_AddCallback(CMOCK_ble_gap_terminate_CALLBACK Callback);
void ble_gap_terminate_Stub(CMOCK_ble_gap_terminate_CALLBACK Callback);
#define ble_gap_terminate_StubWithCallback ble_gap_terminate_Stub
#define ble_gap_terminate_IgnoreArg_conn_handle() ble_gap_terminate_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_terminate_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_terminate_IgnoreArg_hci_reason() ble_gap_terminate_CMockIgnoreArg_hci_reason(__LINE__)
void ble_gap_terminate_CMockIgnoreArg_hci_reason(UNITY_LINE_TYPE cmock_line);
#define ble_gap_wl_set_IgnoreAndReturn(cmock_retval) ble_gap_wl_set_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_wl_set_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_wl_set_StopIgnore() ble_gap_wl_set_CMockStopIgnore()
void ble_gap_wl_set_CMockStopIgnore(void);
#define ble_gap_wl_set_ExpectAndReturn(addrs, white_list_count, cmock_retval) ble_gap_wl_set_CMockExpectAndReturn(__LINE__, addrs, white_list_count, cmock_retval)
void ble_gap_wl_set_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addrs, uint8_t white_list_count, int cmock_to_return);
typedef int (* CMOCK_ble_gap_wl_set_CALLBACK)(const ble_addr_t* addrs, uint8_t white_list_count, int cmock_num_calls);
void ble_gap_wl_set_AddCallback(CMOCK_ble_gap_wl_set_CALLBACK Callback);
void ble_gap_wl_set_Stub(CMOCK_ble_gap_wl_set_CALLBACK Callback);
#define ble_gap_wl_set_StubWithCallback ble_gap_wl_set_Stub
#define ble_gap_wl_set_ExpectWithArrayAndReturn(addrs, addrs_Depth, white_list_count, cmock_retval) ble_gap_wl_set_CMockExpectWithArrayAndReturn(__LINE__, addrs, addrs_Depth, white_list_count, cmock_retval)
void ble_gap_wl_set_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addrs, int addrs_Depth, uint8_t white_list_count, int cmock_to_return);
#define ble_gap_wl_set_IgnoreArg_addrs() ble_gap_wl_set_CMockIgnoreArg_addrs(__LINE__)
void ble_gap_wl_set_CMockIgnoreArg_addrs(UNITY_LINE_TYPE cmock_line);
#define ble_gap_wl_set_IgnoreArg_white_list_count() ble_gap_wl_set_CMockIgnoreArg_white_list_count(__LINE__)
void ble_gap_wl_set_CMockIgnoreArg_white_list_count(UNITY_LINE_TYPE cmock_line);
#define ble_gap_wl_tx_rmv_IgnoreAndReturn(cmock_retval) ble_gap_wl_tx_rmv_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_wl_tx_rmv_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_wl_tx_rmv_StopIgnore() ble_gap_wl_tx_rmv_CMockStopIgnore()
void ble_gap_wl_tx_rmv_CMockStopIgnore(void);
#define ble_gap_wl_tx_rmv_ExpectAndReturn(addrs, cmock_retval) ble_gap_wl_tx_rmv_CMockExpectAndReturn(__LINE__, addrs, cmock_retval)
void ble_gap_wl_tx_rmv_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addrs, int cmock_to_return);
typedef int (* CMOCK_ble_gap_wl_tx_rmv_CALLBACK)(const ble_addr_t* addrs, int cmock_num_calls);
void ble_gap_wl_tx_rmv_AddCallback(CMOCK_ble_gap_wl_tx_rmv_CALLBACK Callback);
void ble_gap_wl_tx_rmv_Stub(CMOCK_ble_gap_wl_tx_rmv_CALLBACK Callback);
#define ble_gap_wl_tx_rmv_StubWithCallback ble_gap_wl_tx_rmv_Stub
#define ble_gap_wl_tx_rmv_ExpectWithArrayAndReturn(addrs, addrs_Depth, cmock_retval) ble_gap_wl_tx_rmv_CMockExpectWithArrayAndReturn(__LINE__, addrs, addrs_Depth, cmock_retval)
void ble_gap_wl_tx_rmv_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* addrs, int addrs_Depth, int cmock_to_return);
#define ble_gap_wl_tx_rmv_IgnoreArg_addrs() ble_gap_wl_tx_rmv_CMockIgnoreArg_addrs(__LINE__)
void ble_gap_wl_tx_rmv_CMockIgnoreArg_addrs(UNITY_LINE_TYPE cmock_line);
#define ble_gap_update_params_IgnoreAndReturn(cmock_retval) ble_gap_update_params_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_update_params_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_update_params_StopIgnore() ble_gap_update_params_CMockStopIgnore()
void ble_gap_update_params_CMockStopIgnore(void);
#define ble_gap_update_params_ExpectAndReturn(conn_handle, params, cmock_retval) ble_gap_update_params_CMockExpectAndReturn(__LINE__, conn_handle, params, cmock_retval)
void ble_gap_update_params_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, const struct ble_gap_upd_params* params, int cmock_to_return);
typedef int (* CMOCK_ble_gap_update_params_CALLBACK)(uint16_t conn_handle, const struct ble_gap_upd_params* params, int cmock_num_calls);
void ble_gap_update_params_AddCallback(CMOCK_ble_gap_update_params_CALLBACK Callback);
void ble_gap_update_params_Stub(CMOCK_ble_gap_update_params_CALLBACK Callback);
#define ble_gap_update_params_StubWithCallback ble_gap_update_params_Stub
#define ble_gap_update_params_ExpectWithArrayAndReturn(conn_handle, params, params_Depth, cmock_retval) ble_gap_update_params_CMockExpectWithArrayAndReturn(__LINE__, conn_handle, params, params_Depth, cmock_retval)
void ble_gap_update_params_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, const struct ble_gap_upd_params* params, int params_Depth, int cmock_to_return);
#define ble_gap_update_params_IgnoreArg_conn_handle() ble_gap_update_params_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_update_params_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_update_params_IgnoreArg_params() ble_gap_update_params_CMockIgnoreArg_params(__LINE__)
void ble_gap_update_params_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_data_len_IgnoreAndReturn(cmock_retval) ble_gap_set_data_len_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_set_data_len_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_set_data_len_StopIgnore() ble_gap_set_data_len_CMockStopIgnore()
void ble_gap_set_data_len_CMockStopIgnore(void);
#define ble_gap_set_data_len_ExpectAndReturn(conn_handle, tx_octets, tx_time, cmock_retval) ble_gap_set_data_len_CMockExpectAndReturn(__LINE__, conn_handle, tx_octets, tx_time, cmock_retval)
void ble_gap_set_data_len_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint16_t tx_octets, uint16_t tx_time, int cmock_to_return);
typedef int (* CMOCK_ble_gap_set_data_len_CALLBACK)(uint16_t conn_handle, uint16_t tx_octets, uint16_t tx_time, int cmock_num_calls);
void ble_gap_set_data_len_AddCallback(CMOCK_ble_gap_set_data_len_CALLBACK Callback);
void ble_gap_set_data_len_Stub(CMOCK_ble_gap_set_data_len_CALLBACK Callback);
#define ble_gap_set_data_len_StubWithCallback ble_gap_set_data_len_Stub
#define ble_gap_set_data_len_IgnoreArg_conn_handle() ble_gap_set_data_len_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_set_data_len_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_data_len_IgnoreArg_tx_octets() ble_gap_set_data_len_CMockIgnoreArg_tx_octets(__LINE__)
void ble_gap_set_data_len_CMockIgnoreArg_tx_octets(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_data_len_IgnoreArg_tx_time() ble_gap_set_data_len_CMockIgnoreArg_tx_time(__LINE__)
void ble_gap_set_data_len_CMockIgnoreArg_tx_time(UNITY_LINE_TYPE cmock_line);
#define ble_gap_security_initiate_IgnoreAndReturn(cmock_retval) ble_gap_security_initiate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_security_initiate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_security_initiate_StopIgnore() ble_gap_security_initiate_CMockStopIgnore()
void ble_gap_security_initiate_CMockStopIgnore(void);
#define ble_gap_security_initiate_ExpectAndReturn(conn_handle, cmock_retval) ble_gap_security_initiate_CMockExpectAndReturn(__LINE__, conn_handle, cmock_retval)
void ble_gap_security_initiate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, int cmock_to_return);
typedef int (* CMOCK_ble_gap_security_initiate_CALLBACK)(uint16_t conn_handle, int cmock_num_calls);
void ble_gap_security_initiate_AddCallback(CMOCK_ble_gap_security_initiate_CALLBACK Callback);
void ble_gap_security_initiate_Stub(CMOCK_ble_gap_security_initiate_CALLBACK Callback);
#define ble_gap_security_initiate_StubWithCallback ble_gap_security_initiate_Stub
#define ble_gap_security_initiate_IgnoreArg_conn_handle() ble_gap_security_initiate_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_security_initiate_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_pair_initiate_IgnoreAndReturn(cmock_retval) ble_gap_pair_initiate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_pair_initiate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_pair_initiate_StopIgnore() ble_gap_pair_initiate_CMockStopIgnore()
void ble_gap_pair_initiate_CMockStopIgnore(void);
#define ble_gap_pair_initiate_ExpectAndReturn(conn_handle, cmock_retval) ble_gap_pair_initiate_CMockExpectAndReturn(__LINE__, conn_handle, cmock_retval)
void ble_gap_pair_initiate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, int cmock_to_return);
typedef int (* CMOCK_ble_gap_pair_initiate_CALLBACK)(uint16_t conn_handle, int cmock_num_calls);
void ble_gap_pair_initiate_AddCallback(CMOCK_ble_gap_pair_initiate_CALLBACK Callback);
void ble_gap_pair_initiate_Stub(CMOCK_ble_gap_pair_initiate_CALLBACK Callback);
#define ble_gap_pair_initiate_StubWithCallback ble_gap_pair_initiate_Stub
#define ble_gap_pair_initiate_IgnoreArg_conn_handle() ble_gap_pair_initiate_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_pair_initiate_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_encryption_initiate_IgnoreAndReturn(cmock_retval) ble_gap_encryption_initiate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_encryption_initiate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_encryption_initiate_StopIgnore() ble_gap_encryption_initiate_CMockStopIgnore()
void ble_gap_encryption_initiate_CMockStopIgnore(void);
#define ble_gap_encryption_initiate_ExpectAndReturn(conn_handle, key_size, ltk, ediv, rand_val, auth, cmock_retval) ble_gap_encryption_initiate_CMockExpectAndReturn(__LINE__, conn_handle, key_size, ltk, ediv, rand_val, auth, cmock_retval)
void ble_gap_encryption_initiate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint8_t key_size, const uint8_t* ltk, uint16_t ediv, uint64_t rand_val, int auth, int cmock_to_return);
typedef int (* CMOCK_ble_gap_encryption_initiate_CALLBACK)(uint16_t conn_handle, uint8_t key_size, const uint8_t* ltk, uint16_t ediv, uint64_t rand_val, int auth, int cmock_num_calls);
void ble_gap_encryption_initiate_AddCallback(CMOCK_ble_gap_encryption_initiate_CALLBACK Callback);
void ble_gap_encryption_initiate_Stub(CMOCK_ble_gap_encryption_initiate_CALLBACK Callback);
#define ble_gap_encryption_initiate_StubWithCallback ble_gap_encryption_initiate_Stub
#define ble_gap_encryption_initiate_ExpectWithArrayAndReturn(conn_handle, key_size, ltk, ltk_Depth, ediv, rand_val, auth, cmock_retval) ble_gap_encryption_initiate_CMockExpectWithArrayAndReturn(__LINE__, conn_handle, key_size, ltk, ltk_Depth, ediv, rand_val, auth, cmock_retval)
void ble_gap_encryption_initiate_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint8_t key_size, const uint8_t* ltk, int ltk_Depth, uint16_t ediv, uint64_t rand_val, int auth, int cmock_to_return);
#define ble_gap_encryption_initiate_IgnoreArg_conn_handle() ble_gap_encryption_initiate_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_encryption_initiate_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_encryption_initiate_IgnoreArg_key_size() ble_gap_encryption_initiate_CMockIgnoreArg_key_size(__LINE__)
void ble_gap_encryption_initiate_CMockIgnoreArg_key_size(UNITY_LINE_TYPE cmock_line);
#define ble_gap_encryption_initiate_IgnoreArg_ltk() ble_gap_encryption_initiate_CMockIgnoreArg_ltk(__LINE__)
void ble_gap_encryption_initiate_CMockIgnoreArg_ltk(UNITY_LINE_TYPE cmock_line);
#define ble_gap_encryption_initiate_IgnoreArg_ediv() ble_gap_encryption_initiate_CMockIgnoreArg_ediv(__LINE__)
void ble_gap_encryption_initiate_CMockIgnoreArg_ediv(UNITY_LINE_TYPE cmock_line);
#define ble_gap_encryption_initiate_IgnoreArg_rand_val() ble_gap_encryption_initiate_CMockIgnoreArg_rand_val(__LINE__)
void ble_gap_encryption_initiate_CMockIgnoreArg_rand_val(UNITY_LINE_TYPE cmock_line);
#define ble_gap_encryption_initiate_IgnoreArg_auth() ble_gap_encryption_initiate_CMockIgnoreArg_auth(__LINE__)
void ble_gap_encryption_initiate_CMockIgnoreArg_auth(UNITY_LINE_TYPE cmock_line);
#define ble_gap_conn_rssi_IgnoreAndReturn(cmock_retval) ble_gap_conn_rssi_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_conn_rssi_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_conn_rssi_StopIgnore() ble_gap_conn_rssi_CMockStopIgnore()
void ble_gap_conn_rssi_CMockStopIgnore(void);
#define ble_gap_conn_rssi_ExpectAndReturn(conn_handle, out_rssi, cmock_retval) ble_gap_conn_rssi_CMockExpectAndReturn(__LINE__, conn_handle, out_rssi, cmock_retval)
void ble_gap_conn_rssi_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, int8_t* out_rssi, int cmock_to_return);
typedef int (* CMOCK_ble_gap_conn_rssi_CALLBACK)(uint16_t conn_handle, int8_t* out_rssi, int cmock_num_calls);
void ble_gap_conn_rssi_AddCallback(CMOCK_ble_gap_conn_rssi_CALLBACK Callback);
void ble_gap_conn_rssi_Stub(CMOCK_ble_gap_conn_rssi_CALLBACK Callback);
#define ble_gap_conn_rssi_StubWithCallback ble_gap_conn_rssi_Stub
#define ble_gap_conn_rssi_ExpectWithArrayAndReturn(conn_handle, out_rssi, out_rssi_Depth, cmock_retval) ble_gap_conn_rssi_CMockExpectWithArrayAndReturn(__LINE__, conn_handle, out_rssi, out_rssi_Depth, cmock_retval)
void ble_gap_conn_rssi_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, int8_t* out_rssi, int out_rssi_Depth, int cmock_to_return);
#define ble_gap_conn_rssi_ReturnThruPtr_out_rssi(out_rssi) ble_gap_conn_rssi_CMockReturnMemThruPtr_out_rssi(__LINE__, out_rssi, sizeof(int8_t))
#define ble_gap_conn_rssi_ReturnArrayThruPtr_out_rssi(out_rssi, cmock_len) ble_gap_conn_rssi_CMockReturnMemThruPtr_out_rssi(__LINE__, out_rssi, cmock_len * sizeof(*out_rssi))
#define ble_gap_conn_rssi_ReturnMemThruPtr_out_rssi(out_rssi, cmock_size) ble_gap_conn_rssi_CMockReturnMemThruPtr_out_rssi(__LINE__, out_rssi, cmock_size)
void ble_gap_conn_rssi_CMockReturnMemThruPtr_out_rssi(UNITY_LINE_TYPE cmock_line, int8_t* out_rssi, size_t cmock_size);
#define ble_gap_conn_rssi_IgnoreArg_conn_handle() ble_gap_conn_rssi_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_conn_rssi_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_conn_rssi_IgnoreArg_out_rssi() ble_gap_conn_rssi_CMockIgnoreArg_out_rssi(__LINE__)
void ble_gap_conn_rssi_CMockIgnoreArg_out_rssi(UNITY_LINE_TYPE cmock_line);
#define ble_gap_unpair_IgnoreAndReturn(cmock_retval) ble_gap_unpair_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_unpair_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_unpair_StopIgnore() ble_gap_unpair_CMockStopIgnore()
void ble_gap_unpair_CMockStopIgnore(void);
#define ble_gap_unpair_ExpectAndReturn(peer_addr, cmock_retval) ble_gap_unpair_CMockExpectAndReturn(__LINE__, peer_addr, cmock_retval)
void ble_gap_unpair_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int cmock_to_return);
typedef int (* CMOCK_ble_gap_unpair_CALLBACK)(const ble_addr_t* peer_addr, int cmock_num_calls);
void ble_gap_unpair_AddCallback(CMOCK_ble_gap_unpair_CALLBACK Callback);
void ble_gap_unpair_Stub(CMOCK_ble_gap_unpair_CALLBACK Callback);
#define ble_gap_unpair_StubWithCallback ble_gap_unpair_Stub
#define ble_gap_unpair_ExpectWithArrayAndReturn(peer_addr, peer_addr_Depth, cmock_retval) ble_gap_unpair_CMockExpectWithArrayAndReturn(__LINE__, peer_addr, peer_addr_Depth, cmock_retval)
void ble_gap_unpair_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int peer_addr_Depth, int cmock_to_return);
#define ble_gap_unpair_IgnoreArg_peer_addr() ble_gap_unpair_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_unpair_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_unpair_oldest_peer_IgnoreAndReturn(cmock_retval) ble_gap_unpair_oldest_peer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_unpair_oldest_peer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_unpair_oldest_peer_StopIgnore() ble_gap_unpair_oldest_peer_CMockStopIgnore()
void ble_gap_unpair_oldest_peer_CMockStopIgnore(void);
#define ble_gap_unpair_oldest_peer_ExpectAndReturn(cmock_retval) ble_gap_unpair_oldest_peer_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_gap_unpair_oldest_peer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_gap_unpair_oldest_peer_CALLBACK)(int cmock_num_calls);
void ble_gap_unpair_oldest_peer_AddCallback(CMOCK_ble_gap_unpair_oldest_peer_CALLBACK Callback);
void ble_gap_unpair_oldest_peer_Stub(CMOCK_ble_gap_unpair_oldest_peer_CALLBACK Callback);
#define ble_gap_unpair_oldest_peer_StubWithCallback ble_gap_unpair_oldest_peer_Stub
#define ble_gap_unpair_oldest_except_IgnoreAndReturn(cmock_retval) ble_gap_unpair_oldest_except_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_unpair_oldest_except_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_unpair_oldest_except_StopIgnore() ble_gap_unpair_oldest_except_CMockStopIgnore()
void ble_gap_unpair_oldest_except_CMockStopIgnore(void);
#define ble_gap_unpair_oldest_except_ExpectAndReturn(peer_addr, cmock_retval) ble_gap_unpair_oldest_except_CMockExpectAndReturn(__LINE__, peer_addr, cmock_retval)
void ble_gap_unpair_oldest_except_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int cmock_to_return);
typedef int (* CMOCK_ble_gap_unpair_oldest_except_CALLBACK)(const ble_addr_t* peer_addr, int cmock_num_calls);
void ble_gap_unpair_oldest_except_AddCallback(CMOCK_ble_gap_unpair_oldest_except_CALLBACK Callback);
void ble_gap_unpair_oldest_except_Stub(CMOCK_ble_gap_unpair_oldest_except_CALLBACK Callback);
#define ble_gap_unpair_oldest_except_StubWithCallback ble_gap_unpair_oldest_except_Stub
#define ble_gap_unpair_oldest_except_ExpectWithArrayAndReturn(peer_addr, peer_addr_Depth, cmock_retval) ble_gap_unpair_oldest_except_CMockExpectWithArrayAndReturn(__LINE__, peer_addr, peer_addr_Depth, cmock_retval)
void ble_gap_unpair_oldest_except_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int peer_addr_Depth, int cmock_to_return);
#define ble_gap_unpair_oldest_except_IgnoreArg_peer_addr() ble_gap_unpair_oldest_except_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_unpair_oldest_except_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_priv_mode_IgnoreAndReturn(cmock_retval) ble_gap_set_priv_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_set_priv_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_set_priv_mode_StopIgnore() ble_gap_set_priv_mode_CMockStopIgnore()
void ble_gap_set_priv_mode_CMockStopIgnore(void);
#define ble_gap_set_priv_mode_ExpectAndReturn(peer_addr, priv_mode, cmock_retval) ble_gap_set_priv_mode_CMockExpectAndReturn(__LINE__, peer_addr, priv_mode, cmock_retval)
void ble_gap_set_priv_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, uint8_t priv_mode, int cmock_to_return);
typedef int (* CMOCK_ble_gap_set_priv_mode_CALLBACK)(const ble_addr_t* peer_addr, uint8_t priv_mode, int cmock_num_calls);
void ble_gap_set_priv_mode_AddCallback(CMOCK_ble_gap_set_priv_mode_CALLBACK Callback);
void ble_gap_set_priv_mode_Stub(CMOCK_ble_gap_set_priv_mode_CALLBACK Callback);
#define ble_gap_set_priv_mode_StubWithCallback ble_gap_set_priv_mode_Stub
#define ble_gap_set_priv_mode_ExpectWithArrayAndReturn(peer_addr, peer_addr_Depth, priv_mode, cmock_retval) ble_gap_set_priv_mode_CMockExpectWithArrayAndReturn(__LINE__, peer_addr, peer_addr_Depth, priv_mode, cmock_retval)
void ble_gap_set_priv_mode_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_addr, int peer_addr_Depth, uint8_t priv_mode, int cmock_to_return);
#define ble_gap_set_priv_mode_IgnoreArg_peer_addr() ble_gap_set_priv_mode_CMockIgnoreArg_peer_addr(__LINE__)
void ble_gap_set_priv_mode_CMockIgnoreArg_peer_addr(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_priv_mode_IgnoreArg_priv_mode() ble_gap_set_priv_mode_CMockIgnoreArg_priv_mode(__LINE__)
void ble_gap_set_priv_mode_CMockIgnoreArg_priv_mode(UNITY_LINE_TYPE cmock_line);
#define ble_gap_read_le_phy_IgnoreAndReturn(cmock_retval) ble_gap_read_le_phy_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_read_le_phy_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_read_le_phy_StopIgnore() ble_gap_read_le_phy_CMockStopIgnore()
void ble_gap_read_le_phy_CMockStopIgnore(void);
#define ble_gap_read_le_phy_ExpectAndReturn(conn_handle, tx_phy, rx_phy, cmock_retval) ble_gap_read_le_phy_CMockExpectAndReturn(__LINE__, conn_handle, tx_phy, rx_phy, cmock_retval)
void ble_gap_read_le_phy_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint8_t* tx_phy, uint8_t* rx_phy, int cmock_to_return);
typedef int (* CMOCK_ble_gap_read_le_phy_CALLBACK)(uint16_t conn_handle, uint8_t* tx_phy, uint8_t* rx_phy, int cmock_num_calls);
void ble_gap_read_le_phy_AddCallback(CMOCK_ble_gap_read_le_phy_CALLBACK Callback);
void ble_gap_read_le_phy_Stub(CMOCK_ble_gap_read_le_phy_CALLBACK Callback);
#define ble_gap_read_le_phy_StubWithCallback ble_gap_read_le_phy_Stub
#define ble_gap_read_le_phy_ExpectWithArrayAndReturn(conn_handle, tx_phy, tx_phy_Depth, rx_phy, rx_phy_Depth, cmock_retval) ble_gap_read_le_phy_CMockExpectWithArrayAndReturn(__LINE__, conn_handle, tx_phy, tx_phy_Depth, rx_phy, rx_phy_Depth, cmock_retval)
void ble_gap_read_le_phy_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint8_t* tx_phy, int tx_phy_Depth, uint8_t* rx_phy, int rx_phy_Depth, int cmock_to_return);
#define ble_gap_read_le_phy_ReturnThruPtr_tx_phy(tx_phy) ble_gap_read_le_phy_CMockReturnMemThruPtr_tx_phy(__LINE__, tx_phy, sizeof(uint8_t))
#define ble_gap_read_le_phy_ReturnArrayThruPtr_tx_phy(tx_phy, cmock_len) ble_gap_read_le_phy_CMockReturnMemThruPtr_tx_phy(__LINE__, tx_phy, cmock_len * sizeof(*tx_phy))
#define ble_gap_read_le_phy_ReturnMemThruPtr_tx_phy(tx_phy, cmock_size) ble_gap_read_le_phy_CMockReturnMemThruPtr_tx_phy(__LINE__, tx_phy, cmock_size)
void ble_gap_read_le_phy_CMockReturnMemThruPtr_tx_phy(UNITY_LINE_TYPE cmock_line, uint8_t* tx_phy, size_t cmock_size);
#define ble_gap_read_le_phy_ReturnThruPtr_rx_phy(rx_phy) ble_gap_read_le_phy_CMockReturnMemThruPtr_rx_phy(__LINE__, rx_phy, sizeof(uint8_t))
#define ble_gap_read_le_phy_ReturnArrayThruPtr_rx_phy(rx_phy, cmock_len) ble_gap_read_le_phy_CMockReturnMemThruPtr_rx_phy(__LINE__, rx_phy, cmock_len * sizeof(*rx_phy))
#define ble_gap_read_le_phy_ReturnMemThruPtr_rx_phy(rx_phy, cmock_size) ble_gap_read_le_phy_CMockReturnMemThruPtr_rx_phy(__LINE__, rx_phy, cmock_size)
void ble_gap_read_le_phy_CMockReturnMemThruPtr_rx_phy(UNITY_LINE_TYPE cmock_line, uint8_t* rx_phy, size_t cmock_size);
#define ble_gap_read_le_phy_IgnoreArg_conn_handle() ble_gap_read_le_phy_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_read_le_phy_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_read_le_phy_IgnoreArg_tx_phy() ble_gap_read_le_phy_CMockIgnoreArg_tx_phy(__LINE__)
void ble_gap_read_le_phy_CMockIgnoreArg_tx_phy(UNITY_LINE_TYPE cmock_line);
#define ble_gap_read_le_phy_IgnoreArg_rx_phy() ble_gap_read_le_phy_CMockIgnoreArg_rx_phy(__LINE__)
void ble_gap_read_le_phy_CMockIgnoreArg_rx_phy(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_prefered_default_le_phy_IgnoreAndReturn(cmock_retval) ble_gap_set_prefered_default_le_phy_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_set_prefered_default_le_phy_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_set_prefered_default_le_phy_StopIgnore() ble_gap_set_prefered_default_le_phy_CMockStopIgnore()
void ble_gap_set_prefered_default_le_phy_CMockStopIgnore(void);
#define ble_gap_set_prefered_default_le_phy_ExpectAndReturn(tx_phys_mask, rx_phys_mask, cmock_retval) ble_gap_set_prefered_default_le_phy_CMockExpectAndReturn(__LINE__, tx_phys_mask, rx_phys_mask, cmock_retval)
void ble_gap_set_prefered_default_le_phy_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t tx_phys_mask, uint8_t rx_phys_mask, int cmock_to_return);
typedef int (* CMOCK_ble_gap_set_prefered_default_le_phy_CALLBACK)(uint8_t tx_phys_mask, uint8_t rx_phys_mask, int cmock_num_calls);
void ble_gap_set_prefered_default_le_phy_AddCallback(CMOCK_ble_gap_set_prefered_default_le_phy_CALLBACK Callback);
void ble_gap_set_prefered_default_le_phy_Stub(CMOCK_ble_gap_set_prefered_default_le_phy_CALLBACK Callback);
#define ble_gap_set_prefered_default_le_phy_StubWithCallback ble_gap_set_prefered_default_le_phy_Stub
#define ble_gap_set_prefered_default_le_phy_IgnoreArg_tx_phys_mask() ble_gap_set_prefered_default_le_phy_CMockIgnoreArg_tx_phys_mask(__LINE__)
void ble_gap_set_prefered_default_le_phy_CMockIgnoreArg_tx_phys_mask(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_prefered_default_le_phy_IgnoreArg_rx_phys_mask() ble_gap_set_prefered_default_le_phy_CMockIgnoreArg_rx_phys_mask(__LINE__)
void ble_gap_set_prefered_default_le_phy_CMockIgnoreArg_rx_phys_mask(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_prefered_le_phy_IgnoreAndReturn(cmock_retval) ble_gap_set_prefered_le_phy_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_set_prefered_le_phy_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_set_prefered_le_phy_StopIgnore() ble_gap_set_prefered_le_phy_CMockStopIgnore()
void ble_gap_set_prefered_le_phy_CMockStopIgnore(void);
#define ble_gap_set_prefered_le_phy_ExpectAndReturn(conn_handle, tx_phys_mask, rx_phys_mask, phy_opts, cmock_retval) ble_gap_set_prefered_le_phy_CMockExpectAndReturn(__LINE__, conn_handle, tx_phys_mask, rx_phys_mask, phy_opts, cmock_retval)
void ble_gap_set_prefered_le_phy_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t conn_handle, uint8_t tx_phys_mask, uint8_t rx_phys_mask, uint16_t phy_opts, int cmock_to_return);
typedef int (* CMOCK_ble_gap_set_prefered_le_phy_CALLBACK)(uint16_t conn_handle, uint8_t tx_phys_mask, uint8_t rx_phys_mask, uint16_t phy_opts, int cmock_num_calls);
void ble_gap_set_prefered_le_phy_AddCallback(CMOCK_ble_gap_set_prefered_le_phy_CALLBACK Callback);
void ble_gap_set_prefered_le_phy_Stub(CMOCK_ble_gap_set_prefered_le_phy_CALLBACK Callback);
#define ble_gap_set_prefered_le_phy_StubWithCallback ble_gap_set_prefered_le_phy_Stub
#define ble_gap_set_prefered_le_phy_IgnoreArg_conn_handle() ble_gap_set_prefered_le_phy_CMockIgnoreArg_conn_handle(__LINE__)
void ble_gap_set_prefered_le_phy_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_prefered_le_phy_IgnoreArg_tx_phys_mask() ble_gap_set_prefered_le_phy_CMockIgnoreArg_tx_phys_mask(__LINE__)
void ble_gap_set_prefered_le_phy_CMockIgnoreArg_tx_phys_mask(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_prefered_le_phy_IgnoreArg_rx_phys_mask() ble_gap_set_prefered_le_phy_CMockIgnoreArg_rx_phys_mask(__LINE__)
void ble_gap_set_prefered_le_phy_CMockIgnoreArg_rx_phys_mask(UNITY_LINE_TYPE cmock_line);
#define ble_gap_set_prefered_le_phy_IgnoreArg_phy_opts() ble_gap_set_prefered_le_phy_CMockIgnoreArg_phy_opts(__LINE__)
void ble_gap_set_prefered_le_phy_CMockIgnoreArg_phy_opts(UNITY_LINE_TYPE cmock_line);
#define ble_gap_event_listener_register_IgnoreAndReturn(cmock_retval) ble_gap_event_listener_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_event_listener_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_event_listener_register_StopIgnore() ble_gap_event_listener_register_CMockStopIgnore()
void ble_gap_event_listener_register_CMockStopIgnore(void);
#define ble_gap_event_listener_register_ExpectAndReturn(listener, fn, arg, cmock_retval) ble_gap_event_listener_register_CMockExpectAndReturn(__LINE__, listener, fn, arg, cmock_retval)
void ble_gap_event_listener_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ble_gap_event_listener* listener, ble_gap_event_fn* fn, void* arg, int cmock_to_return);
typedef int (* CMOCK_ble_gap_event_listener_register_CALLBACK)(struct ble_gap_event_listener* listener, ble_gap_event_fn* fn, void* arg, int cmock_num_calls);
void ble_gap_event_listener_register_AddCallback(CMOCK_ble_gap_event_listener_register_CALLBACK Callback);
void ble_gap_event_listener_register_Stub(CMOCK_ble_gap_event_listener_register_CALLBACK Callback);
#define ble_gap_event_listener_register_StubWithCallback ble_gap_event_listener_register_Stub
#define ble_gap_event_listener_register_ExpectWithArrayAndReturn(listener, listener_Depth, fn, fn_Depth, arg, arg_Depth, cmock_retval) ble_gap_event_listener_register_CMockExpectWithArrayAndReturn(__LINE__, listener, listener_Depth, fn, fn_Depth, arg, arg_Depth, cmock_retval)
void ble_gap_event_listener_register_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ble_gap_event_listener* listener, int listener_Depth, ble_gap_event_fn* fn, int fn_Depth, void* arg, int arg_Depth, int cmock_to_return);
#define ble_gap_event_listener_register_ReturnThruPtr_listener(listener) ble_gap_event_listener_register_CMockReturnMemThruPtr_listener(__LINE__, listener, sizeof(struct ble_gap_event_listener))
#define ble_gap_event_listener_register_ReturnArrayThruPtr_listener(listener, cmock_len) ble_gap_event_listener_register_CMockReturnMemThruPtr_listener(__LINE__, listener, cmock_len * sizeof(*listener))
#define ble_gap_event_listener_register_ReturnMemThruPtr_listener(listener, cmock_size) ble_gap_event_listener_register_CMockReturnMemThruPtr_listener(__LINE__, listener, cmock_size)
void ble_gap_event_listener_register_CMockReturnMemThruPtr_listener(UNITY_LINE_TYPE cmock_line, struct ble_gap_event_listener* listener, size_t cmock_size);
#define ble_gap_event_listener_register_ReturnThruPtr_fn(fn) ble_gap_event_listener_register_CMockReturnMemThruPtr_fn(__LINE__, fn, sizeof(ble_gap_event_fn))
#define ble_gap_event_listener_register_ReturnArrayThruPtr_fn(fn, cmock_len) ble_gap_event_listener_register_CMockReturnMemThruPtr_fn(__LINE__, fn, cmock_len * sizeof(*fn))
#define ble_gap_event_listener_register_ReturnMemThruPtr_fn(fn, cmock_size) ble_gap_event_listener_register_CMockReturnMemThruPtr_fn(__LINE__, fn, cmock_size)
void ble_gap_event_listener_register_CMockReturnMemThruPtr_fn(UNITY_LINE_TYPE cmock_line, ble_gap_event_fn* fn, size_t cmock_size);
#define ble_gap_event_listener_register_ReturnThruPtr_arg(arg) ble_gap_event_listener_register_CMockReturnMemThruPtr_arg(__LINE__, arg, sizeof(void))
#define ble_gap_event_listener_register_ReturnArrayThruPtr_arg(arg, cmock_len) ble_gap_event_listener_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_len * sizeof(*arg))
#define ble_gap_event_listener_register_ReturnMemThruPtr_arg(arg, cmock_size) ble_gap_event_listener_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_size)
void ble_gap_event_listener_register_CMockReturnMemThruPtr_arg(UNITY_LINE_TYPE cmock_line, void* arg, size_t cmock_size);
#define ble_gap_event_listener_register_IgnoreArg_listener() ble_gap_event_listener_register_CMockIgnoreArg_listener(__LINE__)
void ble_gap_event_listener_register_CMockIgnoreArg_listener(UNITY_LINE_TYPE cmock_line);
#define ble_gap_event_listener_register_IgnoreArg_fn() ble_gap_event_listener_register_CMockIgnoreArg_fn(__LINE__)
void ble_gap_event_listener_register_CMockIgnoreArg_fn(UNITY_LINE_TYPE cmock_line);
#define ble_gap_event_listener_register_IgnoreArg_arg() ble_gap_event_listener_register_CMockIgnoreArg_arg(__LINE__)
void ble_gap_event_listener_register_CMockIgnoreArg_arg(UNITY_LINE_TYPE cmock_line);
#define ble_gap_event_listener_unregister_IgnoreAndReturn(cmock_retval) ble_gap_event_listener_unregister_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_gap_event_listener_unregister_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_gap_event_listener_unregister_StopIgnore() ble_gap_event_listener_unregister_CMockStopIgnore()
void ble_gap_event_listener_unregister_CMockStopIgnore(void);
#define ble_gap_event_listener_unregister_ExpectAndReturn(listener, cmock_retval) ble_gap_event_listener_unregister_CMockExpectAndReturn(__LINE__, listener, cmock_retval)
void ble_gap_event_listener_unregister_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ble_gap_event_listener* listener, int cmock_to_return);
typedef int (* CMOCK_ble_gap_event_listener_unregister_CALLBACK)(struct ble_gap_event_listener* listener, int cmock_num_calls);
void ble_gap_event_listener_unregister_AddCallback(CMOCK_ble_gap_event_listener_unregister_CALLBACK Callback);
void ble_gap_event_listener_unregister_Stub(CMOCK_ble_gap_event_listener_unregister_CALLBACK Callback);
#define ble_gap_event_listener_unregister_StubWithCallback ble_gap_event_listener_unregister_Stub
#define ble_gap_event_listener_unregister_ExpectWithArrayAndReturn(listener, listener_Depth, cmock_retval) ble_gap_event_listener_unregister_CMockExpectWithArrayAndReturn(__LINE__, listener, listener_Depth, cmock_retval)
void ble_gap_event_listener_unregister_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ble_gap_event_listener* listener, int listener_Depth, int cmock_to_return);
#define ble_gap_event_listener_unregister_ReturnThruPtr_listener(listener) ble_gap_event_listener_unregister_CMockReturnMemThruPtr_listener(__LINE__, listener, sizeof(struct ble_gap_event_listener))
#define ble_gap_event_listener_unregister_ReturnArrayThruPtr_listener(listener, cmock_len) ble_gap_event_listener_unregister_CMockReturnMemThruPtr_listener(__LINE__, listener, cmock_len * sizeof(*listener))
#define ble_gap_event_listener_unregister_ReturnMemThruPtr_listener(listener, cmock_size) ble_gap_event_listener_unregister_CMockReturnMemThruPtr_listener(__LINE__, listener, cmock_size)
void ble_gap_event_listener_unregister_CMockReturnMemThruPtr_listener(UNITY_LINE_TYPE cmock_line, struct ble_gap_event_listener* listener, size_t cmock_size);
#define ble_gap_event_listener_unregister_IgnoreArg_listener() ble_gap_event_listener_unregister_CMockIgnoreArg_listener(__LINE__)
void ble_gap_event_listener_unregister_CMockIgnoreArg_listener(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

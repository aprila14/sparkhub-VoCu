#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BLE_STORE_H
#define _MOCK_BLE_STORE_H

#include "unity.h"
#include "ble_store.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ble_store_Init(void);
void mock_ble_store_Destroy(void);
void mock_ble_store_Verify(void);




#define ble_store_read_IgnoreAndReturn(cmock_retval) ble_store_read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_read_StopIgnore() ble_store_read_CMockStopIgnore()
void ble_store_read_CMockStopIgnore(void);
#define ble_store_read_ExpectAndReturn(obj_type, key, val, cmock_retval) ble_store_read_CMockExpectAndReturn(__LINE__, obj_type, key, val, cmock_retval)
void ble_store_read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_key* key, union ble_store_value* val, int cmock_to_return);
typedef int (* CMOCK_ble_store_read_CALLBACK)(int obj_type, const union ble_store_key* key, union ble_store_value* val, int cmock_num_calls);
void ble_store_read_AddCallback(CMOCK_ble_store_read_CALLBACK Callback);
void ble_store_read_Stub(CMOCK_ble_store_read_CALLBACK Callback);
#define ble_store_read_StubWithCallback ble_store_read_Stub
#define ble_store_read_ExpectWithArrayAndReturn(obj_type, key, key_Depth, val, val_Depth, cmock_retval) ble_store_read_CMockExpectWithArrayAndReturn(__LINE__, obj_type, key, key_Depth, val, val_Depth, cmock_retval)
void ble_store_read_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_key* key, int key_Depth, union ble_store_value* val, int val_Depth, int cmock_to_return);
#define ble_store_read_ReturnThruPtr_val(val) ble_store_read_CMockReturnMemThruPtr_val(__LINE__, val, sizeof(union ble_store_value))
#define ble_store_read_ReturnArrayThruPtr_val(val, cmock_len) ble_store_read_CMockReturnMemThruPtr_val(__LINE__, val, cmock_len * sizeof(*val))
#define ble_store_read_ReturnMemThruPtr_val(val, cmock_size) ble_store_read_CMockReturnMemThruPtr_val(__LINE__, val, cmock_size)
void ble_store_read_CMockReturnMemThruPtr_val(UNITY_LINE_TYPE cmock_line, union ble_store_value* val, size_t cmock_size);
#define ble_store_read_IgnoreArg_obj_type() ble_store_read_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_read_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_IgnoreArg_key() ble_store_read_CMockIgnoreArg_key(__LINE__)
void ble_store_read_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_IgnoreArg_val() ble_store_read_CMockIgnoreArg_val(__LINE__)
void ble_store_read_CMockIgnoreArg_val(UNITY_LINE_TYPE cmock_line);
#define ble_store_write_IgnoreAndReturn(cmock_retval) ble_store_write_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_write_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_write_StopIgnore() ble_store_write_CMockStopIgnore()
void ble_store_write_CMockStopIgnore(void);
#define ble_store_write_ExpectAndReturn(obj_type, val, cmock_retval) ble_store_write_CMockExpectAndReturn(__LINE__, obj_type, val, cmock_retval)
void ble_store_write_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_value* val, int cmock_to_return);
typedef int (* CMOCK_ble_store_write_CALLBACK)(int obj_type, const union ble_store_value* val, int cmock_num_calls);
void ble_store_write_AddCallback(CMOCK_ble_store_write_CALLBACK Callback);
void ble_store_write_Stub(CMOCK_ble_store_write_CALLBACK Callback);
#define ble_store_write_StubWithCallback ble_store_write_Stub
#define ble_store_write_ExpectWithArrayAndReturn(obj_type, val, val_Depth, cmock_retval) ble_store_write_CMockExpectWithArrayAndReturn(__LINE__, obj_type, val, val_Depth, cmock_retval)
void ble_store_write_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_value* val, int val_Depth, int cmock_to_return);
#define ble_store_write_IgnoreArg_obj_type() ble_store_write_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_write_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_write_IgnoreArg_val() ble_store_write_CMockIgnoreArg_val(__LINE__)
void ble_store_write_CMockIgnoreArg_val(UNITY_LINE_TYPE cmock_line);
#define ble_store_delete_IgnoreAndReturn(cmock_retval) ble_store_delete_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_delete_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_delete_StopIgnore() ble_store_delete_CMockStopIgnore()
void ble_store_delete_CMockStopIgnore(void);
#define ble_store_delete_ExpectAndReturn(obj_type, key, cmock_retval) ble_store_delete_CMockExpectAndReturn(__LINE__, obj_type, key, cmock_retval)
void ble_store_delete_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_key* key, int cmock_to_return);
typedef int (* CMOCK_ble_store_delete_CALLBACK)(int obj_type, const union ble_store_key* key, int cmock_num_calls);
void ble_store_delete_AddCallback(CMOCK_ble_store_delete_CALLBACK Callback);
void ble_store_delete_Stub(CMOCK_ble_store_delete_CALLBACK Callback);
#define ble_store_delete_StubWithCallback ble_store_delete_Stub
#define ble_store_delete_ExpectWithArrayAndReturn(obj_type, key, key_Depth, cmock_retval) ble_store_delete_CMockExpectWithArrayAndReturn(__LINE__, obj_type, key, key_Depth, cmock_retval)
void ble_store_delete_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_key* key, int key_Depth, int cmock_to_return);
#define ble_store_delete_IgnoreArg_obj_type() ble_store_delete_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_delete_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_delete_IgnoreArg_key() ble_store_delete_CMockIgnoreArg_key(__LINE__)
void ble_store_delete_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_overflow_event_IgnoreAndReturn(cmock_retval) ble_store_overflow_event_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_overflow_event_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_overflow_event_StopIgnore() ble_store_overflow_event_CMockStopIgnore()
void ble_store_overflow_event_CMockStopIgnore(void);
#define ble_store_overflow_event_ExpectAndReturn(obj_type, value, cmock_retval) ble_store_overflow_event_CMockExpectAndReturn(__LINE__, obj_type, value, cmock_retval)
void ble_store_overflow_event_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_value* value, int cmock_to_return);
typedef int (* CMOCK_ble_store_overflow_event_CALLBACK)(int obj_type, const union ble_store_value* value, int cmock_num_calls);
void ble_store_overflow_event_AddCallback(CMOCK_ble_store_overflow_event_CALLBACK Callback);
void ble_store_overflow_event_Stub(CMOCK_ble_store_overflow_event_CALLBACK Callback);
#define ble_store_overflow_event_StubWithCallback ble_store_overflow_event_Stub
#define ble_store_overflow_event_ExpectWithArrayAndReturn(obj_type, value, value_Depth, cmock_retval) ble_store_overflow_event_CMockExpectWithArrayAndReturn(__LINE__, obj_type, value, value_Depth, cmock_retval)
void ble_store_overflow_event_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, const union ble_store_value* value, int value_Depth, int cmock_to_return);
#define ble_store_overflow_event_IgnoreArg_obj_type() ble_store_overflow_event_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_overflow_event_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_overflow_event_IgnoreArg_value() ble_store_overflow_event_CMockIgnoreArg_value(__LINE__)
void ble_store_overflow_event_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define ble_store_full_event_IgnoreAndReturn(cmock_retval) ble_store_full_event_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_full_event_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_full_event_StopIgnore() ble_store_full_event_CMockStopIgnore()
void ble_store_full_event_CMockStopIgnore(void);
#define ble_store_full_event_ExpectAndReturn(obj_type, conn_handle, cmock_retval) ble_store_full_event_CMockExpectAndReturn(__LINE__, obj_type, conn_handle, cmock_retval)
void ble_store_full_event_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, uint16_t conn_handle, int cmock_to_return);
typedef int (* CMOCK_ble_store_full_event_CALLBACK)(int obj_type, uint16_t conn_handle, int cmock_num_calls);
void ble_store_full_event_AddCallback(CMOCK_ble_store_full_event_CALLBACK Callback);
void ble_store_full_event_Stub(CMOCK_ble_store_full_event_CALLBACK Callback);
#define ble_store_full_event_StubWithCallback ble_store_full_event_Stub
#define ble_store_full_event_IgnoreArg_obj_type() ble_store_full_event_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_full_event_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_full_event_IgnoreArg_conn_handle() ble_store_full_event_CMockIgnoreArg_conn_handle(__LINE__)
void ble_store_full_event_CMockIgnoreArg_conn_handle(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_our_sec_IgnoreAndReturn(cmock_retval) ble_store_read_our_sec_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_read_our_sec_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_read_our_sec_StopIgnore() ble_store_read_our_sec_CMockStopIgnore()
void ble_store_read_our_sec_CMockStopIgnore(void);
#define ble_store_read_our_sec_ExpectAndReturn(key_sec, value_sec, cmock_retval) ble_store_read_our_sec_CMockExpectAndReturn(__LINE__, key_sec, value_sec, cmock_retval)
void ble_store_read_our_sec_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, struct ble_store_value_sec* value_sec, int cmock_to_return);
typedef int (* CMOCK_ble_store_read_our_sec_CALLBACK)(const struct ble_store_key_sec* key_sec, struct ble_store_value_sec* value_sec, int cmock_num_calls);
void ble_store_read_our_sec_AddCallback(CMOCK_ble_store_read_our_sec_CALLBACK Callback);
void ble_store_read_our_sec_Stub(CMOCK_ble_store_read_our_sec_CALLBACK Callback);
#define ble_store_read_our_sec_StubWithCallback ble_store_read_our_sec_Stub
#define ble_store_read_our_sec_ExpectWithArrayAndReturn(key_sec, key_sec_Depth, value_sec, value_sec_Depth, cmock_retval) ble_store_read_our_sec_CMockExpectWithArrayAndReturn(__LINE__, key_sec, key_sec_Depth, value_sec, value_sec_Depth, cmock_retval)
void ble_store_read_our_sec_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, int key_sec_Depth, struct ble_store_value_sec* value_sec, int value_sec_Depth, int cmock_to_return);
#define ble_store_read_our_sec_ReturnThruPtr_value_sec(value_sec) ble_store_read_our_sec_CMockReturnMemThruPtr_value_sec(__LINE__, value_sec, sizeof(struct ble_store_value_sec))
#define ble_store_read_our_sec_ReturnArrayThruPtr_value_sec(value_sec, cmock_len) ble_store_read_our_sec_CMockReturnMemThruPtr_value_sec(__LINE__, value_sec, cmock_len * sizeof(*value_sec))
#define ble_store_read_our_sec_ReturnMemThruPtr_value_sec(value_sec, cmock_size) ble_store_read_our_sec_CMockReturnMemThruPtr_value_sec(__LINE__, value_sec, cmock_size)
void ble_store_read_our_sec_CMockReturnMemThruPtr_value_sec(UNITY_LINE_TYPE cmock_line, struct ble_store_value_sec* value_sec, size_t cmock_size);
#define ble_store_read_our_sec_IgnoreArg_key_sec() ble_store_read_our_sec_CMockIgnoreArg_key_sec(__LINE__)
void ble_store_read_our_sec_CMockIgnoreArg_key_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_our_sec_IgnoreArg_value_sec() ble_store_read_our_sec_CMockIgnoreArg_value_sec(__LINE__)
void ble_store_read_our_sec_CMockIgnoreArg_value_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_write_our_sec_IgnoreAndReturn(cmock_retval) ble_store_write_our_sec_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_write_our_sec_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_write_our_sec_StopIgnore() ble_store_write_our_sec_CMockStopIgnore()
void ble_store_write_our_sec_CMockStopIgnore(void);
#define ble_store_write_our_sec_ExpectAndReturn(value_sec, cmock_retval) ble_store_write_our_sec_CMockExpectAndReturn(__LINE__, value_sec, cmock_retval)
void ble_store_write_our_sec_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_value_sec* value_sec, int cmock_to_return);
typedef int (* CMOCK_ble_store_write_our_sec_CALLBACK)(const struct ble_store_value_sec* value_sec, int cmock_num_calls);
void ble_store_write_our_sec_AddCallback(CMOCK_ble_store_write_our_sec_CALLBACK Callback);
void ble_store_write_our_sec_Stub(CMOCK_ble_store_write_our_sec_CALLBACK Callback);
#define ble_store_write_our_sec_StubWithCallback ble_store_write_our_sec_Stub
#define ble_store_write_our_sec_ExpectWithArrayAndReturn(value_sec, value_sec_Depth, cmock_retval) ble_store_write_our_sec_CMockExpectWithArrayAndReturn(__LINE__, value_sec, value_sec_Depth, cmock_retval)
void ble_store_write_our_sec_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_value_sec* value_sec, int value_sec_Depth, int cmock_to_return);
#define ble_store_write_our_sec_IgnoreArg_value_sec() ble_store_write_our_sec_CMockIgnoreArg_value_sec(__LINE__)
void ble_store_write_our_sec_CMockIgnoreArg_value_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_delete_our_sec_IgnoreAndReturn(cmock_retval) ble_store_delete_our_sec_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_delete_our_sec_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_delete_our_sec_StopIgnore() ble_store_delete_our_sec_CMockStopIgnore()
void ble_store_delete_our_sec_CMockStopIgnore(void);
#define ble_store_delete_our_sec_ExpectAndReturn(key_sec, cmock_retval) ble_store_delete_our_sec_CMockExpectAndReturn(__LINE__, key_sec, cmock_retval)
void ble_store_delete_our_sec_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, int cmock_to_return);
typedef int (* CMOCK_ble_store_delete_our_sec_CALLBACK)(const struct ble_store_key_sec* key_sec, int cmock_num_calls);
void ble_store_delete_our_sec_AddCallback(CMOCK_ble_store_delete_our_sec_CALLBACK Callback);
void ble_store_delete_our_sec_Stub(CMOCK_ble_store_delete_our_sec_CALLBACK Callback);
#define ble_store_delete_our_sec_StubWithCallback ble_store_delete_our_sec_Stub
#define ble_store_delete_our_sec_ExpectWithArrayAndReturn(key_sec, key_sec_Depth, cmock_retval) ble_store_delete_our_sec_CMockExpectWithArrayAndReturn(__LINE__, key_sec, key_sec_Depth, cmock_retval)
void ble_store_delete_our_sec_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, int key_sec_Depth, int cmock_to_return);
#define ble_store_delete_our_sec_IgnoreArg_key_sec() ble_store_delete_our_sec_CMockIgnoreArg_key_sec(__LINE__)
void ble_store_delete_our_sec_CMockIgnoreArg_key_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_peer_sec_IgnoreAndReturn(cmock_retval) ble_store_read_peer_sec_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_read_peer_sec_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_read_peer_sec_StopIgnore() ble_store_read_peer_sec_CMockStopIgnore()
void ble_store_read_peer_sec_CMockStopIgnore(void);
#define ble_store_read_peer_sec_ExpectAndReturn(key_sec, value_sec, cmock_retval) ble_store_read_peer_sec_CMockExpectAndReturn(__LINE__, key_sec, value_sec, cmock_retval)
void ble_store_read_peer_sec_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, struct ble_store_value_sec* value_sec, int cmock_to_return);
typedef int (* CMOCK_ble_store_read_peer_sec_CALLBACK)(const struct ble_store_key_sec* key_sec, struct ble_store_value_sec* value_sec, int cmock_num_calls);
void ble_store_read_peer_sec_AddCallback(CMOCK_ble_store_read_peer_sec_CALLBACK Callback);
void ble_store_read_peer_sec_Stub(CMOCK_ble_store_read_peer_sec_CALLBACK Callback);
#define ble_store_read_peer_sec_StubWithCallback ble_store_read_peer_sec_Stub
#define ble_store_read_peer_sec_ExpectWithArrayAndReturn(key_sec, key_sec_Depth, value_sec, value_sec_Depth, cmock_retval) ble_store_read_peer_sec_CMockExpectWithArrayAndReturn(__LINE__, key_sec, key_sec_Depth, value_sec, value_sec_Depth, cmock_retval)
void ble_store_read_peer_sec_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, int key_sec_Depth, struct ble_store_value_sec* value_sec, int value_sec_Depth, int cmock_to_return);
#define ble_store_read_peer_sec_ReturnThruPtr_value_sec(value_sec) ble_store_read_peer_sec_CMockReturnMemThruPtr_value_sec(__LINE__, value_sec, sizeof(struct ble_store_value_sec))
#define ble_store_read_peer_sec_ReturnArrayThruPtr_value_sec(value_sec, cmock_len) ble_store_read_peer_sec_CMockReturnMemThruPtr_value_sec(__LINE__, value_sec, cmock_len * sizeof(*value_sec))
#define ble_store_read_peer_sec_ReturnMemThruPtr_value_sec(value_sec, cmock_size) ble_store_read_peer_sec_CMockReturnMemThruPtr_value_sec(__LINE__, value_sec, cmock_size)
void ble_store_read_peer_sec_CMockReturnMemThruPtr_value_sec(UNITY_LINE_TYPE cmock_line, struct ble_store_value_sec* value_sec, size_t cmock_size);
#define ble_store_read_peer_sec_IgnoreArg_key_sec() ble_store_read_peer_sec_CMockIgnoreArg_key_sec(__LINE__)
void ble_store_read_peer_sec_CMockIgnoreArg_key_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_peer_sec_IgnoreArg_value_sec() ble_store_read_peer_sec_CMockIgnoreArg_value_sec(__LINE__)
void ble_store_read_peer_sec_CMockIgnoreArg_value_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_write_peer_sec_IgnoreAndReturn(cmock_retval) ble_store_write_peer_sec_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_write_peer_sec_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_write_peer_sec_StopIgnore() ble_store_write_peer_sec_CMockStopIgnore()
void ble_store_write_peer_sec_CMockStopIgnore(void);
#define ble_store_write_peer_sec_ExpectAndReturn(value_sec, cmock_retval) ble_store_write_peer_sec_CMockExpectAndReturn(__LINE__, value_sec, cmock_retval)
void ble_store_write_peer_sec_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_value_sec* value_sec, int cmock_to_return);
typedef int (* CMOCK_ble_store_write_peer_sec_CALLBACK)(const struct ble_store_value_sec* value_sec, int cmock_num_calls);
void ble_store_write_peer_sec_AddCallback(CMOCK_ble_store_write_peer_sec_CALLBACK Callback);
void ble_store_write_peer_sec_Stub(CMOCK_ble_store_write_peer_sec_CALLBACK Callback);
#define ble_store_write_peer_sec_StubWithCallback ble_store_write_peer_sec_Stub
#define ble_store_write_peer_sec_ExpectWithArrayAndReturn(value_sec, value_sec_Depth, cmock_retval) ble_store_write_peer_sec_CMockExpectWithArrayAndReturn(__LINE__, value_sec, value_sec_Depth, cmock_retval)
void ble_store_write_peer_sec_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_value_sec* value_sec, int value_sec_Depth, int cmock_to_return);
#define ble_store_write_peer_sec_IgnoreArg_value_sec() ble_store_write_peer_sec_CMockIgnoreArg_value_sec(__LINE__)
void ble_store_write_peer_sec_CMockIgnoreArg_value_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_delete_peer_sec_IgnoreAndReturn(cmock_retval) ble_store_delete_peer_sec_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_delete_peer_sec_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_delete_peer_sec_StopIgnore() ble_store_delete_peer_sec_CMockStopIgnore()
void ble_store_delete_peer_sec_CMockStopIgnore(void);
#define ble_store_delete_peer_sec_ExpectAndReturn(key_sec, cmock_retval) ble_store_delete_peer_sec_CMockExpectAndReturn(__LINE__, key_sec, cmock_retval)
void ble_store_delete_peer_sec_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, int cmock_to_return);
typedef int (* CMOCK_ble_store_delete_peer_sec_CALLBACK)(const struct ble_store_key_sec* key_sec, int cmock_num_calls);
void ble_store_delete_peer_sec_AddCallback(CMOCK_ble_store_delete_peer_sec_CALLBACK Callback);
void ble_store_delete_peer_sec_Stub(CMOCK_ble_store_delete_peer_sec_CALLBACK Callback);
#define ble_store_delete_peer_sec_StubWithCallback ble_store_delete_peer_sec_Stub
#define ble_store_delete_peer_sec_ExpectWithArrayAndReturn(key_sec, key_sec_Depth, cmock_retval) ble_store_delete_peer_sec_CMockExpectWithArrayAndReturn(__LINE__, key_sec, key_sec_Depth, cmock_retval)
void ble_store_delete_peer_sec_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_sec* key_sec, int key_sec_Depth, int cmock_to_return);
#define ble_store_delete_peer_sec_IgnoreArg_key_sec() ble_store_delete_peer_sec_CMockIgnoreArg_key_sec(__LINE__)
void ble_store_delete_peer_sec_CMockIgnoreArg_key_sec(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_cccd_IgnoreAndReturn(cmock_retval) ble_store_read_cccd_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_read_cccd_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_read_cccd_StopIgnore() ble_store_read_cccd_CMockStopIgnore()
void ble_store_read_cccd_CMockStopIgnore(void);
#define ble_store_read_cccd_ExpectAndReturn(key, out_value, cmock_retval) ble_store_read_cccd_CMockExpectAndReturn(__LINE__, key, out_value, cmock_retval)
void ble_store_read_cccd_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_cccd* key, struct ble_store_value_cccd* out_value, int cmock_to_return);
typedef int (* CMOCK_ble_store_read_cccd_CALLBACK)(const struct ble_store_key_cccd* key, struct ble_store_value_cccd* out_value, int cmock_num_calls);
void ble_store_read_cccd_AddCallback(CMOCK_ble_store_read_cccd_CALLBACK Callback);
void ble_store_read_cccd_Stub(CMOCK_ble_store_read_cccd_CALLBACK Callback);
#define ble_store_read_cccd_StubWithCallback ble_store_read_cccd_Stub
#define ble_store_read_cccd_ExpectWithArrayAndReturn(key, key_Depth, out_value, out_value_Depth, cmock_retval) ble_store_read_cccd_CMockExpectWithArrayAndReturn(__LINE__, key, key_Depth, out_value, out_value_Depth, cmock_retval)
void ble_store_read_cccd_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_cccd* key, int key_Depth, struct ble_store_value_cccd* out_value, int out_value_Depth, int cmock_to_return);
#define ble_store_read_cccd_ReturnThruPtr_out_value(out_value) ble_store_read_cccd_CMockReturnMemThruPtr_out_value(__LINE__, out_value, sizeof(struct ble_store_value_cccd))
#define ble_store_read_cccd_ReturnArrayThruPtr_out_value(out_value, cmock_len) ble_store_read_cccd_CMockReturnMemThruPtr_out_value(__LINE__, out_value, cmock_len * sizeof(*out_value))
#define ble_store_read_cccd_ReturnMemThruPtr_out_value(out_value, cmock_size) ble_store_read_cccd_CMockReturnMemThruPtr_out_value(__LINE__, out_value, cmock_size)
void ble_store_read_cccd_CMockReturnMemThruPtr_out_value(UNITY_LINE_TYPE cmock_line, struct ble_store_value_cccd* out_value, size_t cmock_size);
#define ble_store_read_cccd_IgnoreArg_key() ble_store_read_cccd_CMockIgnoreArg_key(__LINE__)
void ble_store_read_cccd_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_read_cccd_IgnoreArg_out_value() ble_store_read_cccd_CMockIgnoreArg_out_value(__LINE__)
void ble_store_read_cccd_CMockIgnoreArg_out_value(UNITY_LINE_TYPE cmock_line);
#define ble_store_write_cccd_IgnoreAndReturn(cmock_retval) ble_store_write_cccd_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_write_cccd_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_write_cccd_StopIgnore() ble_store_write_cccd_CMockStopIgnore()
void ble_store_write_cccd_CMockStopIgnore(void);
#define ble_store_write_cccd_ExpectAndReturn(value, cmock_retval) ble_store_write_cccd_CMockExpectAndReturn(__LINE__, value, cmock_retval)
void ble_store_write_cccd_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_value_cccd* value, int cmock_to_return);
typedef int (* CMOCK_ble_store_write_cccd_CALLBACK)(const struct ble_store_value_cccd* value, int cmock_num_calls);
void ble_store_write_cccd_AddCallback(CMOCK_ble_store_write_cccd_CALLBACK Callback);
void ble_store_write_cccd_Stub(CMOCK_ble_store_write_cccd_CALLBACK Callback);
#define ble_store_write_cccd_StubWithCallback ble_store_write_cccd_Stub
#define ble_store_write_cccd_ExpectWithArrayAndReturn(value, value_Depth, cmock_retval) ble_store_write_cccd_CMockExpectWithArrayAndReturn(__LINE__, value, value_Depth, cmock_retval)
void ble_store_write_cccd_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_value_cccd* value, int value_Depth, int cmock_to_return);
#define ble_store_write_cccd_IgnoreArg_value() ble_store_write_cccd_CMockIgnoreArg_value(__LINE__)
void ble_store_write_cccd_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define ble_store_delete_cccd_IgnoreAndReturn(cmock_retval) ble_store_delete_cccd_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_delete_cccd_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_delete_cccd_StopIgnore() ble_store_delete_cccd_CMockStopIgnore()
void ble_store_delete_cccd_CMockStopIgnore(void);
#define ble_store_delete_cccd_ExpectAndReturn(key, cmock_retval) ble_store_delete_cccd_CMockExpectAndReturn(__LINE__, key, cmock_retval)
void ble_store_delete_cccd_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_cccd* key, int cmock_to_return);
typedef int (* CMOCK_ble_store_delete_cccd_CALLBACK)(const struct ble_store_key_cccd* key, int cmock_num_calls);
void ble_store_delete_cccd_AddCallback(CMOCK_ble_store_delete_cccd_CALLBACK Callback);
void ble_store_delete_cccd_Stub(CMOCK_ble_store_delete_cccd_CALLBACK Callback);
#define ble_store_delete_cccd_StubWithCallback ble_store_delete_cccd_Stub
#define ble_store_delete_cccd_ExpectWithArrayAndReturn(key, key_Depth, cmock_retval) ble_store_delete_cccd_CMockExpectWithArrayAndReturn(__LINE__, key, key_Depth, cmock_retval)
void ble_store_delete_cccd_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const struct ble_store_key_cccd* key, int key_Depth, int cmock_to_return);
#define ble_store_delete_cccd_IgnoreArg_key() ble_store_delete_cccd_CMockIgnoreArg_key(__LINE__)
void ble_store_delete_cccd_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_sec_Ignore() ble_store_key_from_value_sec_CMockIgnore()
void ble_store_key_from_value_sec_CMockIgnore(void);
#define ble_store_key_from_value_sec_StopIgnore() ble_store_key_from_value_sec_CMockStopIgnore()
void ble_store_key_from_value_sec_CMockStopIgnore(void);
#define ble_store_key_from_value_sec_Expect(out_key, value) ble_store_key_from_value_sec_CMockExpect(__LINE__, out_key, value)
void ble_store_key_from_value_sec_CMockExpect(UNITY_LINE_TYPE cmock_line, struct ble_store_key_sec* out_key, const struct ble_store_value_sec* value);
typedef void (* CMOCK_ble_store_key_from_value_sec_CALLBACK)(struct ble_store_key_sec* out_key, const struct ble_store_value_sec* value, int cmock_num_calls);
void ble_store_key_from_value_sec_AddCallback(CMOCK_ble_store_key_from_value_sec_CALLBACK Callback);
void ble_store_key_from_value_sec_Stub(CMOCK_ble_store_key_from_value_sec_CALLBACK Callback);
#define ble_store_key_from_value_sec_StubWithCallback ble_store_key_from_value_sec_Stub
#define ble_store_key_from_value_sec_ExpectWithArray(out_key, out_key_Depth, value, value_Depth) ble_store_key_from_value_sec_CMockExpectWithArray(__LINE__, out_key, out_key_Depth, value, value_Depth)
void ble_store_key_from_value_sec_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct ble_store_key_sec* out_key, int out_key_Depth, const struct ble_store_value_sec* value, int value_Depth);
#define ble_store_key_from_value_sec_ReturnThruPtr_out_key(out_key) ble_store_key_from_value_sec_CMockReturnMemThruPtr_out_key(__LINE__, out_key, sizeof(struct ble_store_key_sec))
#define ble_store_key_from_value_sec_ReturnArrayThruPtr_out_key(out_key, cmock_len) ble_store_key_from_value_sec_CMockReturnMemThruPtr_out_key(__LINE__, out_key, cmock_len * sizeof(*out_key))
#define ble_store_key_from_value_sec_ReturnMemThruPtr_out_key(out_key, cmock_size) ble_store_key_from_value_sec_CMockReturnMemThruPtr_out_key(__LINE__, out_key, cmock_size)
void ble_store_key_from_value_sec_CMockReturnMemThruPtr_out_key(UNITY_LINE_TYPE cmock_line, struct ble_store_key_sec* out_key, size_t cmock_size);
#define ble_store_key_from_value_sec_IgnoreArg_out_key() ble_store_key_from_value_sec_CMockIgnoreArg_out_key(__LINE__)
void ble_store_key_from_value_sec_CMockIgnoreArg_out_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_sec_IgnoreArg_value() ble_store_key_from_value_sec_CMockIgnoreArg_value(__LINE__)
void ble_store_key_from_value_sec_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_cccd_Ignore() ble_store_key_from_value_cccd_CMockIgnore()
void ble_store_key_from_value_cccd_CMockIgnore(void);
#define ble_store_key_from_value_cccd_StopIgnore() ble_store_key_from_value_cccd_CMockStopIgnore()
void ble_store_key_from_value_cccd_CMockStopIgnore(void);
#define ble_store_key_from_value_cccd_Expect(out_key, value) ble_store_key_from_value_cccd_CMockExpect(__LINE__, out_key, value)
void ble_store_key_from_value_cccd_CMockExpect(UNITY_LINE_TYPE cmock_line, struct ble_store_key_cccd* out_key, const struct ble_store_value_cccd* value);
typedef void (* CMOCK_ble_store_key_from_value_cccd_CALLBACK)(struct ble_store_key_cccd* out_key, const struct ble_store_value_cccd* value, int cmock_num_calls);
void ble_store_key_from_value_cccd_AddCallback(CMOCK_ble_store_key_from_value_cccd_CALLBACK Callback);
void ble_store_key_from_value_cccd_Stub(CMOCK_ble_store_key_from_value_cccd_CALLBACK Callback);
#define ble_store_key_from_value_cccd_StubWithCallback ble_store_key_from_value_cccd_Stub
#define ble_store_key_from_value_cccd_ExpectWithArray(out_key, out_key_Depth, value, value_Depth) ble_store_key_from_value_cccd_CMockExpectWithArray(__LINE__, out_key, out_key_Depth, value, value_Depth)
void ble_store_key_from_value_cccd_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct ble_store_key_cccd* out_key, int out_key_Depth, const struct ble_store_value_cccd* value, int value_Depth);
#define ble_store_key_from_value_cccd_ReturnThruPtr_out_key(out_key) ble_store_key_from_value_cccd_CMockReturnMemThruPtr_out_key(__LINE__, out_key, sizeof(struct ble_store_key_cccd))
#define ble_store_key_from_value_cccd_ReturnArrayThruPtr_out_key(out_key, cmock_len) ble_store_key_from_value_cccd_CMockReturnMemThruPtr_out_key(__LINE__, out_key, cmock_len * sizeof(*out_key))
#define ble_store_key_from_value_cccd_ReturnMemThruPtr_out_key(out_key, cmock_size) ble_store_key_from_value_cccd_CMockReturnMemThruPtr_out_key(__LINE__, out_key, cmock_size)
void ble_store_key_from_value_cccd_CMockReturnMemThruPtr_out_key(UNITY_LINE_TYPE cmock_line, struct ble_store_key_cccd* out_key, size_t cmock_size);
#define ble_store_key_from_value_cccd_IgnoreArg_out_key() ble_store_key_from_value_cccd_CMockIgnoreArg_out_key(__LINE__)
void ble_store_key_from_value_cccd_CMockIgnoreArg_out_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_cccd_IgnoreArg_value() ble_store_key_from_value_cccd_CMockIgnoreArg_value(__LINE__)
void ble_store_key_from_value_cccd_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_Ignore() ble_store_key_from_value_CMockIgnore()
void ble_store_key_from_value_CMockIgnore(void);
#define ble_store_key_from_value_StopIgnore() ble_store_key_from_value_CMockStopIgnore()
void ble_store_key_from_value_CMockStopIgnore(void);
#define ble_store_key_from_value_Expect(obj_type, out_key, value) ble_store_key_from_value_CMockExpect(__LINE__, obj_type, out_key, value)
void ble_store_key_from_value_CMockExpect(UNITY_LINE_TYPE cmock_line, int obj_type, union ble_store_key* out_key, const union ble_store_value* value);
typedef void (* CMOCK_ble_store_key_from_value_CALLBACK)(int obj_type, union ble_store_key* out_key, const union ble_store_value* value, int cmock_num_calls);
void ble_store_key_from_value_AddCallback(CMOCK_ble_store_key_from_value_CALLBACK Callback);
void ble_store_key_from_value_Stub(CMOCK_ble_store_key_from_value_CALLBACK Callback);
#define ble_store_key_from_value_StubWithCallback ble_store_key_from_value_Stub
#define ble_store_key_from_value_ExpectWithArray(obj_type, out_key, out_key_Depth, value, value_Depth) ble_store_key_from_value_CMockExpectWithArray(__LINE__, obj_type, out_key, out_key_Depth, value, value_Depth)
void ble_store_key_from_value_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, int obj_type, union ble_store_key* out_key, int out_key_Depth, const union ble_store_value* value, int value_Depth);
#define ble_store_key_from_value_ReturnThruPtr_out_key(out_key) ble_store_key_from_value_CMockReturnMemThruPtr_out_key(__LINE__, out_key, sizeof(union ble_store_key))
#define ble_store_key_from_value_ReturnArrayThruPtr_out_key(out_key, cmock_len) ble_store_key_from_value_CMockReturnMemThruPtr_out_key(__LINE__, out_key, cmock_len * sizeof(*out_key))
#define ble_store_key_from_value_ReturnMemThruPtr_out_key(out_key, cmock_size) ble_store_key_from_value_CMockReturnMemThruPtr_out_key(__LINE__, out_key, cmock_size)
void ble_store_key_from_value_CMockReturnMemThruPtr_out_key(UNITY_LINE_TYPE cmock_line, union ble_store_key* out_key, size_t cmock_size);
#define ble_store_key_from_value_IgnoreArg_obj_type() ble_store_key_from_value_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_key_from_value_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_IgnoreArg_out_key() ble_store_key_from_value_CMockIgnoreArg_out_key(__LINE__)
void ble_store_key_from_value_CMockIgnoreArg_out_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_key_from_value_IgnoreArg_value() ble_store_key_from_value_CMockIgnoreArg_value(__LINE__)
void ble_store_key_from_value_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define ble_store_iterate_IgnoreAndReturn(cmock_retval) ble_store_iterate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_iterate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_iterate_StopIgnore() ble_store_iterate_CMockStopIgnore()
void ble_store_iterate_CMockStopIgnore(void);
#define ble_store_iterate_ExpectAndReturn(obj_type, callback, cookie, cmock_retval) ble_store_iterate_CMockExpectAndReturn(__LINE__, obj_type, callback, cookie, cmock_retval)
void ble_store_iterate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, ble_store_iterator_fn* callback, void* cookie, int cmock_to_return);
typedef int (* CMOCK_ble_store_iterate_CALLBACK)(int obj_type, ble_store_iterator_fn* callback, void* cookie, int cmock_num_calls);
void ble_store_iterate_AddCallback(CMOCK_ble_store_iterate_CALLBACK Callback);
void ble_store_iterate_Stub(CMOCK_ble_store_iterate_CALLBACK Callback);
#define ble_store_iterate_StubWithCallback ble_store_iterate_Stub
#define ble_store_iterate_ExpectWithArrayAndReturn(obj_type, callback, callback_Depth, cookie, cookie_Depth, cmock_retval) ble_store_iterate_CMockExpectWithArrayAndReturn(__LINE__, obj_type, callback, callback_Depth, cookie, cookie_Depth, cmock_retval)
void ble_store_iterate_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int obj_type, ble_store_iterator_fn* callback, int callback_Depth, void* cookie, int cookie_Depth, int cmock_to_return);
#define ble_store_iterate_ReturnThruPtr_callback(callback) ble_store_iterate_CMockReturnMemThruPtr_callback(__LINE__, callback, sizeof(ble_store_iterator_fn))
#define ble_store_iterate_ReturnArrayThruPtr_callback(callback, cmock_len) ble_store_iterate_CMockReturnMemThruPtr_callback(__LINE__, callback, cmock_len * sizeof(*callback))
#define ble_store_iterate_ReturnMemThruPtr_callback(callback, cmock_size) ble_store_iterate_CMockReturnMemThruPtr_callback(__LINE__, callback, cmock_size)
void ble_store_iterate_CMockReturnMemThruPtr_callback(UNITY_LINE_TYPE cmock_line, ble_store_iterator_fn* callback, size_t cmock_size);
#define ble_store_iterate_ReturnThruPtr_cookie(cookie) ble_store_iterate_CMockReturnMemThruPtr_cookie(__LINE__, cookie, sizeof(void))
#define ble_store_iterate_ReturnArrayThruPtr_cookie(cookie, cmock_len) ble_store_iterate_CMockReturnMemThruPtr_cookie(__LINE__, cookie, cmock_len * sizeof(*cookie))
#define ble_store_iterate_ReturnMemThruPtr_cookie(cookie, cmock_size) ble_store_iterate_CMockReturnMemThruPtr_cookie(__LINE__, cookie, cmock_size)
void ble_store_iterate_CMockReturnMemThruPtr_cookie(UNITY_LINE_TYPE cmock_line, void* cookie, size_t cmock_size);
#define ble_store_iterate_IgnoreArg_obj_type() ble_store_iterate_CMockIgnoreArg_obj_type(__LINE__)
void ble_store_iterate_CMockIgnoreArg_obj_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_iterate_IgnoreArg_callback() ble_store_iterate_CMockIgnoreArg_callback(__LINE__)
void ble_store_iterate_CMockIgnoreArg_callback(UNITY_LINE_TYPE cmock_line);
#define ble_store_iterate_IgnoreArg_cookie() ble_store_iterate_CMockIgnoreArg_cookie(__LINE__)
void ble_store_iterate_CMockIgnoreArg_cookie(UNITY_LINE_TYPE cmock_line);
#define ble_store_clear_IgnoreAndReturn(cmock_retval) ble_store_clear_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_clear_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_clear_StopIgnore() ble_store_clear_CMockStopIgnore()
void ble_store_clear_CMockStopIgnore(void);
#define ble_store_clear_ExpectAndReturn(cmock_retval) ble_store_clear_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_store_clear_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_store_clear_CALLBACK)(int cmock_num_calls);
void ble_store_clear_AddCallback(CMOCK_ble_store_clear_CALLBACK Callback);
void ble_store_clear_Stub(CMOCK_ble_store_clear_CALLBACK Callback);
#define ble_store_clear_StubWithCallback ble_store_clear_Stub
#define ble_store_util_bonded_peers_IgnoreAndReturn(cmock_retval) ble_store_util_bonded_peers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_util_bonded_peers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_util_bonded_peers_StopIgnore() ble_store_util_bonded_peers_CMockStopIgnore()
void ble_store_util_bonded_peers_CMockStopIgnore(void);
#define ble_store_util_bonded_peers_ExpectAndReturn(out_peer_id_addrs, out_num_peers, max_peers, cmock_retval) ble_store_util_bonded_peers_CMockExpectAndReturn(__LINE__, out_peer_id_addrs, out_num_peers, max_peers, cmock_retval)
void ble_store_util_bonded_peers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ble_addr_t* out_peer_id_addrs, int* out_num_peers, int max_peers, int cmock_to_return);
typedef int (* CMOCK_ble_store_util_bonded_peers_CALLBACK)(ble_addr_t* out_peer_id_addrs, int* out_num_peers, int max_peers, int cmock_num_calls);
void ble_store_util_bonded_peers_AddCallback(CMOCK_ble_store_util_bonded_peers_CALLBACK Callback);
void ble_store_util_bonded_peers_Stub(CMOCK_ble_store_util_bonded_peers_CALLBACK Callback);
#define ble_store_util_bonded_peers_StubWithCallback ble_store_util_bonded_peers_Stub
#define ble_store_util_bonded_peers_ExpectWithArrayAndReturn(out_peer_id_addrs, out_peer_id_addrs_Depth, out_num_peers, out_num_peers_Depth, max_peers, cmock_retval) ble_store_util_bonded_peers_CMockExpectWithArrayAndReturn(__LINE__, out_peer_id_addrs, out_peer_id_addrs_Depth, out_num_peers, out_num_peers_Depth, max_peers, cmock_retval)
void ble_store_util_bonded_peers_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, ble_addr_t* out_peer_id_addrs, int out_peer_id_addrs_Depth, int* out_num_peers, int out_num_peers_Depth, int max_peers, int cmock_to_return);
#define ble_store_util_bonded_peers_ReturnThruPtr_out_peer_id_addrs(out_peer_id_addrs) ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_peer_id_addrs(__LINE__, out_peer_id_addrs, sizeof(ble_addr_t))
#define ble_store_util_bonded_peers_ReturnArrayThruPtr_out_peer_id_addrs(out_peer_id_addrs, cmock_len) ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_peer_id_addrs(__LINE__, out_peer_id_addrs, cmock_len * sizeof(*out_peer_id_addrs))
#define ble_store_util_bonded_peers_ReturnMemThruPtr_out_peer_id_addrs(out_peer_id_addrs, cmock_size) ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_peer_id_addrs(__LINE__, out_peer_id_addrs, cmock_size)
void ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_peer_id_addrs(UNITY_LINE_TYPE cmock_line, ble_addr_t* out_peer_id_addrs, size_t cmock_size);
#define ble_store_util_bonded_peers_ReturnThruPtr_out_num_peers(out_num_peers) ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_num_peers(__LINE__, out_num_peers, sizeof(int))
#define ble_store_util_bonded_peers_ReturnArrayThruPtr_out_num_peers(out_num_peers, cmock_len) ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_num_peers(__LINE__, out_num_peers, cmock_len * sizeof(*out_num_peers))
#define ble_store_util_bonded_peers_ReturnMemThruPtr_out_num_peers(out_num_peers, cmock_size) ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_num_peers(__LINE__, out_num_peers, cmock_size)
void ble_store_util_bonded_peers_CMockReturnMemThruPtr_out_num_peers(UNITY_LINE_TYPE cmock_line, int* out_num_peers, size_t cmock_size);
#define ble_store_util_bonded_peers_IgnoreArg_out_peer_id_addrs() ble_store_util_bonded_peers_CMockIgnoreArg_out_peer_id_addrs(__LINE__)
void ble_store_util_bonded_peers_CMockIgnoreArg_out_peer_id_addrs(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_bonded_peers_IgnoreArg_out_num_peers() ble_store_util_bonded_peers_CMockIgnoreArg_out_num_peers(__LINE__)
void ble_store_util_bonded_peers_CMockIgnoreArg_out_num_peers(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_bonded_peers_IgnoreArg_max_peers() ble_store_util_bonded_peers_CMockIgnoreArg_max_peers(__LINE__)
void ble_store_util_bonded_peers_CMockIgnoreArg_max_peers(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_delete_all_IgnoreAndReturn(cmock_retval) ble_store_util_delete_all_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_util_delete_all_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_util_delete_all_StopIgnore() ble_store_util_delete_all_CMockStopIgnore()
void ble_store_util_delete_all_CMockStopIgnore(void);
#define ble_store_util_delete_all_ExpectAndReturn(type, key, cmock_retval) ble_store_util_delete_all_CMockExpectAndReturn(__LINE__, type, key, cmock_retval)
void ble_store_util_delete_all_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int type, const union ble_store_key* key, int cmock_to_return);
typedef int (* CMOCK_ble_store_util_delete_all_CALLBACK)(int type, const union ble_store_key* key, int cmock_num_calls);
void ble_store_util_delete_all_AddCallback(CMOCK_ble_store_util_delete_all_CALLBACK Callback);
void ble_store_util_delete_all_Stub(CMOCK_ble_store_util_delete_all_CALLBACK Callback);
#define ble_store_util_delete_all_StubWithCallback ble_store_util_delete_all_Stub
#define ble_store_util_delete_all_ExpectWithArrayAndReturn(type, key, key_Depth, cmock_retval) ble_store_util_delete_all_CMockExpectWithArrayAndReturn(__LINE__, type, key, key_Depth, cmock_retval)
void ble_store_util_delete_all_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int type, const union ble_store_key* key, int key_Depth, int cmock_to_return);
#define ble_store_util_delete_all_IgnoreArg_type() ble_store_util_delete_all_CMockIgnoreArg_type(__LINE__)
void ble_store_util_delete_all_CMockIgnoreArg_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_delete_all_IgnoreArg_key() ble_store_util_delete_all_CMockIgnoreArg_key(__LINE__)
void ble_store_util_delete_all_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_delete_peer_IgnoreAndReturn(cmock_retval) ble_store_util_delete_peer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_util_delete_peer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_util_delete_peer_StopIgnore() ble_store_util_delete_peer_CMockStopIgnore()
void ble_store_util_delete_peer_CMockStopIgnore(void);
#define ble_store_util_delete_peer_ExpectAndReturn(peer_id_addr, cmock_retval) ble_store_util_delete_peer_CMockExpectAndReturn(__LINE__, peer_id_addr, cmock_retval)
void ble_store_util_delete_peer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_id_addr, int cmock_to_return);
typedef int (* CMOCK_ble_store_util_delete_peer_CALLBACK)(const ble_addr_t* peer_id_addr, int cmock_num_calls);
void ble_store_util_delete_peer_AddCallback(CMOCK_ble_store_util_delete_peer_CALLBACK Callback);
void ble_store_util_delete_peer_Stub(CMOCK_ble_store_util_delete_peer_CALLBACK Callback);
#define ble_store_util_delete_peer_StubWithCallback ble_store_util_delete_peer_Stub
#define ble_store_util_delete_peer_ExpectWithArrayAndReturn(peer_id_addr, peer_id_addr_Depth, cmock_retval) ble_store_util_delete_peer_CMockExpectWithArrayAndReturn(__LINE__, peer_id_addr, peer_id_addr_Depth, cmock_retval)
void ble_store_util_delete_peer_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ble_addr_t* peer_id_addr, int peer_id_addr_Depth, int cmock_to_return);
#define ble_store_util_delete_peer_IgnoreArg_peer_id_addr() ble_store_util_delete_peer_CMockIgnoreArg_peer_id_addr(__LINE__)
void ble_store_util_delete_peer_CMockIgnoreArg_peer_id_addr(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_delete_oldest_peer_IgnoreAndReturn(cmock_retval) ble_store_util_delete_oldest_peer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_util_delete_oldest_peer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_util_delete_oldest_peer_StopIgnore() ble_store_util_delete_oldest_peer_CMockStopIgnore()
void ble_store_util_delete_oldest_peer_CMockStopIgnore(void);
#define ble_store_util_delete_oldest_peer_ExpectAndReturn(cmock_retval) ble_store_util_delete_oldest_peer_CMockExpectAndReturn(__LINE__, cmock_retval)
void ble_store_util_delete_oldest_peer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_ble_store_util_delete_oldest_peer_CALLBACK)(int cmock_num_calls);
void ble_store_util_delete_oldest_peer_AddCallback(CMOCK_ble_store_util_delete_oldest_peer_CALLBACK Callback);
void ble_store_util_delete_oldest_peer_Stub(CMOCK_ble_store_util_delete_oldest_peer_CALLBACK Callback);
#define ble_store_util_delete_oldest_peer_StubWithCallback ble_store_util_delete_oldest_peer_Stub
#define ble_store_util_count_IgnoreAndReturn(cmock_retval) ble_store_util_count_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_util_count_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_util_count_StopIgnore() ble_store_util_count_CMockStopIgnore()
void ble_store_util_count_CMockStopIgnore(void);
#define ble_store_util_count_ExpectAndReturn(type, out_count, cmock_retval) ble_store_util_count_CMockExpectAndReturn(__LINE__, type, out_count, cmock_retval)
void ble_store_util_count_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int type, int* out_count, int cmock_to_return);
typedef int (* CMOCK_ble_store_util_count_CALLBACK)(int type, int* out_count, int cmock_num_calls);
void ble_store_util_count_AddCallback(CMOCK_ble_store_util_count_CALLBACK Callback);
void ble_store_util_count_Stub(CMOCK_ble_store_util_count_CALLBACK Callback);
#define ble_store_util_count_StubWithCallback ble_store_util_count_Stub
#define ble_store_util_count_ExpectWithArrayAndReturn(type, out_count, out_count_Depth, cmock_retval) ble_store_util_count_CMockExpectWithArrayAndReturn(__LINE__, type, out_count, out_count_Depth, cmock_retval)
void ble_store_util_count_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, int type, int* out_count, int out_count_Depth, int cmock_to_return);
#define ble_store_util_count_ReturnThruPtr_out_count(out_count) ble_store_util_count_CMockReturnMemThruPtr_out_count(__LINE__, out_count, sizeof(int))
#define ble_store_util_count_ReturnArrayThruPtr_out_count(out_count, cmock_len) ble_store_util_count_CMockReturnMemThruPtr_out_count(__LINE__, out_count, cmock_len * sizeof(*out_count))
#define ble_store_util_count_ReturnMemThruPtr_out_count(out_count, cmock_size) ble_store_util_count_CMockReturnMemThruPtr_out_count(__LINE__, out_count, cmock_size)
void ble_store_util_count_CMockReturnMemThruPtr_out_count(UNITY_LINE_TYPE cmock_line, int* out_count, size_t cmock_size);
#define ble_store_util_count_IgnoreArg_type() ble_store_util_count_CMockIgnoreArg_type(__LINE__)
void ble_store_util_count_CMockIgnoreArg_type(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_count_IgnoreArg_out_count() ble_store_util_count_CMockIgnoreArg_out_count(__LINE__)
void ble_store_util_count_CMockIgnoreArg_out_count(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_status_rr_IgnoreAndReturn(cmock_retval) ble_store_util_status_rr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ble_store_util_status_rr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ble_store_util_status_rr_StopIgnore() ble_store_util_status_rr_CMockStopIgnore()
void ble_store_util_status_rr_CMockStopIgnore(void);
#define ble_store_util_status_rr_ExpectAndReturn(event, arg, cmock_retval) ble_store_util_status_rr_CMockExpectAndReturn(__LINE__, event, arg, cmock_retval)
void ble_store_util_status_rr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ble_store_status_event* event, void* arg, int cmock_to_return);
typedef int (* CMOCK_ble_store_util_status_rr_CALLBACK)(struct ble_store_status_event* event, void* arg, int cmock_num_calls);
void ble_store_util_status_rr_AddCallback(CMOCK_ble_store_util_status_rr_CALLBACK Callback);
void ble_store_util_status_rr_Stub(CMOCK_ble_store_util_status_rr_CALLBACK Callback);
#define ble_store_util_status_rr_StubWithCallback ble_store_util_status_rr_Stub
#define ble_store_util_status_rr_ExpectWithArrayAndReturn(event, event_Depth, arg, arg_Depth, cmock_retval) ble_store_util_status_rr_CMockExpectWithArrayAndReturn(__LINE__, event, event_Depth, arg, arg_Depth, cmock_retval)
void ble_store_util_status_rr_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ble_store_status_event* event, int event_Depth, void* arg, int arg_Depth, int cmock_to_return);
#define ble_store_util_status_rr_ReturnThruPtr_event(event) ble_store_util_status_rr_CMockReturnMemThruPtr_event(__LINE__, event, sizeof(struct ble_store_status_event))
#define ble_store_util_status_rr_ReturnArrayThruPtr_event(event, cmock_len) ble_store_util_status_rr_CMockReturnMemThruPtr_event(__LINE__, event, cmock_len * sizeof(*event))
#define ble_store_util_status_rr_ReturnMemThruPtr_event(event, cmock_size) ble_store_util_status_rr_CMockReturnMemThruPtr_event(__LINE__, event, cmock_size)
void ble_store_util_status_rr_CMockReturnMemThruPtr_event(UNITY_LINE_TYPE cmock_line, struct ble_store_status_event* event, size_t cmock_size);
#define ble_store_util_status_rr_ReturnThruPtr_arg(arg) ble_store_util_status_rr_CMockReturnMemThruPtr_arg(__LINE__, arg, sizeof(void))
#define ble_store_util_status_rr_ReturnArrayThruPtr_arg(arg, cmock_len) ble_store_util_status_rr_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_len * sizeof(*arg))
#define ble_store_util_status_rr_ReturnMemThruPtr_arg(arg, cmock_size) ble_store_util_status_rr_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_size)
void ble_store_util_status_rr_CMockReturnMemThruPtr_arg(UNITY_LINE_TYPE cmock_line, void* arg, size_t cmock_size);
#define ble_store_util_status_rr_IgnoreArg_event() ble_store_util_status_rr_CMockIgnoreArg_event(__LINE__)
void ble_store_util_status_rr_CMockIgnoreArg_event(UNITY_LINE_TYPE cmock_line);
#define ble_store_util_status_rr_IgnoreArg_arg() ble_store_util_status_rr_CMockIgnoreArg_arg(__LINE__)
void ble_store_util_status_rr_CMockIgnoreArg_arg(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

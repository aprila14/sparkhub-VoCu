#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ESP_NIMBLE_HCI_H
#define _MOCK_ESP_NIMBLE_HCI_H

#include "unity.h"
#include "esp_nimble_hci.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_esp_nimble_hci_Init(void);
void mock_esp_nimble_hci_Destroy(void);
void mock_esp_nimble_hci_Verify(void);




#define esp_nimble_hci_init_IgnoreAndReturn(cmock_retval) esp_nimble_hci_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_nimble_hci_init_StopIgnore() esp_nimble_hci_init_CMockStopIgnore()
void esp_nimble_hci_init_CMockStopIgnore(void);
#define esp_nimble_hci_init_ExpectAndReturn(cmock_retval) esp_nimble_hci_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_nimble_hci_init_CALLBACK)(int cmock_num_calls);
void esp_nimble_hci_init_AddCallback(CMOCK_esp_nimble_hci_init_CALLBACK Callback);
void esp_nimble_hci_init_Stub(CMOCK_esp_nimble_hci_init_CALLBACK Callback);
#define esp_nimble_hci_init_StubWithCallback esp_nimble_hci_init_Stub
#define esp_nimble_hci_and_controller_init_IgnoreAndReturn(cmock_retval) esp_nimble_hci_and_controller_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_and_controller_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_nimble_hci_and_controller_init_StopIgnore() esp_nimble_hci_and_controller_init_CMockStopIgnore()
void esp_nimble_hci_and_controller_init_CMockStopIgnore(void);
#define esp_nimble_hci_and_controller_init_ExpectAndReturn(cmock_retval) esp_nimble_hci_and_controller_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_and_controller_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_nimble_hci_and_controller_init_CALLBACK)(int cmock_num_calls);
void esp_nimble_hci_and_controller_init_AddCallback(CMOCK_esp_nimble_hci_and_controller_init_CALLBACK Callback);
void esp_nimble_hci_and_controller_init_Stub(CMOCK_esp_nimble_hci_and_controller_init_CALLBACK Callback);
#define esp_nimble_hci_and_controller_init_StubWithCallback esp_nimble_hci_and_controller_init_Stub
#define esp_nimble_hci_deinit_IgnoreAndReturn(cmock_retval) esp_nimble_hci_deinit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_deinit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_nimble_hci_deinit_StopIgnore() esp_nimble_hci_deinit_CMockStopIgnore()
void esp_nimble_hci_deinit_CMockStopIgnore(void);
#define esp_nimble_hci_deinit_ExpectAndReturn(cmock_retval) esp_nimble_hci_deinit_CMockExpectAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_deinit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_nimble_hci_deinit_CALLBACK)(int cmock_num_calls);
void esp_nimble_hci_deinit_AddCallback(CMOCK_esp_nimble_hci_deinit_CALLBACK Callback);
void esp_nimble_hci_deinit_Stub(CMOCK_esp_nimble_hci_deinit_CALLBACK Callback);
#define esp_nimble_hci_deinit_StubWithCallback esp_nimble_hci_deinit_Stub
#define esp_nimble_hci_and_controller_deinit_IgnoreAndReturn(cmock_retval) esp_nimble_hci_and_controller_deinit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_and_controller_deinit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_nimble_hci_and_controller_deinit_StopIgnore() esp_nimble_hci_and_controller_deinit_CMockStopIgnore()
void esp_nimble_hci_and_controller_deinit_CMockStopIgnore(void);
#define esp_nimble_hci_and_controller_deinit_ExpectAndReturn(cmock_retval) esp_nimble_hci_and_controller_deinit_CMockExpectAndReturn(__LINE__, cmock_retval)
void esp_nimble_hci_and_controller_deinit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_nimble_hci_and_controller_deinit_CALLBACK)(int cmock_num_calls);
void esp_nimble_hci_and_controller_deinit_AddCallback(CMOCK_esp_nimble_hci_and_controller_deinit_CALLBACK Callback);
void esp_nimble_hci_and_controller_deinit_Stub(CMOCK_esp_nimble_hci_and_controller_deinit_CALLBACK Callback);
#define esp_nimble_hci_and_controller_deinit_StubWithCallback esp_nimble_hci_and_controller_deinit_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

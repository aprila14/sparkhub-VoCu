#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ESP_MAC_H
#define _MOCK_ESP_MAC_H

#include "unity.h"
#include "esp_mac.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_esp_mac_Init(void);
void mock_esp_mac_Destroy(void);
void mock_esp_mac_Verify(void);




#define esp_base_mac_addr_set_IgnoreAndReturn(cmock_retval) esp_base_mac_addr_set_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_base_mac_addr_set_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_base_mac_addr_set_StopIgnore() esp_base_mac_addr_set_CMockStopIgnore()
void esp_base_mac_addr_set_CMockStopIgnore(void);
#define esp_base_mac_addr_set_ExpectAndReturn(mac, cmock_retval) esp_base_mac_addr_set_CMockExpectAndReturn(__LINE__, mac, cmock_retval)
void esp_base_mac_addr_set_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* mac, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_base_mac_addr_set_CALLBACK)(const uint8_t* mac, int cmock_num_calls);
void esp_base_mac_addr_set_AddCallback(CMOCK_esp_base_mac_addr_set_CALLBACK Callback);
void esp_base_mac_addr_set_Stub(CMOCK_esp_base_mac_addr_set_CALLBACK Callback);
#define esp_base_mac_addr_set_StubWithCallback esp_base_mac_addr_set_Stub
#define esp_base_mac_addr_set_ExpectWithArrayAndReturn(mac, mac_Depth, cmock_retval) esp_base_mac_addr_set_CMockExpectWithArrayAndReturn(__LINE__, mac, mac_Depth, cmock_retval)
void esp_base_mac_addr_set_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* mac, int mac_Depth, esp_err_t cmock_to_return);
#define esp_base_mac_addr_set_IgnoreArg_mac() esp_base_mac_addr_set_CMockIgnoreArg_mac(__LINE__)
void esp_base_mac_addr_set_CMockIgnoreArg_mac(UNITY_LINE_TYPE cmock_line);
#define esp_base_mac_addr_get_IgnoreAndReturn(cmock_retval) esp_base_mac_addr_get_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_base_mac_addr_get_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_base_mac_addr_get_StopIgnore() esp_base_mac_addr_get_CMockStopIgnore()
void esp_base_mac_addr_get_CMockStopIgnore(void);
#define esp_base_mac_addr_get_ExpectAndReturn(mac, cmock_retval) esp_base_mac_addr_get_CMockExpectAndReturn(__LINE__, mac, cmock_retval)
void esp_base_mac_addr_get_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_base_mac_addr_get_CALLBACK)(uint8_t* mac, int cmock_num_calls);
void esp_base_mac_addr_get_AddCallback(CMOCK_esp_base_mac_addr_get_CALLBACK Callback);
void esp_base_mac_addr_get_Stub(CMOCK_esp_base_mac_addr_get_CALLBACK Callback);
#define esp_base_mac_addr_get_StubWithCallback esp_base_mac_addr_get_Stub
#define esp_base_mac_addr_get_ExpectWithArrayAndReturn(mac, mac_Depth, cmock_retval) esp_base_mac_addr_get_CMockExpectWithArrayAndReturn(__LINE__, mac, mac_Depth, cmock_retval)
void esp_base_mac_addr_get_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, int mac_Depth, esp_err_t cmock_to_return);
#define esp_base_mac_addr_get_ReturnThruPtr_mac(mac) esp_base_mac_addr_get_CMockReturnMemThruPtr_mac(__LINE__, mac, sizeof(uint8_t))
#define esp_base_mac_addr_get_ReturnArrayThruPtr_mac(mac, cmock_len) esp_base_mac_addr_get_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_len * sizeof(*mac))
#define esp_base_mac_addr_get_ReturnMemThruPtr_mac(mac, cmock_size) esp_base_mac_addr_get_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_size)
void esp_base_mac_addr_get_CMockReturnMemThruPtr_mac(UNITY_LINE_TYPE cmock_line, uint8_t* mac, size_t cmock_size);
#define esp_base_mac_addr_get_IgnoreArg_mac() esp_base_mac_addr_get_CMockIgnoreArg_mac(__LINE__)
void esp_base_mac_addr_get_CMockIgnoreArg_mac(UNITY_LINE_TYPE cmock_line);
#define esp_efuse_mac_get_custom_IgnoreAndReturn(cmock_retval) esp_efuse_mac_get_custom_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_efuse_mac_get_custom_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_efuse_mac_get_custom_StopIgnore() esp_efuse_mac_get_custom_CMockStopIgnore()
void esp_efuse_mac_get_custom_CMockStopIgnore(void);
#define esp_efuse_mac_get_custom_ExpectAndReturn(mac, cmock_retval) esp_efuse_mac_get_custom_CMockExpectAndReturn(__LINE__, mac, cmock_retval)
void esp_efuse_mac_get_custom_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_efuse_mac_get_custom_CALLBACK)(uint8_t* mac, int cmock_num_calls);
void esp_efuse_mac_get_custom_AddCallback(CMOCK_esp_efuse_mac_get_custom_CALLBACK Callback);
void esp_efuse_mac_get_custom_Stub(CMOCK_esp_efuse_mac_get_custom_CALLBACK Callback);
#define esp_efuse_mac_get_custom_StubWithCallback esp_efuse_mac_get_custom_Stub
#define esp_efuse_mac_get_custom_ExpectWithArrayAndReturn(mac, mac_Depth, cmock_retval) esp_efuse_mac_get_custom_CMockExpectWithArrayAndReturn(__LINE__, mac, mac_Depth, cmock_retval)
void esp_efuse_mac_get_custom_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, int mac_Depth, esp_err_t cmock_to_return);
#define esp_efuse_mac_get_custom_ReturnThruPtr_mac(mac) esp_efuse_mac_get_custom_CMockReturnMemThruPtr_mac(__LINE__, mac, sizeof(uint8_t))
#define esp_efuse_mac_get_custom_ReturnArrayThruPtr_mac(mac, cmock_len) esp_efuse_mac_get_custom_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_len * sizeof(*mac))
#define esp_efuse_mac_get_custom_ReturnMemThruPtr_mac(mac, cmock_size) esp_efuse_mac_get_custom_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_size)
void esp_efuse_mac_get_custom_CMockReturnMemThruPtr_mac(UNITY_LINE_TYPE cmock_line, uint8_t* mac, size_t cmock_size);
#define esp_efuse_mac_get_custom_IgnoreArg_mac() esp_efuse_mac_get_custom_CMockIgnoreArg_mac(__LINE__)
void esp_efuse_mac_get_custom_CMockIgnoreArg_mac(UNITY_LINE_TYPE cmock_line);
#define esp_efuse_mac_get_default_IgnoreAndReturn(cmock_retval) esp_efuse_mac_get_default_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_efuse_mac_get_default_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_efuse_mac_get_default_StopIgnore() esp_efuse_mac_get_default_CMockStopIgnore()
void esp_efuse_mac_get_default_CMockStopIgnore(void);
#define esp_efuse_mac_get_default_ExpectAndReturn(mac, cmock_retval) esp_efuse_mac_get_default_CMockExpectAndReturn(__LINE__, mac, cmock_retval)
void esp_efuse_mac_get_default_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_efuse_mac_get_default_CALLBACK)(uint8_t* mac, int cmock_num_calls);
void esp_efuse_mac_get_default_AddCallback(CMOCK_esp_efuse_mac_get_default_CALLBACK Callback);
void esp_efuse_mac_get_default_Stub(CMOCK_esp_efuse_mac_get_default_CALLBACK Callback);
#define esp_efuse_mac_get_default_StubWithCallback esp_efuse_mac_get_default_Stub
#define esp_efuse_mac_get_default_ExpectWithArrayAndReturn(mac, mac_Depth, cmock_retval) esp_efuse_mac_get_default_CMockExpectWithArrayAndReturn(__LINE__, mac, mac_Depth, cmock_retval)
void esp_efuse_mac_get_default_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, int mac_Depth, esp_err_t cmock_to_return);
#define esp_efuse_mac_get_default_ReturnThruPtr_mac(mac) esp_efuse_mac_get_default_CMockReturnMemThruPtr_mac(__LINE__, mac, sizeof(uint8_t))
#define esp_efuse_mac_get_default_ReturnArrayThruPtr_mac(mac, cmock_len) esp_efuse_mac_get_default_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_len * sizeof(*mac))
#define esp_efuse_mac_get_default_ReturnMemThruPtr_mac(mac, cmock_size) esp_efuse_mac_get_default_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_size)
void esp_efuse_mac_get_default_CMockReturnMemThruPtr_mac(UNITY_LINE_TYPE cmock_line, uint8_t* mac, size_t cmock_size);
#define esp_efuse_mac_get_default_IgnoreArg_mac() esp_efuse_mac_get_default_CMockIgnoreArg_mac(__LINE__)
void esp_efuse_mac_get_default_CMockIgnoreArg_mac(UNITY_LINE_TYPE cmock_line);
#define esp_read_mac_IgnoreAndReturn(cmock_retval) esp_read_mac_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_read_mac_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_read_mac_StopIgnore() esp_read_mac_CMockStopIgnore()
void esp_read_mac_CMockStopIgnore(void);
#define esp_read_mac_ExpectAndReturn(mac, type, cmock_retval) esp_read_mac_CMockExpectAndReturn(__LINE__, mac, type, cmock_retval)
void esp_read_mac_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, esp_mac_type_t type, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_read_mac_CALLBACK)(uint8_t* mac, esp_mac_type_t type, int cmock_num_calls);
void esp_read_mac_AddCallback(CMOCK_esp_read_mac_CALLBACK Callback);
void esp_read_mac_Stub(CMOCK_esp_read_mac_CALLBACK Callback);
#define esp_read_mac_StubWithCallback esp_read_mac_Stub
#define esp_read_mac_ExpectWithArrayAndReturn(mac, mac_Depth, type, cmock_retval) esp_read_mac_CMockExpectWithArrayAndReturn(__LINE__, mac, mac_Depth, type, cmock_retval)
void esp_read_mac_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* mac, int mac_Depth, esp_mac_type_t type, esp_err_t cmock_to_return);
#define esp_read_mac_ReturnThruPtr_mac(mac) esp_read_mac_CMockReturnMemThruPtr_mac(__LINE__, mac, sizeof(uint8_t))
#define esp_read_mac_ReturnArrayThruPtr_mac(mac, cmock_len) esp_read_mac_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_len * sizeof(*mac))
#define esp_read_mac_ReturnMemThruPtr_mac(mac, cmock_size) esp_read_mac_CMockReturnMemThruPtr_mac(__LINE__, mac, cmock_size)
void esp_read_mac_CMockReturnMemThruPtr_mac(UNITY_LINE_TYPE cmock_line, uint8_t* mac, size_t cmock_size);
#define esp_read_mac_IgnoreArg_mac() esp_read_mac_CMockIgnoreArg_mac(__LINE__)
void esp_read_mac_CMockIgnoreArg_mac(UNITY_LINE_TYPE cmock_line);
#define esp_read_mac_IgnoreArg_type() esp_read_mac_CMockIgnoreArg_type(__LINE__)
void esp_read_mac_CMockIgnoreArg_type(UNITY_LINE_TYPE cmock_line);
#define esp_derive_local_mac_IgnoreAndReturn(cmock_retval) esp_derive_local_mac_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esp_derive_local_mac_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define esp_derive_local_mac_StopIgnore() esp_derive_local_mac_CMockStopIgnore()
void esp_derive_local_mac_CMockStopIgnore(void);
#define esp_derive_local_mac_ExpectAndReturn(local_mac, universal_mac, cmock_retval) esp_derive_local_mac_CMockExpectAndReturn(__LINE__, local_mac, universal_mac, cmock_retval)
void esp_derive_local_mac_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* local_mac, const uint8_t* universal_mac, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_esp_derive_local_mac_CALLBACK)(uint8_t* local_mac, const uint8_t* universal_mac, int cmock_num_calls);
void esp_derive_local_mac_AddCallback(CMOCK_esp_derive_local_mac_CALLBACK Callback);
void esp_derive_local_mac_Stub(CMOCK_esp_derive_local_mac_CALLBACK Callback);
#define esp_derive_local_mac_StubWithCallback esp_derive_local_mac_Stub
#define esp_derive_local_mac_ExpectWithArrayAndReturn(local_mac, local_mac_Depth, universal_mac, universal_mac_Depth, cmock_retval) esp_derive_local_mac_CMockExpectWithArrayAndReturn(__LINE__, local_mac, local_mac_Depth, universal_mac, universal_mac_Depth, cmock_retval)
void esp_derive_local_mac_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* local_mac, int local_mac_Depth, const uint8_t* universal_mac, int universal_mac_Depth, esp_err_t cmock_to_return);
#define esp_derive_local_mac_ReturnThruPtr_local_mac(local_mac) esp_derive_local_mac_CMockReturnMemThruPtr_local_mac(__LINE__, local_mac, sizeof(uint8_t))
#define esp_derive_local_mac_ReturnArrayThruPtr_local_mac(local_mac, cmock_len) esp_derive_local_mac_CMockReturnMemThruPtr_local_mac(__LINE__, local_mac, cmock_len * sizeof(*local_mac))
#define esp_derive_local_mac_ReturnMemThruPtr_local_mac(local_mac, cmock_size) esp_derive_local_mac_CMockReturnMemThruPtr_local_mac(__LINE__, local_mac, cmock_size)
void esp_derive_local_mac_CMockReturnMemThruPtr_local_mac(UNITY_LINE_TYPE cmock_line, uint8_t* local_mac, size_t cmock_size);
#define esp_derive_local_mac_IgnoreArg_local_mac() esp_derive_local_mac_CMockIgnoreArg_local_mac(__LINE__)
void esp_derive_local_mac_CMockIgnoreArg_local_mac(UNITY_LINE_TYPE cmock_line);
#define esp_derive_local_mac_IgnoreArg_universal_mac() esp_derive_local_mac_CMockIgnoreArg_universal_mac(__LINE__)
void esp_derive_local_mac_CMockIgnoreArg_universal_mac(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

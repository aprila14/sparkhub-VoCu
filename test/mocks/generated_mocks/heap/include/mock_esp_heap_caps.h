#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ESP_HEAP_CAPS_H
#define _MOCK_ESP_HEAP_CAPS_H

#include "unity.h"
#include "esp_heap_caps.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_esp_heap_caps_Init(void);
void mock_esp_heap_caps_Destroy(void);
void mock_esp_heap_caps_Verify(void);




#define heap_caps_register_failed_alloc_callback_IgnoreAndReturn(cmock_retval) heap_caps_register_failed_alloc_callback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_register_failed_alloc_callback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define heap_caps_register_failed_alloc_callback_StopIgnore() heap_caps_register_failed_alloc_callback_CMockStopIgnore()
void heap_caps_register_failed_alloc_callback_CMockStopIgnore(void);
#define heap_caps_register_failed_alloc_callback_ExpectAndReturn(callback, cmock_retval) heap_caps_register_failed_alloc_callback_CMockExpectAndReturn(__LINE__, callback, cmock_retval)
void heap_caps_register_failed_alloc_callback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_alloc_failed_hook_t callback, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_heap_caps_register_failed_alloc_callback_CALLBACK)(esp_alloc_failed_hook_t callback, int cmock_num_calls);
void heap_caps_register_failed_alloc_callback_AddCallback(CMOCK_heap_caps_register_failed_alloc_callback_CALLBACK Callback);
void heap_caps_register_failed_alloc_callback_Stub(CMOCK_heap_caps_register_failed_alloc_callback_CALLBACK Callback);
#define heap_caps_register_failed_alloc_callback_StubWithCallback heap_caps_register_failed_alloc_callback_Stub
#define heap_caps_register_failed_alloc_callback_IgnoreArg_callback() heap_caps_register_failed_alloc_callback_CMockIgnoreArg_callback(__LINE__)
void heap_caps_register_failed_alloc_callback_CMockIgnoreArg_callback(UNITY_LINE_TYPE cmock_line);
#define heap_caps_malloc_IgnoreAndReturn(cmock_retval) heap_caps_malloc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_malloc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_malloc_StopIgnore() heap_caps_malloc_CMockStopIgnore()
void heap_caps_malloc_CMockStopIgnore(void);
#define heap_caps_malloc_ExpectAndReturn(size, caps, cmock_retval) heap_caps_malloc_CMockExpectAndReturn(__LINE__, size, caps, cmock_retval)
void heap_caps_malloc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t size, uint32_t caps, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_malloc_CALLBACK)(size_t size, uint32_t caps, int cmock_num_calls);
void heap_caps_malloc_AddCallback(CMOCK_heap_caps_malloc_CALLBACK Callback);
void heap_caps_malloc_Stub(CMOCK_heap_caps_malloc_CALLBACK Callback);
#define heap_caps_malloc_StubWithCallback heap_caps_malloc_Stub
#define heap_caps_malloc_IgnoreArg_size() heap_caps_malloc_CMockIgnoreArg_size(__LINE__)
void heap_caps_malloc_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_malloc_IgnoreArg_caps() heap_caps_malloc_CMockIgnoreArg_caps(__LINE__)
void heap_caps_malloc_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_free_Ignore() heap_caps_free_CMockIgnore()
void heap_caps_free_CMockIgnore(void);
#define heap_caps_free_StopIgnore() heap_caps_free_CMockStopIgnore()
void heap_caps_free_CMockStopIgnore(void);
#define heap_caps_free_Expect(ptr) heap_caps_free_CMockExpect(__LINE__, ptr)
void heap_caps_free_CMockExpect(UNITY_LINE_TYPE cmock_line, void* ptr);
typedef void (* CMOCK_heap_caps_free_CALLBACK)(void* ptr, int cmock_num_calls);
void heap_caps_free_AddCallback(CMOCK_heap_caps_free_CALLBACK Callback);
void heap_caps_free_Stub(CMOCK_heap_caps_free_CALLBACK Callback);
#define heap_caps_free_StubWithCallback heap_caps_free_Stub
#define heap_caps_free_ExpectWithArray(ptr, ptr_Depth) heap_caps_free_CMockExpectWithArray(__LINE__, ptr, ptr_Depth)
void heap_caps_free_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, void* ptr, int ptr_Depth);
#define heap_caps_free_ReturnThruPtr_ptr(ptr) heap_caps_free_CMockReturnMemThruPtr_ptr(__LINE__, ptr, sizeof(void))
#define heap_caps_free_ReturnArrayThruPtr_ptr(ptr, cmock_len) heap_caps_free_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_len * sizeof(*ptr))
#define heap_caps_free_ReturnMemThruPtr_ptr(ptr, cmock_size) heap_caps_free_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_size)
void heap_caps_free_CMockReturnMemThruPtr_ptr(UNITY_LINE_TYPE cmock_line, void* ptr, size_t cmock_size);
#define heap_caps_free_IgnoreArg_ptr() heap_caps_free_CMockIgnoreArg_ptr(__LINE__)
void heap_caps_free_CMockIgnoreArg_ptr(UNITY_LINE_TYPE cmock_line);
#define heap_caps_realloc_IgnoreAndReturn(cmock_retval) heap_caps_realloc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_realloc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_realloc_StopIgnore() heap_caps_realloc_CMockStopIgnore()
void heap_caps_realloc_CMockStopIgnore(void);
#define heap_caps_realloc_ExpectAndReturn(ptr, size, caps, cmock_retval) heap_caps_realloc_CMockExpectAndReturn(__LINE__, ptr, size, caps, cmock_retval)
void heap_caps_realloc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, size_t size, uint32_t caps, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_realloc_CALLBACK)(void* ptr, size_t size, uint32_t caps, int cmock_num_calls);
void heap_caps_realloc_AddCallback(CMOCK_heap_caps_realloc_CALLBACK Callback);
void heap_caps_realloc_Stub(CMOCK_heap_caps_realloc_CALLBACK Callback);
#define heap_caps_realloc_StubWithCallback heap_caps_realloc_Stub
#define heap_caps_realloc_ExpectWithArrayAndReturn(ptr, ptr_Depth, size, caps, cmock_retval) heap_caps_realloc_CMockExpectWithArrayAndReturn(__LINE__, ptr, ptr_Depth, size, caps, cmock_retval)
void heap_caps_realloc_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, int ptr_Depth, size_t size, uint32_t caps, void* cmock_to_return);
#define heap_caps_realloc_ReturnThruPtr_ptr(ptr) heap_caps_realloc_CMockReturnMemThruPtr_ptr(__LINE__, ptr, sizeof(void))
#define heap_caps_realloc_ReturnArrayThruPtr_ptr(ptr, cmock_len) heap_caps_realloc_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_len * sizeof(*ptr))
#define heap_caps_realloc_ReturnMemThruPtr_ptr(ptr, cmock_size) heap_caps_realloc_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_size)
void heap_caps_realloc_CMockReturnMemThruPtr_ptr(UNITY_LINE_TYPE cmock_line, void* ptr, size_t cmock_size);
#define heap_caps_realloc_IgnoreArg_ptr() heap_caps_realloc_CMockIgnoreArg_ptr(__LINE__)
void heap_caps_realloc_CMockIgnoreArg_ptr(UNITY_LINE_TYPE cmock_line);
#define heap_caps_realloc_IgnoreArg_size() heap_caps_realloc_CMockIgnoreArg_size(__LINE__)
void heap_caps_realloc_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_realloc_IgnoreArg_caps() heap_caps_realloc_CMockIgnoreArg_caps(__LINE__)
void heap_caps_realloc_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_alloc_IgnoreAndReturn(cmock_retval) heap_caps_aligned_alloc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_aligned_alloc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_aligned_alloc_StopIgnore() heap_caps_aligned_alloc_CMockStopIgnore()
void heap_caps_aligned_alloc_CMockStopIgnore(void);
#define heap_caps_aligned_alloc_ExpectAndReturn(alignment, size, caps, cmock_retval) heap_caps_aligned_alloc_CMockExpectAndReturn(__LINE__, alignment, size, caps, cmock_retval)
void heap_caps_aligned_alloc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t alignment, size_t size, uint32_t caps, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_aligned_alloc_CALLBACK)(size_t alignment, size_t size, uint32_t caps, int cmock_num_calls);
void heap_caps_aligned_alloc_AddCallback(CMOCK_heap_caps_aligned_alloc_CALLBACK Callback);
void heap_caps_aligned_alloc_Stub(CMOCK_heap_caps_aligned_alloc_CALLBACK Callback);
#define heap_caps_aligned_alloc_StubWithCallback heap_caps_aligned_alloc_Stub
#define heap_caps_aligned_alloc_IgnoreArg_alignment() heap_caps_aligned_alloc_CMockIgnoreArg_alignment(__LINE__)
void heap_caps_aligned_alloc_CMockIgnoreArg_alignment(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_alloc_IgnoreArg_size() heap_caps_aligned_alloc_CMockIgnoreArg_size(__LINE__)
void heap_caps_aligned_alloc_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_alloc_IgnoreArg_caps() heap_caps_aligned_alloc_CMockIgnoreArg_caps(__LINE__)
void heap_caps_aligned_alloc_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_free_Ignore() heap_caps_aligned_free_CMockIgnore()
void heap_caps_aligned_free_CMockIgnore(void);
#define heap_caps_aligned_free_StopIgnore() heap_caps_aligned_free_CMockStopIgnore()
void heap_caps_aligned_free_CMockStopIgnore(void);
#define heap_caps_aligned_free_Expect(ptr) heap_caps_aligned_free_CMockExpect(__LINE__, ptr)
void heap_caps_aligned_free_CMockExpect(UNITY_LINE_TYPE cmock_line, void* ptr);
typedef void (* CMOCK_heap_caps_aligned_free_CALLBACK)(void* ptr, int cmock_num_calls);
void heap_caps_aligned_free_AddCallback(CMOCK_heap_caps_aligned_free_CALLBACK Callback);
void heap_caps_aligned_free_Stub(CMOCK_heap_caps_aligned_free_CALLBACK Callback);
#define heap_caps_aligned_free_StubWithCallback heap_caps_aligned_free_Stub
#define heap_caps_aligned_free_ExpectWithArray(ptr, ptr_Depth) heap_caps_aligned_free_CMockExpectWithArray(__LINE__, ptr, ptr_Depth)
void heap_caps_aligned_free_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, void* ptr, int ptr_Depth);
#define heap_caps_aligned_free_ReturnThruPtr_ptr(ptr) heap_caps_aligned_free_CMockReturnMemThruPtr_ptr(__LINE__, ptr, sizeof(void))
#define heap_caps_aligned_free_ReturnArrayThruPtr_ptr(ptr, cmock_len) heap_caps_aligned_free_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_len * sizeof(*ptr))
#define heap_caps_aligned_free_ReturnMemThruPtr_ptr(ptr, cmock_size) heap_caps_aligned_free_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_size)
void heap_caps_aligned_free_CMockReturnMemThruPtr_ptr(UNITY_LINE_TYPE cmock_line, void* ptr, size_t cmock_size);
#define heap_caps_aligned_free_IgnoreArg_ptr() heap_caps_aligned_free_CMockIgnoreArg_ptr(__LINE__)
void heap_caps_aligned_free_CMockIgnoreArg_ptr(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_calloc_IgnoreAndReturn(cmock_retval) heap_caps_aligned_calloc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_aligned_calloc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_aligned_calloc_StopIgnore() heap_caps_aligned_calloc_CMockStopIgnore()
void heap_caps_aligned_calloc_CMockStopIgnore(void);
#define heap_caps_aligned_calloc_ExpectAndReturn(alignment, n, size, caps, cmock_retval) heap_caps_aligned_calloc_CMockExpectAndReturn(__LINE__, alignment, n, size, caps, cmock_retval)
void heap_caps_aligned_calloc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t alignment, size_t n, size_t size, uint32_t caps, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_aligned_calloc_CALLBACK)(size_t alignment, size_t n, size_t size, uint32_t caps, int cmock_num_calls);
void heap_caps_aligned_calloc_AddCallback(CMOCK_heap_caps_aligned_calloc_CALLBACK Callback);
void heap_caps_aligned_calloc_Stub(CMOCK_heap_caps_aligned_calloc_CALLBACK Callback);
#define heap_caps_aligned_calloc_StubWithCallback heap_caps_aligned_calloc_Stub
#define heap_caps_aligned_calloc_IgnoreArg_alignment() heap_caps_aligned_calloc_CMockIgnoreArg_alignment(__LINE__)
void heap_caps_aligned_calloc_CMockIgnoreArg_alignment(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_calloc_IgnoreArg_n() heap_caps_aligned_calloc_CMockIgnoreArg_n(__LINE__)
void heap_caps_aligned_calloc_CMockIgnoreArg_n(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_calloc_IgnoreArg_size() heap_caps_aligned_calloc_CMockIgnoreArg_size(__LINE__)
void heap_caps_aligned_calloc_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_aligned_calloc_IgnoreArg_caps() heap_caps_aligned_calloc_CMockIgnoreArg_caps(__LINE__)
void heap_caps_aligned_calloc_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_calloc_IgnoreAndReturn(cmock_retval) heap_caps_calloc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_calloc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_calloc_StopIgnore() heap_caps_calloc_CMockStopIgnore()
void heap_caps_calloc_CMockStopIgnore(void);
#define heap_caps_calloc_ExpectAndReturn(n, size, caps, cmock_retval) heap_caps_calloc_CMockExpectAndReturn(__LINE__, n, size, caps, cmock_retval)
void heap_caps_calloc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t n, size_t size, uint32_t caps, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_calloc_CALLBACK)(size_t n, size_t size, uint32_t caps, int cmock_num_calls);
void heap_caps_calloc_AddCallback(CMOCK_heap_caps_calloc_CALLBACK Callback);
void heap_caps_calloc_Stub(CMOCK_heap_caps_calloc_CALLBACK Callback);
#define heap_caps_calloc_StubWithCallback heap_caps_calloc_Stub
#define heap_caps_calloc_IgnoreArg_n() heap_caps_calloc_CMockIgnoreArg_n(__LINE__)
void heap_caps_calloc_CMockIgnoreArg_n(UNITY_LINE_TYPE cmock_line);
#define heap_caps_calloc_IgnoreArg_size() heap_caps_calloc_CMockIgnoreArg_size(__LINE__)
void heap_caps_calloc_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_calloc_IgnoreArg_caps() heap_caps_calloc_CMockIgnoreArg_caps(__LINE__)
void heap_caps_calloc_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_get_total_size_IgnoreAndReturn(cmock_retval) heap_caps_get_total_size_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_get_total_size_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define heap_caps_get_total_size_StopIgnore() heap_caps_get_total_size_CMockStopIgnore()
void heap_caps_get_total_size_CMockStopIgnore(void);
#define heap_caps_get_total_size_ExpectAndReturn(caps, cmock_retval) heap_caps_get_total_size_CMockExpectAndReturn(__LINE__, caps, cmock_retval)
void heap_caps_get_total_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t caps, size_t cmock_to_return);
typedef size_t (* CMOCK_heap_caps_get_total_size_CALLBACK)(uint32_t caps, int cmock_num_calls);
void heap_caps_get_total_size_AddCallback(CMOCK_heap_caps_get_total_size_CALLBACK Callback);
void heap_caps_get_total_size_Stub(CMOCK_heap_caps_get_total_size_CALLBACK Callback);
#define heap_caps_get_total_size_StubWithCallback heap_caps_get_total_size_Stub
#define heap_caps_get_total_size_IgnoreArg_caps() heap_caps_get_total_size_CMockIgnoreArg_caps(__LINE__)
void heap_caps_get_total_size_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_get_free_size_IgnoreAndReturn(cmock_retval) heap_caps_get_free_size_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_get_free_size_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define heap_caps_get_free_size_StopIgnore() heap_caps_get_free_size_CMockStopIgnore()
void heap_caps_get_free_size_CMockStopIgnore(void);
#define heap_caps_get_free_size_ExpectAndReturn(caps, cmock_retval) heap_caps_get_free_size_CMockExpectAndReturn(__LINE__, caps, cmock_retval)
void heap_caps_get_free_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t caps, size_t cmock_to_return);
typedef size_t (* CMOCK_heap_caps_get_free_size_CALLBACK)(uint32_t caps, int cmock_num_calls);
void heap_caps_get_free_size_AddCallback(CMOCK_heap_caps_get_free_size_CALLBACK Callback);
void heap_caps_get_free_size_Stub(CMOCK_heap_caps_get_free_size_CALLBACK Callback);
#define heap_caps_get_free_size_StubWithCallback heap_caps_get_free_size_Stub
#define heap_caps_get_free_size_IgnoreArg_caps() heap_caps_get_free_size_CMockIgnoreArg_caps(__LINE__)
void heap_caps_get_free_size_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_get_minimum_free_size_IgnoreAndReturn(cmock_retval) heap_caps_get_minimum_free_size_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_get_minimum_free_size_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define heap_caps_get_minimum_free_size_StopIgnore() heap_caps_get_minimum_free_size_CMockStopIgnore()
void heap_caps_get_minimum_free_size_CMockStopIgnore(void);
#define heap_caps_get_minimum_free_size_ExpectAndReturn(caps, cmock_retval) heap_caps_get_minimum_free_size_CMockExpectAndReturn(__LINE__, caps, cmock_retval)
void heap_caps_get_minimum_free_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t caps, size_t cmock_to_return);
typedef size_t (* CMOCK_heap_caps_get_minimum_free_size_CALLBACK)(uint32_t caps, int cmock_num_calls);
void heap_caps_get_minimum_free_size_AddCallback(CMOCK_heap_caps_get_minimum_free_size_CALLBACK Callback);
void heap_caps_get_minimum_free_size_Stub(CMOCK_heap_caps_get_minimum_free_size_CALLBACK Callback);
#define heap_caps_get_minimum_free_size_StubWithCallback heap_caps_get_minimum_free_size_Stub
#define heap_caps_get_minimum_free_size_IgnoreArg_caps() heap_caps_get_minimum_free_size_CMockIgnoreArg_caps(__LINE__)
void heap_caps_get_minimum_free_size_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_get_largest_free_block_IgnoreAndReturn(cmock_retval) heap_caps_get_largest_free_block_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_get_largest_free_block_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define heap_caps_get_largest_free_block_StopIgnore() heap_caps_get_largest_free_block_CMockStopIgnore()
void heap_caps_get_largest_free_block_CMockStopIgnore(void);
#define heap_caps_get_largest_free_block_ExpectAndReturn(caps, cmock_retval) heap_caps_get_largest_free_block_CMockExpectAndReturn(__LINE__, caps, cmock_retval)
void heap_caps_get_largest_free_block_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t caps, size_t cmock_to_return);
typedef size_t (* CMOCK_heap_caps_get_largest_free_block_CALLBACK)(uint32_t caps, int cmock_num_calls);
void heap_caps_get_largest_free_block_AddCallback(CMOCK_heap_caps_get_largest_free_block_CALLBACK Callback);
void heap_caps_get_largest_free_block_Stub(CMOCK_heap_caps_get_largest_free_block_CALLBACK Callback);
#define heap_caps_get_largest_free_block_StubWithCallback heap_caps_get_largest_free_block_Stub
#define heap_caps_get_largest_free_block_IgnoreArg_caps() heap_caps_get_largest_free_block_CMockIgnoreArg_caps(__LINE__)
void heap_caps_get_largest_free_block_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_print_heap_info_Ignore() heap_caps_print_heap_info_CMockIgnore()
void heap_caps_print_heap_info_CMockIgnore(void);
#define heap_caps_print_heap_info_StopIgnore() heap_caps_print_heap_info_CMockStopIgnore()
void heap_caps_print_heap_info_CMockStopIgnore(void);
#define heap_caps_print_heap_info_Expect(caps) heap_caps_print_heap_info_CMockExpect(__LINE__, caps)
void heap_caps_print_heap_info_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t caps);
typedef void (* CMOCK_heap_caps_print_heap_info_CALLBACK)(uint32_t caps, int cmock_num_calls);
void heap_caps_print_heap_info_AddCallback(CMOCK_heap_caps_print_heap_info_CALLBACK Callback);
void heap_caps_print_heap_info_Stub(CMOCK_heap_caps_print_heap_info_CALLBACK Callback);
#define heap_caps_print_heap_info_StubWithCallback heap_caps_print_heap_info_Stub
#define heap_caps_print_heap_info_IgnoreArg_caps() heap_caps_print_heap_info_CMockIgnoreArg_caps(__LINE__)
void heap_caps_print_heap_info_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_check_integrity_all_IgnoreAndReturn(cmock_retval) heap_caps_check_integrity_all_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_check_integrity_all_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define heap_caps_check_integrity_all_StopIgnore() heap_caps_check_integrity_all_CMockStopIgnore()
void heap_caps_check_integrity_all_CMockStopIgnore(void);
#define heap_caps_check_integrity_all_ExpectAndReturn(print_errors, cmock_retval) heap_caps_check_integrity_all_CMockExpectAndReturn(__LINE__, print_errors, cmock_retval)
void heap_caps_check_integrity_all_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool print_errors, bool cmock_to_return);
typedef bool (* CMOCK_heap_caps_check_integrity_all_CALLBACK)(bool print_errors, int cmock_num_calls);
void heap_caps_check_integrity_all_AddCallback(CMOCK_heap_caps_check_integrity_all_CALLBACK Callback);
void heap_caps_check_integrity_all_Stub(CMOCK_heap_caps_check_integrity_all_CALLBACK Callback);
#define heap_caps_check_integrity_all_StubWithCallback heap_caps_check_integrity_all_Stub
#define heap_caps_check_integrity_all_IgnoreArg_print_errors() heap_caps_check_integrity_all_CMockIgnoreArg_print_errors(__LINE__)
void heap_caps_check_integrity_all_CMockIgnoreArg_print_errors(UNITY_LINE_TYPE cmock_line);
#define heap_caps_check_integrity_IgnoreAndReturn(cmock_retval) heap_caps_check_integrity_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_check_integrity_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define heap_caps_check_integrity_StopIgnore() heap_caps_check_integrity_CMockStopIgnore()
void heap_caps_check_integrity_CMockStopIgnore(void);
#define heap_caps_check_integrity_ExpectAndReturn(caps, print_errors, cmock_retval) heap_caps_check_integrity_CMockExpectAndReturn(__LINE__, caps, print_errors, cmock_retval)
void heap_caps_check_integrity_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t caps, bool print_errors, bool cmock_to_return);
typedef bool (* CMOCK_heap_caps_check_integrity_CALLBACK)(uint32_t caps, bool print_errors, int cmock_num_calls);
void heap_caps_check_integrity_AddCallback(CMOCK_heap_caps_check_integrity_CALLBACK Callback);
void heap_caps_check_integrity_Stub(CMOCK_heap_caps_check_integrity_CALLBACK Callback);
#define heap_caps_check_integrity_StubWithCallback heap_caps_check_integrity_Stub
#define heap_caps_check_integrity_IgnoreArg_caps() heap_caps_check_integrity_CMockIgnoreArg_caps(__LINE__)
void heap_caps_check_integrity_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_check_integrity_IgnoreArg_print_errors() heap_caps_check_integrity_CMockIgnoreArg_print_errors(__LINE__)
void heap_caps_check_integrity_CMockIgnoreArg_print_errors(UNITY_LINE_TYPE cmock_line);
#define heap_caps_check_integrity_addr_IgnoreAndReturn(cmock_retval) heap_caps_check_integrity_addr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_check_integrity_addr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define heap_caps_check_integrity_addr_StopIgnore() heap_caps_check_integrity_addr_CMockStopIgnore()
void heap_caps_check_integrity_addr_CMockStopIgnore(void);
#define heap_caps_check_integrity_addr_ExpectAndReturn(addr, print_errors, cmock_retval) heap_caps_check_integrity_addr_CMockExpectAndReturn(__LINE__, addr, print_errors, cmock_retval)
void heap_caps_check_integrity_addr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, intptr_t addr, bool print_errors, bool cmock_to_return);
typedef bool (* CMOCK_heap_caps_check_integrity_addr_CALLBACK)(intptr_t addr, bool print_errors, int cmock_num_calls);
void heap_caps_check_integrity_addr_AddCallback(CMOCK_heap_caps_check_integrity_addr_CALLBACK Callback);
void heap_caps_check_integrity_addr_Stub(CMOCK_heap_caps_check_integrity_addr_CALLBACK Callback);
#define heap_caps_check_integrity_addr_StubWithCallback heap_caps_check_integrity_addr_Stub
#define heap_caps_check_integrity_addr_IgnoreArg_addr() heap_caps_check_integrity_addr_CMockIgnoreArg_addr(__LINE__)
void heap_caps_check_integrity_addr_CMockIgnoreArg_addr(UNITY_LINE_TYPE cmock_line);
#define heap_caps_check_integrity_addr_IgnoreArg_print_errors() heap_caps_check_integrity_addr_CMockIgnoreArg_print_errors(__LINE__)
void heap_caps_check_integrity_addr_CMockIgnoreArg_print_errors(UNITY_LINE_TYPE cmock_line);
#define heap_caps_malloc_extmem_enable_Ignore() heap_caps_malloc_extmem_enable_CMockIgnore()
void heap_caps_malloc_extmem_enable_CMockIgnore(void);
#define heap_caps_malloc_extmem_enable_StopIgnore() heap_caps_malloc_extmem_enable_CMockStopIgnore()
void heap_caps_malloc_extmem_enable_CMockStopIgnore(void);
#define heap_caps_malloc_extmem_enable_Expect(limit) heap_caps_malloc_extmem_enable_CMockExpect(__LINE__, limit)
void heap_caps_malloc_extmem_enable_CMockExpect(UNITY_LINE_TYPE cmock_line, size_t limit);
typedef void (* CMOCK_heap_caps_malloc_extmem_enable_CALLBACK)(size_t limit, int cmock_num_calls);
void heap_caps_malloc_extmem_enable_AddCallback(CMOCK_heap_caps_malloc_extmem_enable_CALLBACK Callback);
void heap_caps_malloc_extmem_enable_Stub(CMOCK_heap_caps_malloc_extmem_enable_CALLBACK Callback);
#define heap_caps_malloc_extmem_enable_StubWithCallback heap_caps_malloc_extmem_enable_Stub
#define heap_caps_malloc_extmem_enable_IgnoreArg_limit() heap_caps_malloc_extmem_enable_CMockIgnoreArg_limit(__LINE__)
void heap_caps_malloc_extmem_enable_CMockIgnoreArg_limit(UNITY_LINE_TYPE cmock_line);
#define heap_caps_malloc_prefer_IgnoreAndReturn(cmock_retval) heap_caps_malloc_prefer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_malloc_prefer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_malloc_prefer_StopIgnore() heap_caps_malloc_prefer_CMockStopIgnore()
void heap_caps_malloc_prefer_CMockStopIgnore(void);
#define heap_caps_malloc_prefer_ExpectAndReturn(size, num, cmock_retval) heap_caps_malloc_prefer_CMockExpectAndReturn(__LINE__, size, num, cmock_retval)
void heap_caps_malloc_prefer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t size, size_t num, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_malloc_prefer_CALLBACK)(size_t size, size_t num, int cmock_num_calls);
void heap_caps_malloc_prefer_AddCallback(CMOCK_heap_caps_malloc_prefer_CALLBACK Callback);
void heap_caps_malloc_prefer_Stub(CMOCK_heap_caps_malloc_prefer_CALLBACK Callback);
#define heap_caps_malloc_prefer_StubWithCallback heap_caps_malloc_prefer_Stub
#define heap_caps_malloc_prefer_IgnoreArg_size() heap_caps_malloc_prefer_CMockIgnoreArg_size(__LINE__)
void heap_caps_malloc_prefer_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_malloc_prefer_IgnoreArg_num() heap_caps_malloc_prefer_CMockIgnoreArg_num(__LINE__)
void heap_caps_malloc_prefer_CMockIgnoreArg_num(UNITY_LINE_TYPE cmock_line);
#define heap_caps_realloc_prefer_IgnoreAndReturn(cmock_retval) heap_caps_realloc_prefer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_realloc_prefer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_realloc_prefer_StopIgnore() heap_caps_realloc_prefer_CMockStopIgnore()
void heap_caps_realloc_prefer_CMockStopIgnore(void);
#define heap_caps_realloc_prefer_ExpectAndReturn(ptr, size, num, cmock_retval) heap_caps_realloc_prefer_CMockExpectAndReturn(__LINE__, ptr, size, num, cmock_retval)
void heap_caps_realloc_prefer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, size_t size, size_t num, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_realloc_prefer_CALLBACK)(void* ptr, size_t size, size_t num, int cmock_num_calls);
void heap_caps_realloc_prefer_AddCallback(CMOCK_heap_caps_realloc_prefer_CALLBACK Callback);
void heap_caps_realloc_prefer_Stub(CMOCK_heap_caps_realloc_prefer_CALLBACK Callback);
#define heap_caps_realloc_prefer_StubWithCallback heap_caps_realloc_prefer_Stub
#define heap_caps_realloc_prefer_ExpectWithArrayAndReturn(ptr, ptr_Depth, size, num, cmock_retval) heap_caps_realloc_prefer_CMockExpectWithArrayAndReturn(__LINE__, ptr, ptr_Depth, size, num, cmock_retval)
void heap_caps_realloc_prefer_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, int ptr_Depth, size_t size, size_t num, void* cmock_to_return);
#define heap_caps_realloc_prefer_ReturnThruPtr_ptr(ptr) heap_caps_realloc_prefer_CMockReturnMemThruPtr_ptr(__LINE__, ptr, sizeof(void))
#define heap_caps_realloc_prefer_ReturnArrayThruPtr_ptr(ptr, cmock_len) heap_caps_realloc_prefer_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_len * sizeof(*ptr))
#define heap_caps_realloc_prefer_ReturnMemThruPtr_ptr(ptr, cmock_size) heap_caps_realloc_prefer_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_size)
void heap_caps_realloc_prefer_CMockReturnMemThruPtr_ptr(UNITY_LINE_TYPE cmock_line, void* ptr, size_t cmock_size);
#define heap_caps_realloc_prefer_IgnoreArg_ptr() heap_caps_realloc_prefer_CMockIgnoreArg_ptr(__LINE__)
void heap_caps_realloc_prefer_CMockIgnoreArg_ptr(UNITY_LINE_TYPE cmock_line);
#define heap_caps_realloc_prefer_IgnoreArg_size() heap_caps_realloc_prefer_CMockIgnoreArg_size(__LINE__)
void heap_caps_realloc_prefer_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_realloc_prefer_IgnoreArg_num() heap_caps_realloc_prefer_CMockIgnoreArg_num(__LINE__)
void heap_caps_realloc_prefer_CMockIgnoreArg_num(UNITY_LINE_TYPE cmock_line);
#define heap_caps_calloc_prefer_IgnoreAndReturn(cmock_retval) heap_caps_calloc_prefer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_calloc_prefer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define heap_caps_calloc_prefer_StopIgnore() heap_caps_calloc_prefer_CMockStopIgnore()
void heap_caps_calloc_prefer_CMockStopIgnore(void);
#define heap_caps_calloc_prefer_ExpectAndReturn(n, size, num, cmock_retval) heap_caps_calloc_prefer_CMockExpectAndReturn(__LINE__, n, size, num, cmock_retval)
void heap_caps_calloc_prefer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t n, size_t size, size_t num, void* cmock_to_return);
typedef void* (* CMOCK_heap_caps_calloc_prefer_CALLBACK)(size_t n, size_t size, size_t num, int cmock_num_calls);
void heap_caps_calloc_prefer_AddCallback(CMOCK_heap_caps_calloc_prefer_CALLBACK Callback);
void heap_caps_calloc_prefer_Stub(CMOCK_heap_caps_calloc_prefer_CALLBACK Callback);
#define heap_caps_calloc_prefer_StubWithCallback heap_caps_calloc_prefer_Stub
#define heap_caps_calloc_prefer_IgnoreArg_n() heap_caps_calloc_prefer_CMockIgnoreArg_n(__LINE__)
void heap_caps_calloc_prefer_CMockIgnoreArg_n(UNITY_LINE_TYPE cmock_line);
#define heap_caps_calloc_prefer_IgnoreArg_size() heap_caps_calloc_prefer_CMockIgnoreArg_size(__LINE__)
void heap_caps_calloc_prefer_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define heap_caps_calloc_prefer_IgnoreArg_num() heap_caps_calloc_prefer_CMockIgnoreArg_num(__LINE__)
void heap_caps_calloc_prefer_CMockIgnoreArg_num(UNITY_LINE_TYPE cmock_line);
#define heap_caps_dump_Ignore() heap_caps_dump_CMockIgnore()
void heap_caps_dump_CMockIgnore(void);
#define heap_caps_dump_StopIgnore() heap_caps_dump_CMockStopIgnore()
void heap_caps_dump_CMockStopIgnore(void);
#define heap_caps_dump_Expect(caps) heap_caps_dump_CMockExpect(__LINE__, caps)
void heap_caps_dump_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t caps);
typedef void (* CMOCK_heap_caps_dump_CALLBACK)(uint32_t caps, int cmock_num_calls);
void heap_caps_dump_AddCallback(CMOCK_heap_caps_dump_CALLBACK Callback);
void heap_caps_dump_Stub(CMOCK_heap_caps_dump_CALLBACK Callback);
#define heap_caps_dump_StubWithCallback heap_caps_dump_Stub
#define heap_caps_dump_IgnoreArg_caps() heap_caps_dump_CMockIgnoreArg_caps(__LINE__)
void heap_caps_dump_CMockIgnoreArg_caps(UNITY_LINE_TYPE cmock_line);
#define heap_caps_dump_all_Ignore() heap_caps_dump_all_CMockIgnore()
void heap_caps_dump_all_CMockIgnore(void);
#define heap_caps_dump_all_StopIgnore() heap_caps_dump_all_CMockStopIgnore()
void heap_caps_dump_all_CMockStopIgnore(void);
#define heap_caps_dump_all_Expect() heap_caps_dump_all_CMockExpect(__LINE__)
void heap_caps_dump_all_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_heap_caps_dump_all_CALLBACK)(int cmock_num_calls);
void heap_caps_dump_all_AddCallback(CMOCK_heap_caps_dump_all_CALLBACK Callback);
void heap_caps_dump_all_Stub(CMOCK_heap_caps_dump_all_CALLBACK Callback);
#define heap_caps_dump_all_StubWithCallback heap_caps_dump_all_Stub
#define heap_caps_get_allocated_size_IgnoreAndReturn(cmock_retval) heap_caps_get_allocated_size_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void heap_caps_get_allocated_size_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define heap_caps_get_allocated_size_StopIgnore() heap_caps_get_allocated_size_CMockStopIgnore()
void heap_caps_get_allocated_size_CMockStopIgnore(void);
#define heap_caps_get_allocated_size_ExpectAndReturn(ptr, cmock_retval) heap_caps_get_allocated_size_CMockExpectAndReturn(__LINE__, ptr, cmock_retval)
void heap_caps_get_allocated_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, size_t cmock_to_return);
typedef size_t (* CMOCK_heap_caps_get_allocated_size_CALLBACK)(void* ptr, int cmock_num_calls);
void heap_caps_get_allocated_size_AddCallback(CMOCK_heap_caps_get_allocated_size_CALLBACK Callback);
void heap_caps_get_allocated_size_Stub(CMOCK_heap_caps_get_allocated_size_CALLBACK Callback);
#define heap_caps_get_allocated_size_StubWithCallback heap_caps_get_allocated_size_Stub
#define heap_caps_get_allocated_size_ExpectWithArrayAndReturn(ptr, ptr_Depth, cmock_retval) heap_caps_get_allocated_size_CMockExpectWithArrayAndReturn(__LINE__, ptr, ptr_Depth, cmock_retval)
void heap_caps_get_allocated_size_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, void* ptr, int ptr_Depth, size_t cmock_to_return);
#define heap_caps_get_allocated_size_ReturnThruPtr_ptr(ptr) heap_caps_get_allocated_size_CMockReturnMemThruPtr_ptr(__LINE__, ptr, sizeof(void))
#define heap_caps_get_allocated_size_ReturnArrayThruPtr_ptr(ptr, cmock_len) heap_caps_get_allocated_size_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_len * sizeof(*ptr))
#define heap_caps_get_allocated_size_ReturnMemThruPtr_ptr(ptr, cmock_size) heap_caps_get_allocated_size_CMockReturnMemThruPtr_ptr(__LINE__, ptr, cmock_size)
void heap_caps_get_allocated_size_CMockReturnMemThruPtr_ptr(UNITY_LINE_TYPE cmock_line, void* ptr, size_t cmock_size);
#define heap_caps_get_allocated_size_IgnoreArg_ptr() heap_caps_get_allocated_size_CMockIgnoreArg_ptr(__LINE__)
void heap_caps_get_allocated_size_CMockIgnoreArg_ptr(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

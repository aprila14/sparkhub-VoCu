#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_GPIO_H
#define _MOCK_GPIO_H

#include "unity.h"
#include "gpio.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_gpio_Init(void);
void mock_gpio_Destroy(void);
void mock_gpio_Verify(void);


typedef void(*cmock_gpio_func_ptr1)(void*);


#define gpio_config_IgnoreAndReturn(cmock_retval) gpio_config_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_config_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_config_StopIgnore() gpio_config_CMockStopIgnore()
void gpio_config_CMockStopIgnore(void);
#define gpio_config_ExpectAndReturn(pGPIOConfig, cmock_retval) gpio_config_CMockExpectAndReturn(__LINE__, pGPIOConfig, cmock_retval)
void gpio_config_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const gpio_config_t* pGPIOConfig, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_config_CALLBACK)(const gpio_config_t* pGPIOConfig, int cmock_num_calls);
void gpio_config_AddCallback(CMOCK_gpio_config_CALLBACK Callback);
void gpio_config_Stub(CMOCK_gpio_config_CALLBACK Callback);
#define gpio_config_StubWithCallback gpio_config_Stub
#define gpio_config_ExpectWithArrayAndReturn(pGPIOConfig, pGPIOConfig_Depth, cmock_retval) gpio_config_CMockExpectWithArrayAndReturn(__LINE__, pGPIOConfig, pGPIOConfig_Depth, cmock_retval)
void gpio_config_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const gpio_config_t* pGPIOConfig, int pGPIOConfig_Depth, esp_err_t cmock_to_return);
#define gpio_config_IgnoreArg_pGPIOConfig() gpio_config_CMockIgnoreArg_pGPIOConfig(__LINE__)
void gpio_config_CMockIgnoreArg_pGPIOConfig(UNITY_LINE_TYPE cmock_line);
#define gpio_reset_pin_IgnoreAndReturn(cmock_retval) gpio_reset_pin_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_reset_pin_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_reset_pin_StopIgnore() gpio_reset_pin_CMockStopIgnore()
void gpio_reset_pin_CMockStopIgnore(void);
#define gpio_reset_pin_ExpectAndReturn(gpio_num, cmock_retval) gpio_reset_pin_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_reset_pin_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_reset_pin_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_reset_pin_AddCallback(CMOCK_gpio_reset_pin_CALLBACK Callback);
void gpio_reset_pin_Stub(CMOCK_gpio_reset_pin_CALLBACK Callback);
#define gpio_reset_pin_StubWithCallback gpio_reset_pin_Stub
#define gpio_reset_pin_IgnoreArg_gpio_num() gpio_reset_pin_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_reset_pin_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_intr_type_IgnoreAndReturn(cmock_retval) gpio_set_intr_type_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_set_intr_type_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_set_intr_type_StopIgnore() gpio_set_intr_type_CMockStopIgnore()
void gpio_set_intr_type_CMockStopIgnore(void);
#define gpio_set_intr_type_ExpectAndReturn(gpio_num, intr_type, cmock_retval) gpio_set_intr_type_CMockExpectAndReturn(__LINE__, gpio_num, intr_type, cmock_retval)
void gpio_set_intr_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_int_type_t intr_type, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_set_intr_type_CALLBACK)(gpio_num_t gpio_num, gpio_int_type_t intr_type, int cmock_num_calls);
void gpio_set_intr_type_AddCallback(CMOCK_gpio_set_intr_type_CALLBACK Callback);
void gpio_set_intr_type_Stub(CMOCK_gpio_set_intr_type_CALLBACK Callback);
#define gpio_set_intr_type_StubWithCallback gpio_set_intr_type_Stub
#define gpio_set_intr_type_IgnoreArg_gpio_num() gpio_set_intr_type_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_set_intr_type_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_intr_type_IgnoreArg_intr_type() gpio_set_intr_type_CMockIgnoreArg_intr_type(__LINE__)
void gpio_set_intr_type_CMockIgnoreArg_intr_type(UNITY_LINE_TYPE cmock_line);
#define gpio_intr_enable_IgnoreAndReturn(cmock_retval) gpio_intr_enable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_intr_enable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_intr_enable_StopIgnore() gpio_intr_enable_CMockStopIgnore()
void gpio_intr_enable_CMockStopIgnore(void);
#define gpio_intr_enable_ExpectAndReturn(gpio_num, cmock_retval) gpio_intr_enable_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_intr_enable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_intr_enable_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_intr_enable_AddCallback(CMOCK_gpio_intr_enable_CALLBACK Callback);
void gpio_intr_enable_Stub(CMOCK_gpio_intr_enable_CALLBACK Callback);
#define gpio_intr_enable_StubWithCallback gpio_intr_enable_Stub
#define gpio_intr_enable_IgnoreArg_gpio_num() gpio_intr_enable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_intr_enable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_intr_disable_IgnoreAndReturn(cmock_retval) gpio_intr_disable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_intr_disable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_intr_disable_StopIgnore() gpio_intr_disable_CMockStopIgnore()
void gpio_intr_disable_CMockStopIgnore(void);
#define gpio_intr_disable_ExpectAndReturn(gpio_num, cmock_retval) gpio_intr_disable_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_intr_disable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_intr_disable_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_intr_disable_AddCallback(CMOCK_gpio_intr_disable_CALLBACK Callback);
void gpio_intr_disable_Stub(CMOCK_gpio_intr_disable_CALLBACK Callback);
#define gpio_intr_disable_StubWithCallback gpio_intr_disable_Stub
#define gpio_intr_disable_IgnoreArg_gpio_num() gpio_intr_disable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_intr_disable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_level_IgnoreAndReturn(cmock_retval) gpio_set_level_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_set_level_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_set_level_StopIgnore() gpio_set_level_CMockStopIgnore()
void gpio_set_level_CMockStopIgnore(void);
#define gpio_set_level_ExpectAndReturn(gpio_num, level, cmock_retval) gpio_set_level_CMockExpectAndReturn(__LINE__, gpio_num, level, cmock_retval)
void gpio_set_level_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, uint32_t level, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_set_level_CALLBACK)(gpio_num_t gpio_num, uint32_t level, int cmock_num_calls);
void gpio_set_level_AddCallback(CMOCK_gpio_set_level_CALLBACK Callback);
void gpio_set_level_Stub(CMOCK_gpio_set_level_CALLBACK Callback);
#define gpio_set_level_StubWithCallback gpio_set_level_Stub
#define gpio_set_level_IgnoreArg_gpio_num() gpio_set_level_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_set_level_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_level_IgnoreArg_level() gpio_set_level_CMockIgnoreArg_level(__LINE__)
void gpio_set_level_CMockIgnoreArg_level(UNITY_LINE_TYPE cmock_line);
#define gpio_get_level_IgnoreAndReturn(cmock_retval) gpio_get_level_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_get_level_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define gpio_get_level_StopIgnore() gpio_get_level_CMockStopIgnore()
void gpio_get_level_CMockStopIgnore(void);
#define gpio_get_level_ExpectAndReturn(gpio_num, cmock_retval) gpio_get_level_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_get_level_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, int cmock_to_return);
typedef int (* CMOCK_gpio_get_level_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_get_level_AddCallback(CMOCK_gpio_get_level_CALLBACK Callback);
void gpio_get_level_Stub(CMOCK_gpio_get_level_CALLBACK Callback);
#define gpio_get_level_StubWithCallback gpio_get_level_Stub
#define gpio_get_level_IgnoreArg_gpio_num() gpio_get_level_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_get_level_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_direction_IgnoreAndReturn(cmock_retval) gpio_set_direction_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_set_direction_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_set_direction_StopIgnore() gpio_set_direction_CMockStopIgnore()
void gpio_set_direction_CMockStopIgnore(void);
#define gpio_set_direction_ExpectAndReturn(gpio_num, mode, cmock_retval) gpio_set_direction_CMockExpectAndReturn(__LINE__, gpio_num, mode, cmock_retval)
void gpio_set_direction_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_mode_t mode, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_set_direction_CALLBACK)(gpio_num_t gpio_num, gpio_mode_t mode, int cmock_num_calls);
void gpio_set_direction_AddCallback(CMOCK_gpio_set_direction_CALLBACK Callback);
void gpio_set_direction_Stub(CMOCK_gpio_set_direction_CALLBACK Callback);
#define gpio_set_direction_StubWithCallback gpio_set_direction_Stub
#define gpio_set_direction_IgnoreArg_gpio_num() gpio_set_direction_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_set_direction_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_direction_IgnoreArg_mode() gpio_set_direction_CMockIgnoreArg_mode(__LINE__)
void gpio_set_direction_CMockIgnoreArg_mode(UNITY_LINE_TYPE cmock_line);
#define gpio_set_pull_mode_IgnoreAndReturn(cmock_retval) gpio_set_pull_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_set_pull_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_set_pull_mode_StopIgnore() gpio_set_pull_mode_CMockStopIgnore()
void gpio_set_pull_mode_CMockStopIgnore(void);
#define gpio_set_pull_mode_ExpectAndReturn(gpio_num, pull, cmock_retval) gpio_set_pull_mode_CMockExpectAndReturn(__LINE__, gpio_num, pull, cmock_retval)
void gpio_set_pull_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_pull_mode_t pull, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_set_pull_mode_CALLBACK)(gpio_num_t gpio_num, gpio_pull_mode_t pull, int cmock_num_calls);
void gpio_set_pull_mode_AddCallback(CMOCK_gpio_set_pull_mode_CALLBACK Callback);
void gpio_set_pull_mode_Stub(CMOCK_gpio_set_pull_mode_CALLBACK Callback);
#define gpio_set_pull_mode_StubWithCallback gpio_set_pull_mode_Stub
#define gpio_set_pull_mode_IgnoreArg_gpio_num() gpio_set_pull_mode_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_set_pull_mode_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_pull_mode_IgnoreArg_pull() gpio_set_pull_mode_CMockIgnoreArg_pull(__LINE__)
void gpio_set_pull_mode_CMockIgnoreArg_pull(UNITY_LINE_TYPE cmock_line);
#define gpio_wakeup_enable_IgnoreAndReturn(cmock_retval) gpio_wakeup_enable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_wakeup_enable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_wakeup_enable_StopIgnore() gpio_wakeup_enable_CMockStopIgnore()
void gpio_wakeup_enable_CMockStopIgnore(void);
#define gpio_wakeup_enable_ExpectAndReturn(gpio_num, intr_type, cmock_retval) gpio_wakeup_enable_CMockExpectAndReturn(__LINE__, gpio_num, intr_type, cmock_retval)
void gpio_wakeup_enable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_int_type_t intr_type, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_wakeup_enable_CALLBACK)(gpio_num_t gpio_num, gpio_int_type_t intr_type, int cmock_num_calls);
void gpio_wakeup_enable_AddCallback(CMOCK_gpio_wakeup_enable_CALLBACK Callback);
void gpio_wakeup_enable_Stub(CMOCK_gpio_wakeup_enable_CALLBACK Callback);
#define gpio_wakeup_enable_StubWithCallback gpio_wakeup_enable_Stub
#define gpio_wakeup_enable_IgnoreArg_gpio_num() gpio_wakeup_enable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_wakeup_enable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_wakeup_enable_IgnoreArg_intr_type() gpio_wakeup_enable_CMockIgnoreArg_intr_type(__LINE__)
void gpio_wakeup_enable_CMockIgnoreArg_intr_type(UNITY_LINE_TYPE cmock_line);
#define gpio_wakeup_disable_IgnoreAndReturn(cmock_retval) gpio_wakeup_disable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_wakeup_disable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_wakeup_disable_StopIgnore() gpio_wakeup_disable_CMockStopIgnore()
void gpio_wakeup_disable_CMockStopIgnore(void);
#define gpio_wakeup_disable_ExpectAndReturn(gpio_num, cmock_retval) gpio_wakeup_disable_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_wakeup_disable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_wakeup_disable_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_wakeup_disable_AddCallback(CMOCK_gpio_wakeup_disable_CALLBACK Callback);
void gpio_wakeup_disable_Stub(CMOCK_gpio_wakeup_disable_CALLBACK Callback);
#define gpio_wakeup_disable_StubWithCallback gpio_wakeup_disable_Stub
#define gpio_wakeup_disable_IgnoreArg_gpio_num() gpio_wakeup_disable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_wakeup_disable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_register_IgnoreAndReturn(cmock_retval) gpio_isr_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_isr_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_isr_register_StopIgnore() gpio_isr_register_CMockStopIgnore()
void gpio_isr_register_CMockStopIgnore(void);
#define gpio_isr_register_ExpectAndReturn(fn, arg, intr_alloc_flags, handle, cmock_retval) gpio_isr_register_CMockExpectAndReturn(__LINE__, fn, arg, intr_alloc_flags, handle, cmock_retval)
void gpio_isr_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, cmock_gpio_func_ptr1 fn, void* arg, int intr_alloc_flags, gpio_isr_handle_t* handle, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_isr_register_CALLBACK)(cmock_gpio_func_ptr1 fn, void* arg, int intr_alloc_flags, gpio_isr_handle_t* handle, int cmock_num_calls);
void gpio_isr_register_AddCallback(CMOCK_gpio_isr_register_CALLBACK Callback);
void gpio_isr_register_Stub(CMOCK_gpio_isr_register_CALLBACK Callback);
#define gpio_isr_register_StubWithCallback gpio_isr_register_Stub
#define gpio_isr_register_ExpectWithArrayAndReturn(fn, arg, arg_Depth, intr_alloc_flags, handle, handle_Depth, cmock_retval) gpio_isr_register_CMockExpectWithArrayAndReturn(__LINE__, fn, arg, arg_Depth, intr_alloc_flags, handle, handle_Depth, cmock_retval)
void gpio_isr_register_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, cmock_gpio_func_ptr1 fn, void* arg, int arg_Depth, int intr_alloc_flags, gpio_isr_handle_t* handle, int handle_Depth, esp_err_t cmock_to_return);
#define gpio_isr_register_ReturnThruPtr_arg(arg) gpio_isr_register_CMockReturnMemThruPtr_arg(__LINE__, arg, sizeof(void))
#define gpio_isr_register_ReturnArrayThruPtr_arg(arg, cmock_len) gpio_isr_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_len * sizeof(*arg))
#define gpio_isr_register_ReturnMemThruPtr_arg(arg, cmock_size) gpio_isr_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_size)
void gpio_isr_register_CMockReturnMemThruPtr_arg(UNITY_LINE_TYPE cmock_line, void* arg, size_t cmock_size);
#define gpio_isr_register_ReturnThruPtr_handle(handle) gpio_isr_register_CMockReturnMemThruPtr_handle(__LINE__, handle, sizeof(gpio_isr_handle_t))
#define gpio_isr_register_ReturnArrayThruPtr_handle(handle, cmock_len) gpio_isr_register_CMockReturnMemThruPtr_handle(__LINE__, handle, cmock_len * sizeof(*handle))
#define gpio_isr_register_ReturnMemThruPtr_handle(handle, cmock_size) gpio_isr_register_CMockReturnMemThruPtr_handle(__LINE__, handle, cmock_size)
void gpio_isr_register_CMockReturnMemThruPtr_handle(UNITY_LINE_TYPE cmock_line, gpio_isr_handle_t* handle, size_t cmock_size);
#define gpio_isr_register_IgnoreArg_fn() gpio_isr_register_CMockIgnoreArg_fn(__LINE__)
void gpio_isr_register_CMockIgnoreArg_fn(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_register_IgnoreArg_arg() gpio_isr_register_CMockIgnoreArg_arg(__LINE__)
void gpio_isr_register_CMockIgnoreArg_arg(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_register_IgnoreArg_intr_alloc_flags() gpio_isr_register_CMockIgnoreArg_intr_alloc_flags(__LINE__)
void gpio_isr_register_CMockIgnoreArg_intr_alloc_flags(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_register_IgnoreArg_handle() gpio_isr_register_CMockIgnoreArg_handle(__LINE__)
void gpio_isr_register_CMockIgnoreArg_handle(UNITY_LINE_TYPE cmock_line);
#define gpio_pullup_en_IgnoreAndReturn(cmock_retval) gpio_pullup_en_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_pullup_en_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_pullup_en_StopIgnore() gpio_pullup_en_CMockStopIgnore()
void gpio_pullup_en_CMockStopIgnore(void);
#define gpio_pullup_en_ExpectAndReturn(gpio_num, cmock_retval) gpio_pullup_en_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_pullup_en_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_pullup_en_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_pullup_en_AddCallback(CMOCK_gpio_pullup_en_CALLBACK Callback);
void gpio_pullup_en_Stub(CMOCK_gpio_pullup_en_CALLBACK Callback);
#define gpio_pullup_en_StubWithCallback gpio_pullup_en_Stub
#define gpio_pullup_en_IgnoreArg_gpio_num() gpio_pullup_en_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pullup_en_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pullup_dis_IgnoreAndReturn(cmock_retval) gpio_pullup_dis_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_pullup_dis_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_pullup_dis_StopIgnore() gpio_pullup_dis_CMockStopIgnore()
void gpio_pullup_dis_CMockStopIgnore(void);
#define gpio_pullup_dis_ExpectAndReturn(gpio_num, cmock_retval) gpio_pullup_dis_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_pullup_dis_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_pullup_dis_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_pullup_dis_AddCallback(CMOCK_gpio_pullup_dis_CALLBACK Callback);
void gpio_pullup_dis_Stub(CMOCK_gpio_pullup_dis_CALLBACK Callback);
#define gpio_pullup_dis_StubWithCallback gpio_pullup_dis_Stub
#define gpio_pullup_dis_IgnoreArg_gpio_num() gpio_pullup_dis_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pullup_dis_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pulldown_en_IgnoreAndReturn(cmock_retval) gpio_pulldown_en_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_pulldown_en_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_pulldown_en_StopIgnore() gpio_pulldown_en_CMockStopIgnore()
void gpio_pulldown_en_CMockStopIgnore(void);
#define gpio_pulldown_en_ExpectAndReturn(gpio_num, cmock_retval) gpio_pulldown_en_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_pulldown_en_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_pulldown_en_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_pulldown_en_AddCallback(CMOCK_gpio_pulldown_en_CALLBACK Callback);
void gpio_pulldown_en_Stub(CMOCK_gpio_pulldown_en_CALLBACK Callback);
#define gpio_pulldown_en_StubWithCallback gpio_pulldown_en_Stub
#define gpio_pulldown_en_IgnoreArg_gpio_num() gpio_pulldown_en_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pulldown_en_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_pulldown_dis_IgnoreAndReturn(cmock_retval) gpio_pulldown_dis_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_pulldown_dis_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_pulldown_dis_StopIgnore() gpio_pulldown_dis_CMockStopIgnore()
void gpio_pulldown_dis_CMockStopIgnore(void);
#define gpio_pulldown_dis_ExpectAndReturn(gpio_num, cmock_retval) gpio_pulldown_dis_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_pulldown_dis_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_pulldown_dis_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_pulldown_dis_AddCallback(CMOCK_gpio_pulldown_dis_CALLBACK Callback);
void gpio_pulldown_dis_Stub(CMOCK_gpio_pulldown_dis_CALLBACK Callback);
#define gpio_pulldown_dis_StubWithCallback gpio_pulldown_dis_Stub
#define gpio_pulldown_dis_IgnoreArg_gpio_num() gpio_pulldown_dis_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_pulldown_dis_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_install_isr_service_IgnoreAndReturn(cmock_retval) gpio_install_isr_service_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_install_isr_service_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_install_isr_service_StopIgnore() gpio_install_isr_service_CMockStopIgnore()
void gpio_install_isr_service_CMockStopIgnore(void);
#define gpio_install_isr_service_ExpectAndReturn(intr_alloc_flags, cmock_retval) gpio_install_isr_service_CMockExpectAndReturn(__LINE__, intr_alloc_flags, cmock_retval)
void gpio_install_isr_service_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int intr_alloc_flags, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_install_isr_service_CALLBACK)(int intr_alloc_flags, int cmock_num_calls);
void gpio_install_isr_service_AddCallback(CMOCK_gpio_install_isr_service_CALLBACK Callback);
void gpio_install_isr_service_Stub(CMOCK_gpio_install_isr_service_CALLBACK Callback);
#define gpio_install_isr_service_StubWithCallback gpio_install_isr_service_Stub
#define gpio_install_isr_service_IgnoreArg_intr_alloc_flags() gpio_install_isr_service_CMockIgnoreArg_intr_alloc_flags(__LINE__)
void gpio_install_isr_service_CMockIgnoreArg_intr_alloc_flags(UNITY_LINE_TYPE cmock_line);
#define gpio_uninstall_isr_service_Ignore() gpio_uninstall_isr_service_CMockIgnore()
void gpio_uninstall_isr_service_CMockIgnore(void);
#define gpio_uninstall_isr_service_StopIgnore() gpio_uninstall_isr_service_CMockStopIgnore()
void gpio_uninstall_isr_service_CMockStopIgnore(void);
#define gpio_uninstall_isr_service_Expect() gpio_uninstall_isr_service_CMockExpect(__LINE__)
void gpio_uninstall_isr_service_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_gpio_uninstall_isr_service_CALLBACK)(int cmock_num_calls);
void gpio_uninstall_isr_service_AddCallback(CMOCK_gpio_uninstall_isr_service_CALLBACK Callback);
void gpio_uninstall_isr_service_Stub(CMOCK_gpio_uninstall_isr_service_CALLBACK Callback);
#define gpio_uninstall_isr_service_StubWithCallback gpio_uninstall_isr_service_Stub
#define gpio_isr_handler_add_IgnoreAndReturn(cmock_retval) gpio_isr_handler_add_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_isr_handler_add_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_isr_handler_add_StopIgnore() gpio_isr_handler_add_CMockStopIgnore()
void gpio_isr_handler_add_CMockStopIgnore(void);
#define gpio_isr_handler_add_ExpectAndReturn(gpio_num, isr_handler, args, cmock_retval) gpio_isr_handler_add_CMockExpectAndReturn(__LINE__, gpio_num, isr_handler, args, cmock_retval)
void gpio_isr_handler_add_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_isr_t isr_handler, void* args, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_isr_handler_add_CALLBACK)(gpio_num_t gpio_num, gpio_isr_t isr_handler, void* args, int cmock_num_calls);
void gpio_isr_handler_add_AddCallback(CMOCK_gpio_isr_handler_add_CALLBACK Callback);
void gpio_isr_handler_add_Stub(CMOCK_gpio_isr_handler_add_CALLBACK Callback);
#define gpio_isr_handler_add_StubWithCallback gpio_isr_handler_add_Stub
#define gpio_isr_handler_add_ExpectWithArrayAndReturn(gpio_num, isr_handler, args, args_Depth, cmock_retval) gpio_isr_handler_add_CMockExpectWithArrayAndReturn(__LINE__, gpio_num, isr_handler, args, args_Depth, cmock_retval)
void gpio_isr_handler_add_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_isr_t isr_handler, void* args, int args_Depth, esp_err_t cmock_to_return);
#define gpio_isr_handler_add_ReturnThruPtr_args(args) gpio_isr_handler_add_CMockReturnMemThruPtr_args(__LINE__, args, sizeof(void))
#define gpio_isr_handler_add_ReturnArrayThruPtr_args(args, cmock_len) gpio_isr_handler_add_CMockReturnMemThruPtr_args(__LINE__, args, cmock_len * sizeof(*args))
#define gpio_isr_handler_add_ReturnMemThruPtr_args(args, cmock_size) gpio_isr_handler_add_CMockReturnMemThruPtr_args(__LINE__, args, cmock_size)
void gpio_isr_handler_add_CMockReturnMemThruPtr_args(UNITY_LINE_TYPE cmock_line, void* args, size_t cmock_size);
#define gpio_isr_handler_add_IgnoreArg_gpio_num() gpio_isr_handler_add_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_isr_handler_add_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_handler_add_IgnoreArg_isr_handler() gpio_isr_handler_add_CMockIgnoreArg_isr_handler(__LINE__)
void gpio_isr_handler_add_CMockIgnoreArg_isr_handler(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_handler_add_IgnoreArg_args() gpio_isr_handler_add_CMockIgnoreArg_args(__LINE__)
void gpio_isr_handler_add_CMockIgnoreArg_args(UNITY_LINE_TYPE cmock_line);
#define gpio_isr_handler_remove_IgnoreAndReturn(cmock_retval) gpio_isr_handler_remove_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_isr_handler_remove_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_isr_handler_remove_StopIgnore() gpio_isr_handler_remove_CMockStopIgnore()
void gpio_isr_handler_remove_CMockStopIgnore(void);
#define gpio_isr_handler_remove_ExpectAndReturn(gpio_num, cmock_retval) gpio_isr_handler_remove_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_isr_handler_remove_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_isr_handler_remove_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_isr_handler_remove_AddCallback(CMOCK_gpio_isr_handler_remove_CALLBACK Callback);
void gpio_isr_handler_remove_Stub(CMOCK_gpio_isr_handler_remove_CALLBACK Callback);
#define gpio_isr_handler_remove_StubWithCallback gpio_isr_handler_remove_Stub
#define gpio_isr_handler_remove_IgnoreArg_gpio_num() gpio_isr_handler_remove_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_isr_handler_remove_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_drive_capability_IgnoreAndReturn(cmock_retval) gpio_set_drive_capability_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_set_drive_capability_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_set_drive_capability_StopIgnore() gpio_set_drive_capability_CMockStopIgnore()
void gpio_set_drive_capability_CMockStopIgnore(void);
#define gpio_set_drive_capability_ExpectAndReturn(gpio_num, strength, cmock_retval) gpio_set_drive_capability_CMockExpectAndReturn(__LINE__, gpio_num, strength, cmock_retval)
void gpio_set_drive_capability_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_drive_cap_t strength, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_set_drive_capability_CALLBACK)(gpio_num_t gpio_num, gpio_drive_cap_t strength, int cmock_num_calls);
void gpio_set_drive_capability_AddCallback(CMOCK_gpio_set_drive_capability_CALLBACK Callback);
void gpio_set_drive_capability_Stub(CMOCK_gpio_set_drive_capability_CALLBACK Callback);
#define gpio_set_drive_capability_StubWithCallback gpio_set_drive_capability_Stub
#define gpio_set_drive_capability_IgnoreArg_gpio_num() gpio_set_drive_capability_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_set_drive_capability_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_set_drive_capability_IgnoreArg_strength() gpio_set_drive_capability_CMockIgnoreArg_strength(__LINE__)
void gpio_set_drive_capability_CMockIgnoreArg_strength(UNITY_LINE_TYPE cmock_line);
#define gpio_get_drive_capability_IgnoreAndReturn(cmock_retval) gpio_get_drive_capability_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_get_drive_capability_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_get_drive_capability_StopIgnore() gpio_get_drive_capability_CMockStopIgnore()
void gpio_get_drive_capability_CMockStopIgnore(void);
#define gpio_get_drive_capability_ExpectAndReturn(gpio_num, strength, cmock_retval) gpio_get_drive_capability_CMockExpectAndReturn(__LINE__, gpio_num, strength, cmock_retval)
void gpio_get_drive_capability_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_drive_cap_t* strength, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_get_drive_capability_CALLBACK)(gpio_num_t gpio_num, gpio_drive_cap_t* strength, int cmock_num_calls);
void gpio_get_drive_capability_AddCallback(CMOCK_gpio_get_drive_capability_CALLBACK Callback);
void gpio_get_drive_capability_Stub(CMOCK_gpio_get_drive_capability_CALLBACK Callback);
#define gpio_get_drive_capability_StubWithCallback gpio_get_drive_capability_Stub
#define gpio_get_drive_capability_ExpectWithArrayAndReturn(gpio_num, strength, strength_Depth, cmock_retval) gpio_get_drive_capability_CMockExpectWithArrayAndReturn(__LINE__, gpio_num, strength, strength_Depth, cmock_retval)
void gpio_get_drive_capability_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_drive_cap_t* strength, int strength_Depth, esp_err_t cmock_to_return);
#define gpio_get_drive_capability_ReturnThruPtr_strength(strength) gpio_get_drive_capability_CMockReturnMemThruPtr_strength(__LINE__, strength, sizeof(gpio_drive_cap_t))
#define gpio_get_drive_capability_ReturnArrayThruPtr_strength(strength, cmock_len) gpio_get_drive_capability_CMockReturnMemThruPtr_strength(__LINE__, strength, cmock_len * sizeof(*strength))
#define gpio_get_drive_capability_ReturnMemThruPtr_strength(strength, cmock_size) gpio_get_drive_capability_CMockReturnMemThruPtr_strength(__LINE__, strength, cmock_size)
void gpio_get_drive_capability_CMockReturnMemThruPtr_strength(UNITY_LINE_TYPE cmock_line, gpio_drive_cap_t* strength, size_t cmock_size);
#define gpio_get_drive_capability_IgnoreArg_gpio_num() gpio_get_drive_capability_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_get_drive_capability_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_get_drive_capability_IgnoreArg_strength() gpio_get_drive_capability_CMockIgnoreArg_strength(__LINE__)
void gpio_get_drive_capability_CMockIgnoreArg_strength(UNITY_LINE_TYPE cmock_line);
#define gpio_hold_en_IgnoreAndReturn(cmock_retval) gpio_hold_en_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_hold_en_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_hold_en_StopIgnore() gpio_hold_en_CMockStopIgnore()
void gpio_hold_en_CMockStopIgnore(void);
#define gpio_hold_en_ExpectAndReturn(gpio_num, cmock_retval) gpio_hold_en_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_hold_en_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_hold_en_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_hold_en_AddCallback(CMOCK_gpio_hold_en_CALLBACK Callback);
void gpio_hold_en_Stub(CMOCK_gpio_hold_en_CALLBACK Callback);
#define gpio_hold_en_StubWithCallback gpio_hold_en_Stub
#define gpio_hold_en_IgnoreArg_gpio_num() gpio_hold_en_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_hold_en_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_hold_dis_IgnoreAndReturn(cmock_retval) gpio_hold_dis_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_hold_dis_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_hold_dis_StopIgnore() gpio_hold_dis_CMockStopIgnore()
void gpio_hold_dis_CMockStopIgnore(void);
#define gpio_hold_dis_ExpectAndReturn(gpio_num, cmock_retval) gpio_hold_dis_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_hold_dis_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_hold_dis_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_hold_dis_AddCallback(CMOCK_gpio_hold_dis_CALLBACK Callback);
void gpio_hold_dis_Stub(CMOCK_gpio_hold_dis_CALLBACK Callback);
#define gpio_hold_dis_StubWithCallback gpio_hold_dis_Stub
#define gpio_hold_dis_IgnoreArg_gpio_num() gpio_hold_dis_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_hold_dis_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_deep_sleep_hold_en_Ignore() gpio_deep_sleep_hold_en_CMockIgnore()
void gpio_deep_sleep_hold_en_CMockIgnore(void);
#define gpio_deep_sleep_hold_en_StopIgnore() gpio_deep_sleep_hold_en_CMockStopIgnore()
void gpio_deep_sleep_hold_en_CMockStopIgnore(void);
#define gpio_deep_sleep_hold_en_Expect() gpio_deep_sleep_hold_en_CMockExpect(__LINE__)
void gpio_deep_sleep_hold_en_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_gpio_deep_sleep_hold_en_CALLBACK)(int cmock_num_calls);
void gpio_deep_sleep_hold_en_AddCallback(CMOCK_gpio_deep_sleep_hold_en_CALLBACK Callback);
void gpio_deep_sleep_hold_en_Stub(CMOCK_gpio_deep_sleep_hold_en_CALLBACK Callback);
#define gpio_deep_sleep_hold_en_StubWithCallback gpio_deep_sleep_hold_en_Stub
#define gpio_deep_sleep_hold_dis_Ignore() gpio_deep_sleep_hold_dis_CMockIgnore()
void gpio_deep_sleep_hold_dis_CMockIgnore(void);
#define gpio_deep_sleep_hold_dis_StopIgnore() gpio_deep_sleep_hold_dis_CMockStopIgnore()
void gpio_deep_sleep_hold_dis_CMockStopIgnore(void);
#define gpio_deep_sleep_hold_dis_Expect() gpio_deep_sleep_hold_dis_CMockExpect(__LINE__)
void gpio_deep_sleep_hold_dis_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_gpio_deep_sleep_hold_dis_CALLBACK)(int cmock_num_calls);
void gpio_deep_sleep_hold_dis_AddCallback(CMOCK_gpio_deep_sleep_hold_dis_CALLBACK Callback);
void gpio_deep_sleep_hold_dis_Stub(CMOCK_gpio_deep_sleep_hold_dis_CALLBACK Callback);
#define gpio_deep_sleep_hold_dis_StubWithCallback gpio_deep_sleep_hold_dis_Stub
#define gpio_iomux_in_Ignore() gpio_iomux_in_CMockIgnore()
void gpio_iomux_in_CMockIgnore(void);
#define gpio_iomux_in_StopIgnore() gpio_iomux_in_CMockStopIgnore()
void gpio_iomux_in_CMockStopIgnore(void);
#define gpio_iomux_in_Expect(gpio_num, signal_idx) gpio_iomux_in_CMockExpect(__LINE__, gpio_num, signal_idx)
void gpio_iomux_in_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t gpio_num, uint32_t signal_idx);
typedef void (* CMOCK_gpio_iomux_in_CALLBACK)(uint32_t gpio_num, uint32_t signal_idx, int cmock_num_calls);
void gpio_iomux_in_AddCallback(CMOCK_gpio_iomux_in_CALLBACK Callback);
void gpio_iomux_in_Stub(CMOCK_gpio_iomux_in_CALLBACK Callback);
#define gpio_iomux_in_StubWithCallback gpio_iomux_in_Stub
#define gpio_iomux_in_IgnoreArg_gpio_num() gpio_iomux_in_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_iomux_in_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_iomux_in_IgnoreArg_signal_idx() gpio_iomux_in_CMockIgnoreArg_signal_idx(__LINE__)
void gpio_iomux_in_CMockIgnoreArg_signal_idx(UNITY_LINE_TYPE cmock_line);
#define gpio_iomux_out_Ignore() gpio_iomux_out_CMockIgnore()
void gpio_iomux_out_CMockIgnore(void);
#define gpio_iomux_out_StopIgnore() gpio_iomux_out_CMockStopIgnore()
void gpio_iomux_out_CMockStopIgnore(void);
#define gpio_iomux_out_Expect(gpio_num, func, oen_inv) gpio_iomux_out_CMockExpect(__LINE__, gpio_num, func, oen_inv)
void gpio_iomux_out_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t gpio_num, int func, bool oen_inv);
typedef void (* CMOCK_gpio_iomux_out_CALLBACK)(uint8_t gpio_num, int func, bool oen_inv, int cmock_num_calls);
void gpio_iomux_out_AddCallback(CMOCK_gpio_iomux_out_CALLBACK Callback);
void gpio_iomux_out_Stub(CMOCK_gpio_iomux_out_CALLBACK Callback);
#define gpio_iomux_out_StubWithCallback gpio_iomux_out_Stub
#define gpio_iomux_out_IgnoreArg_gpio_num() gpio_iomux_out_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_iomux_out_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_iomux_out_IgnoreArg_func() gpio_iomux_out_CMockIgnoreArg_func(__LINE__)
void gpio_iomux_out_CMockIgnoreArg_func(UNITY_LINE_TYPE cmock_line);
#define gpio_iomux_out_IgnoreArg_oen_inv() gpio_iomux_out_CMockIgnoreArg_oen_inv(__LINE__)
void gpio_iomux_out_CMockIgnoreArg_oen_inv(UNITY_LINE_TYPE cmock_line);
#define gpio_force_hold_all_IgnoreAndReturn(cmock_retval) gpio_force_hold_all_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_force_hold_all_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_force_hold_all_StopIgnore() gpio_force_hold_all_CMockStopIgnore()
void gpio_force_hold_all_CMockStopIgnore(void);
#define gpio_force_hold_all_ExpectAndReturn(cmock_retval) gpio_force_hold_all_CMockExpectAndReturn(__LINE__, cmock_retval)
void gpio_force_hold_all_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_force_hold_all_CALLBACK)(int cmock_num_calls);
void gpio_force_hold_all_AddCallback(CMOCK_gpio_force_hold_all_CALLBACK Callback);
void gpio_force_hold_all_Stub(CMOCK_gpio_force_hold_all_CALLBACK Callback);
#define gpio_force_hold_all_StubWithCallback gpio_force_hold_all_Stub
#define gpio_force_unhold_all_IgnoreAndReturn(cmock_retval) gpio_force_unhold_all_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_force_unhold_all_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_force_unhold_all_StopIgnore() gpio_force_unhold_all_CMockStopIgnore()
void gpio_force_unhold_all_CMockStopIgnore(void);
#define gpio_force_unhold_all_ExpectAndReturn(cmock_retval) gpio_force_unhold_all_CMockExpectAndReturn(__LINE__, cmock_retval)
void gpio_force_unhold_all_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_force_unhold_all_CALLBACK)(int cmock_num_calls);
void gpio_force_unhold_all_AddCallback(CMOCK_gpio_force_unhold_all_CALLBACK Callback);
void gpio_force_unhold_all_Stub(CMOCK_gpio_force_unhold_all_CALLBACK Callback);
#define gpio_force_unhold_all_StubWithCallback gpio_force_unhold_all_Stub
#define gpio_sleep_sel_en_IgnoreAndReturn(cmock_retval) gpio_sleep_sel_en_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_sleep_sel_en_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_sleep_sel_en_StopIgnore() gpio_sleep_sel_en_CMockStopIgnore()
void gpio_sleep_sel_en_CMockStopIgnore(void);
#define gpio_sleep_sel_en_ExpectAndReturn(gpio_num, cmock_retval) gpio_sleep_sel_en_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_sleep_sel_en_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_sleep_sel_en_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_sleep_sel_en_AddCallback(CMOCK_gpio_sleep_sel_en_CALLBACK Callback);
void gpio_sleep_sel_en_Stub(CMOCK_gpio_sleep_sel_en_CALLBACK Callback);
#define gpio_sleep_sel_en_StubWithCallback gpio_sleep_sel_en_Stub
#define gpio_sleep_sel_en_IgnoreArg_gpio_num() gpio_sleep_sel_en_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_sleep_sel_en_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_sleep_sel_dis_IgnoreAndReturn(cmock_retval) gpio_sleep_sel_dis_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_sleep_sel_dis_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_sleep_sel_dis_StopIgnore() gpio_sleep_sel_dis_CMockStopIgnore()
void gpio_sleep_sel_dis_CMockStopIgnore(void);
#define gpio_sleep_sel_dis_ExpectAndReturn(gpio_num, cmock_retval) gpio_sleep_sel_dis_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_sleep_sel_dis_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_sleep_sel_dis_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_sleep_sel_dis_AddCallback(CMOCK_gpio_sleep_sel_dis_CALLBACK Callback);
void gpio_sleep_sel_dis_Stub(CMOCK_gpio_sleep_sel_dis_CALLBACK Callback);
#define gpio_sleep_sel_dis_StubWithCallback gpio_sleep_sel_dis_Stub
#define gpio_sleep_sel_dis_IgnoreArg_gpio_num() gpio_sleep_sel_dis_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_sleep_sel_dis_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_sleep_set_direction_IgnoreAndReturn(cmock_retval) gpio_sleep_set_direction_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_sleep_set_direction_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_sleep_set_direction_StopIgnore() gpio_sleep_set_direction_CMockStopIgnore()
void gpio_sleep_set_direction_CMockStopIgnore(void);
#define gpio_sleep_set_direction_ExpectAndReturn(gpio_num, mode, cmock_retval) gpio_sleep_set_direction_CMockExpectAndReturn(__LINE__, gpio_num, mode, cmock_retval)
void gpio_sleep_set_direction_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_mode_t mode, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_sleep_set_direction_CALLBACK)(gpio_num_t gpio_num, gpio_mode_t mode, int cmock_num_calls);
void gpio_sleep_set_direction_AddCallback(CMOCK_gpio_sleep_set_direction_CALLBACK Callback);
void gpio_sleep_set_direction_Stub(CMOCK_gpio_sleep_set_direction_CALLBACK Callback);
#define gpio_sleep_set_direction_StubWithCallback gpio_sleep_set_direction_Stub
#define gpio_sleep_set_direction_IgnoreArg_gpio_num() gpio_sleep_set_direction_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_sleep_set_direction_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_sleep_set_direction_IgnoreArg_mode() gpio_sleep_set_direction_CMockIgnoreArg_mode(__LINE__)
void gpio_sleep_set_direction_CMockIgnoreArg_mode(UNITY_LINE_TYPE cmock_line);
#define gpio_sleep_set_pull_mode_IgnoreAndReturn(cmock_retval) gpio_sleep_set_pull_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_sleep_set_pull_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_sleep_set_pull_mode_StopIgnore() gpio_sleep_set_pull_mode_CMockStopIgnore()
void gpio_sleep_set_pull_mode_CMockStopIgnore(void);
#define gpio_sleep_set_pull_mode_ExpectAndReturn(gpio_num, pull, cmock_retval) gpio_sleep_set_pull_mode_CMockExpectAndReturn(__LINE__, gpio_num, pull, cmock_retval)
void gpio_sleep_set_pull_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_pull_mode_t pull, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_sleep_set_pull_mode_CALLBACK)(gpio_num_t gpio_num, gpio_pull_mode_t pull, int cmock_num_calls);
void gpio_sleep_set_pull_mode_AddCallback(CMOCK_gpio_sleep_set_pull_mode_CALLBACK Callback);
void gpio_sleep_set_pull_mode_Stub(CMOCK_gpio_sleep_set_pull_mode_CALLBACK Callback);
#define gpio_sleep_set_pull_mode_StubWithCallback gpio_sleep_set_pull_mode_Stub
#define gpio_sleep_set_pull_mode_IgnoreArg_gpio_num() gpio_sleep_set_pull_mode_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_sleep_set_pull_mode_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_sleep_set_pull_mode_IgnoreArg_pull() gpio_sleep_set_pull_mode_CMockIgnoreArg_pull(__LINE__)
void gpio_sleep_set_pull_mode_CMockIgnoreArg_pull(UNITY_LINE_TYPE cmock_line);
#define gpio_deep_sleep_wakeup_enable_IgnoreAndReturn(cmock_retval) gpio_deep_sleep_wakeup_enable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_deep_sleep_wakeup_enable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_deep_sleep_wakeup_enable_StopIgnore() gpio_deep_sleep_wakeup_enable_CMockStopIgnore()
void gpio_deep_sleep_wakeup_enable_CMockStopIgnore(void);
#define gpio_deep_sleep_wakeup_enable_ExpectAndReturn(gpio_num, intr_type, cmock_retval) gpio_deep_sleep_wakeup_enable_CMockExpectAndReturn(__LINE__, gpio_num, intr_type, cmock_retval)
void gpio_deep_sleep_wakeup_enable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, gpio_int_type_t intr_type, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_deep_sleep_wakeup_enable_CALLBACK)(gpio_num_t gpio_num, gpio_int_type_t intr_type, int cmock_num_calls);
void gpio_deep_sleep_wakeup_enable_AddCallback(CMOCK_gpio_deep_sleep_wakeup_enable_CALLBACK Callback);
void gpio_deep_sleep_wakeup_enable_Stub(CMOCK_gpio_deep_sleep_wakeup_enable_CALLBACK Callback);
#define gpio_deep_sleep_wakeup_enable_StubWithCallback gpio_deep_sleep_wakeup_enable_Stub
#define gpio_deep_sleep_wakeup_enable_IgnoreArg_gpio_num() gpio_deep_sleep_wakeup_enable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_deep_sleep_wakeup_enable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define gpio_deep_sleep_wakeup_enable_IgnoreArg_intr_type() gpio_deep_sleep_wakeup_enable_CMockIgnoreArg_intr_type(__LINE__)
void gpio_deep_sleep_wakeup_enable_CMockIgnoreArg_intr_type(UNITY_LINE_TYPE cmock_line);
#define gpio_deep_sleep_wakeup_disable_IgnoreAndReturn(cmock_retval) gpio_deep_sleep_wakeup_disable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpio_deep_sleep_wakeup_disable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define gpio_deep_sleep_wakeup_disable_StopIgnore() gpio_deep_sleep_wakeup_disable_CMockStopIgnore()
void gpio_deep_sleep_wakeup_disable_CMockStopIgnore(void);
#define gpio_deep_sleep_wakeup_disable_ExpectAndReturn(gpio_num, cmock_retval) gpio_deep_sleep_wakeup_disable_CMockExpectAndReturn(__LINE__, gpio_num, cmock_retval)
void gpio_deep_sleep_wakeup_disable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpio_num_t gpio_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_gpio_deep_sleep_wakeup_disable_CALLBACK)(gpio_num_t gpio_num, int cmock_num_calls);
void gpio_deep_sleep_wakeup_disable_AddCallback(CMOCK_gpio_deep_sleep_wakeup_disable_CALLBACK Callback);
void gpio_deep_sleep_wakeup_disable_Stub(CMOCK_gpio_deep_sleep_wakeup_disable_CALLBACK Callback);
#define gpio_deep_sleep_wakeup_disable_StubWithCallback gpio_deep_sleep_wakeup_disable_Stub
#define gpio_deep_sleep_wakeup_disable_IgnoreArg_gpio_num() gpio_deep_sleep_wakeup_disable_CMockIgnoreArg_gpio_num(__LINE__)
void gpio_deep_sleep_wakeup_disable_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LEDC_H
#define _MOCK_LEDC_H

#include "unity.h"
#include "ledc.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ledc_Init(void);
void mock_ledc_Destroy(void);
void mock_ledc_Verify(void);


typedef void(*cmock_ledc_func_ptr1)(void*);


#define ledc_channel_config_IgnoreAndReturn(cmock_retval) ledc_channel_config_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_channel_config_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_channel_config_StopIgnore() ledc_channel_config_CMockStopIgnore()
void ledc_channel_config_CMockStopIgnore(void);
#define ledc_channel_config_ExpectAndReturn(ledc_conf, cmock_retval) ledc_channel_config_CMockExpectAndReturn(__LINE__, ledc_conf, cmock_retval)
void ledc_channel_config_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ledc_channel_config_t* ledc_conf, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_channel_config_CALLBACK)(const ledc_channel_config_t* ledc_conf, int cmock_num_calls);
void ledc_channel_config_AddCallback(CMOCK_ledc_channel_config_CALLBACK Callback);
void ledc_channel_config_Stub(CMOCK_ledc_channel_config_CALLBACK Callback);
#define ledc_channel_config_StubWithCallback ledc_channel_config_Stub
#define ledc_channel_config_ExpectWithArrayAndReturn(ledc_conf, ledc_conf_Depth, cmock_retval) ledc_channel_config_CMockExpectWithArrayAndReturn(__LINE__, ledc_conf, ledc_conf_Depth, cmock_retval)
void ledc_channel_config_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ledc_channel_config_t* ledc_conf, int ledc_conf_Depth, esp_err_t cmock_to_return);
#define ledc_channel_config_IgnoreArg_ledc_conf() ledc_channel_config_CMockIgnoreArg_ledc_conf(__LINE__)
void ledc_channel_config_CMockIgnoreArg_ledc_conf(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_config_IgnoreAndReturn(cmock_retval) ledc_timer_config_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_timer_config_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_timer_config_StopIgnore() ledc_timer_config_CMockStopIgnore()
void ledc_timer_config_CMockStopIgnore(void);
#define ledc_timer_config_ExpectAndReturn(timer_conf, cmock_retval) ledc_timer_config_CMockExpectAndReturn(__LINE__, timer_conf, cmock_retval)
void ledc_timer_config_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const ledc_timer_config_t* timer_conf, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_timer_config_CALLBACK)(const ledc_timer_config_t* timer_conf, int cmock_num_calls);
void ledc_timer_config_AddCallback(CMOCK_ledc_timer_config_CALLBACK Callback);
void ledc_timer_config_Stub(CMOCK_ledc_timer_config_CALLBACK Callback);
#define ledc_timer_config_StubWithCallback ledc_timer_config_Stub
#define ledc_timer_config_ExpectWithArrayAndReturn(timer_conf, timer_conf_Depth, cmock_retval) ledc_timer_config_CMockExpectWithArrayAndReturn(__LINE__, timer_conf, timer_conf_Depth, cmock_retval)
void ledc_timer_config_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const ledc_timer_config_t* timer_conf, int timer_conf_Depth, esp_err_t cmock_to_return);
#define ledc_timer_config_IgnoreArg_timer_conf() ledc_timer_config_CMockIgnoreArg_timer_conf(__LINE__)
void ledc_timer_config_CMockIgnoreArg_timer_conf(UNITY_LINE_TYPE cmock_line);
#define ledc_update_duty_IgnoreAndReturn(cmock_retval) ledc_update_duty_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_update_duty_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_update_duty_StopIgnore() ledc_update_duty_CMockStopIgnore()
void ledc_update_duty_CMockStopIgnore(void);
#define ledc_update_duty_ExpectAndReturn(speed_mode, channel, cmock_retval) ledc_update_duty_CMockExpectAndReturn(__LINE__, speed_mode, channel, cmock_retval)
void ledc_update_duty_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_update_duty_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, int cmock_num_calls);
void ledc_update_duty_AddCallback(CMOCK_ledc_update_duty_CALLBACK Callback);
void ledc_update_duty_Stub(CMOCK_ledc_update_duty_CALLBACK Callback);
#define ledc_update_duty_StubWithCallback ledc_update_duty_Stub
#define ledc_update_duty_IgnoreArg_speed_mode() ledc_update_duty_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_update_duty_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_update_duty_IgnoreArg_channel() ledc_update_duty_CMockIgnoreArg_channel(__LINE__)
void ledc_update_duty_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_pin_IgnoreAndReturn(cmock_retval) ledc_set_pin_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_pin_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_pin_StopIgnore() ledc_set_pin_CMockStopIgnore()
void ledc_set_pin_CMockStopIgnore(void);
#define ledc_set_pin_ExpectAndReturn(gpio_num, speed_mode, ledc_channel, cmock_retval) ledc_set_pin_CMockExpectAndReturn(__LINE__, gpio_num, speed_mode, ledc_channel, cmock_retval)
void ledc_set_pin_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int gpio_num, ledc_mode_t speed_mode, ledc_channel_t ledc_channel, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_pin_CALLBACK)(int gpio_num, ledc_mode_t speed_mode, ledc_channel_t ledc_channel, int cmock_num_calls);
void ledc_set_pin_AddCallback(CMOCK_ledc_set_pin_CALLBACK Callback);
void ledc_set_pin_Stub(CMOCK_ledc_set_pin_CALLBACK Callback);
#define ledc_set_pin_StubWithCallback ledc_set_pin_Stub
#define ledc_set_pin_IgnoreArg_gpio_num() ledc_set_pin_CMockIgnoreArg_gpio_num(__LINE__)
void ledc_set_pin_CMockIgnoreArg_gpio_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_pin_IgnoreArg_speed_mode() ledc_set_pin_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_pin_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_pin_IgnoreArg_ledc_channel() ledc_set_pin_CMockIgnoreArg_ledc_channel(__LINE__)
void ledc_set_pin_CMockIgnoreArg_ledc_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_stop_IgnoreAndReturn(cmock_retval) ledc_stop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_stop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_stop_StopIgnore() ledc_stop_CMockStopIgnore()
void ledc_stop_CMockStopIgnore(void);
#define ledc_stop_ExpectAndReturn(speed_mode, channel, idle_level, cmock_retval) ledc_stop_CMockExpectAndReturn(__LINE__, speed_mode, channel, idle_level, cmock_retval)
void ledc_stop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t idle_level, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_stop_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t idle_level, int cmock_num_calls);
void ledc_stop_AddCallback(CMOCK_ledc_stop_CALLBACK Callback);
void ledc_stop_Stub(CMOCK_ledc_stop_CALLBACK Callback);
#define ledc_stop_StubWithCallback ledc_stop_Stub
#define ledc_stop_IgnoreArg_speed_mode() ledc_stop_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_stop_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_stop_IgnoreArg_channel() ledc_stop_CMockIgnoreArg_channel(__LINE__)
void ledc_stop_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_stop_IgnoreArg_idle_level() ledc_stop_CMockIgnoreArg_idle_level(__LINE__)
void ledc_stop_CMockIgnoreArg_idle_level(UNITY_LINE_TYPE cmock_line);
#define ledc_set_freq_IgnoreAndReturn(cmock_retval) ledc_set_freq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_freq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_freq_StopIgnore() ledc_set_freq_CMockStopIgnore()
void ledc_set_freq_CMockStopIgnore(void);
#define ledc_set_freq_ExpectAndReturn(speed_mode, timer_num, freq_hz, cmock_retval) ledc_set_freq_CMockExpectAndReturn(__LINE__, speed_mode, timer_num, freq_hz, cmock_retval)
void ledc_set_freq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_timer_t timer_num, uint32_t freq_hz, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_freq_CALLBACK)(ledc_mode_t speed_mode, ledc_timer_t timer_num, uint32_t freq_hz, int cmock_num_calls);
void ledc_set_freq_AddCallback(CMOCK_ledc_set_freq_CALLBACK Callback);
void ledc_set_freq_Stub(CMOCK_ledc_set_freq_CALLBACK Callback);
#define ledc_set_freq_StubWithCallback ledc_set_freq_Stub
#define ledc_set_freq_IgnoreArg_speed_mode() ledc_set_freq_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_freq_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_freq_IgnoreArg_timer_num() ledc_set_freq_CMockIgnoreArg_timer_num(__LINE__)
void ledc_set_freq_CMockIgnoreArg_timer_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_freq_IgnoreArg_freq_hz() ledc_set_freq_CMockIgnoreArg_freq_hz(__LINE__)
void ledc_set_freq_CMockIgnoreArg_freq_hz(UNITY_LINE_TYPE cmock_line);
#define ledc_get_freq_IgnoreAndReturn(cmock_retval) ledc_get_freq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_get_freq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define ledc_get_freq_StopIgnore() ledc_get_freq_CMockStopIgnore()
void ledc_get_freq_CMockStopIgnore(void);
#define ledc_get_freq_ExpectAndReturn(speed_mode, timer_num, cmock_retval) ledc_get_freq_CMockExpectAndReturn(__LINE__, speed_mode, timer_num, cmock_retval)
void ledc_get_freq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_timer_t timer_num, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_ledc_get_freq_CALLBACK)(ledc_mode_t speed_mode, ledc_timer_t timer_num, int cmock_num_calls);
void ledc_get_freq_AddCallback(CMOCK_ledc_get_freq_CALLBACK Callback);
void ledc_get_freq_Stub(CMOCK_ledc_get_freq_CALLBACK Callback);
#define ledc_get_freq_StubWithCallback ledc_get_freq_Stub
#define ledc_get_freq_IgnoreArg_speed_mode() ledc_get_freq_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_get_freq_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_get_freq_IgnoreArg_timer_num() ledc_get_freq_CMockIgnoreArg_timer_num(__LINE__)
void ledc_get_freq_CMockIgnoreArg_timer_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_with_hpoint_IgnoreAndReturn(cmock_retval) ledc_set_duty_with_hpoint_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_duty_with_hpoint_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_duty_with_hpoint_StopIgnore() ledc_set_duty_with_hpoint_CMockStopIgnore()
void ledc_set_duty_with_hpoint_CMockStopIgnore(void);
#define ledc_set_duty_with_hpoint_ExpectAndReturn(speed_mode, channel, duty, hpoint, cmock_retval) ledc_set_duty_with_hpoint_CMockExpectAndReturn(__LINE__, speed_mode, channel, duty, hpoint, cmock_retval)
void ledc_set_duty_with_hpoint_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, uint32_t hpoint, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_duty_with_hpoint_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, uint32_t hpoint, int cmock_num_calls);
void ledc_set_duty_with_hpoint_AddCallback(CMOCK_ledc_set_duty_with_hpoint_CALLBACK Callback);
void ledc_set_duty_with_hpoint_Stub(CMOCK_ledc_set_duty_with_hpoint_CALLBACK Callback);
#define ledc_set_duty_with_hpoint_StubWithCallback ledc_set_duty_with_hpoint_Stub
#define ledc_set_duty_with_hpoint_IgnoreArg_speed_mode() ledc_set_duty_with_hpoint_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_duty_with_hpoint_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_with_hpoint_IgnoreArg_channel() ledc_set_duty_with_hpoint_CMockIgnoreArg_channel(__LINE__)
void ledc_set_duty_with_hpoint_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_with_hpoint_IgnoreArg_duty() ledc_set_duty_with_hpoint_CMockIgnoreArg_duty(__LINE__)
void ledc_set_duty_with_hpoint_CMockIgnoreArg_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_with_hpoint_IgnoreArg_hpoint() ledc_set_duty_with_hpoint_CMockIgnoreArg_hpoint(__LINE__)
void ledc_set_duty_with_hpoint_CMockIgnoreArg_hpoint(UNITY_LINE_TYPE cmock_line);
#define ledc_get_hpoint_IgnoreAndReturn(cmock_retval) ledc_get_hpoint_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_get_hpoint_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ledc_get_hpoint_StopIgnore() ledc_get_hpoint_CMockStopIgnore()
void ledc_get_hpoint_CMockStopIgnore(void);
#define ledc_get_hpoint_ExpectAndReturn(speed_mode, channel, cmock_retval) ledc_get_hpoint_CMockExpectAndReturn(__LINE__, speed_mode, channel, cmock_retval)
void ledc_get_hpoint_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, int cmock_to_return);
typedef int (* CMOCK_ledc_get_hpoint_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, int cmock_num_calls);
void ledc_get_hpoint_AddCallback(CMOCK_ledc_get_hpoint_CALLBACK Callback);
void ledc_get_hpoint_Stub(CMOCK_ledc_get_hpoint_CALLBACK Callback);
#define ledc_get_hpoint_StubWithCallback ledc_get_hpoint_Stub
#define ledc_get_hpoint_IgnoreArg_speed_mode() ledc_get_hpoint_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_get_hpoint_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_get_hpoint_IgnoreArg_channel() ledc_get_hpoint_CMockIgnoreArg_channel(__LINE__)
void ledc_get_hpoint_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_IgnoreAndReturn(cmock_retval) ledc_set_duty_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_duty_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_duty_StopIgnore() ledc_set_duty_CMockStopIgnore()
void ledc_set_duty_CMockStopIgnore(void);
#define ledc_set_duty_ExpectAndReturn(speed_mode, channel, duty, cmock_retval) ledc_set_duty_CMockExpectAndReturn(__LINE__, speed_mode, channel, duty, cmock_retval)
void ledc_set_duty_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_duty_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, int cmock_num_calls);
void ledc_set_duty_AddCallback(CMOCK_ledc_set_duty_CALLBACK Callback);
void ledc_set_duty_Stub(CMOCK_ledc_set_duty_CALLBACK Callback);
#define ledc_set_duty_StubWithCallback ledc_set_duty_Stub
#define ledc_set_duty_IgnoreArg_speed_mode() ledc_set_duty_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_duty_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_IgnoreArg_channel() ledc_set_duty_CMockIgnoreArg_channel(__LINE__)
void ledc_set_duty_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_IgnoreArg_duty() ledc_set_duty_CMockIgnoreArg_duty(__LINE__)
void ledc_set_duty_CMockIgnoreArg_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_get_duty_IgnoreAndReturn(cmock_retval) ledc_get_duty_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_get_duty_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define ledc_get_duty_StopIgnore() ledc_get_duty_CMockStopIgnore()
void ledc_get_duty_CMockStopIgnore(void);
#define ledc_get_duty_ExpectAndReturn(speed_mode, channel, cmock_retval) ledc_get_duty_CMockExpectAndReturn(__LINE__, speed_mode, channel, cmock_retval)
void ledc_get_duty_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_ledc_get_duty_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, int cmock_num_calls);
void ledc_get_duty_AddCallback(CMOCK_ledc_get_duty_CALLBACK Callback);
void ledc_get_duty_Stub(CMOCK_ledc_get_duty_CALLBACK Callback);
#define ledc_get_duty_StubWithCallback ledc_get_duty_Stub
#define ledc_get_duty_IgnoreArg_speed_mode() ledc_get_duty_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_get_duty_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_get_duty_IgnoreArg_channel() ledc_get_duty_CMockIgnoreArg_channel(__LINE__)
void ledc_get_duty_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreAndReturn(cmock_retval) ledc_set_fade_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_fade_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_fade_StopIgnore() ledc_set_fade_CMockStopIgnore()
void ledc_set_fade_CMockStopIgnore(void);
#define ledc_set_fade_ExpectAndReturn(speed_mode, channel, duty, fade_direction, step_num, duty_cycle_num, duty_scale, cmock_retval) ledc_set_fade_CMockExpectAndReturn(__LINE__, speed_mode, channel, duty, fade_direction, step_num, duty_cycle_num, duty_scale, cmock_retval)
void ledc_set_fade_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, ledc_duty_direction_t fade_direction, uint32_t step_num, uint32_t duty_cycle_num, uint32_t duty_scale, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_fade_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, ledc_duty_direction_t fade_direction, uint32_t step_num, uint32_t duty_cycle_num, uint32_t duty_scale, int cmock_num_calls);
void ledc_set_fade_AddCallback(CMOCK_ledc_set_fade_CALLBACK Callback);
void ledc_set_fade_Stub(CMOCK_ledc_set_fade_CALLBACK Callback);
#define ledc_set_fade_StubWithCallback ledc_set_fade_Stub
#define ledc_set_fade_IgnoreArg_speed_mode() ledc_set_fade_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_fade_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreArg_channel() ledc_set_fade_CMockIgnoreArg_channel(__LINE__)
void ledc_set_fade_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreArg_duty() ledc_set_fade_CMockIgnoreArg_duty(__LINE__)
void ledc_set_fade_CMockIgnoreArg_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreArg_fade_direction() ledc_set_fade_CMockIgnoreArg_fade_direction(__LINE__)
void ledc_set_fade_CMockIgnoreArg_fade_direction(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreArg_step_num() ledc_set_fade_CMockIgnoreArg_step_num(__LINE__)
void ledc_set_fade_CMockIgnoreArg_step_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreArg_duty_cycle_num() ledc_set_fade_CMockIgnoreArg_duty_cycle_num(__LINE__)
void ledc_set_fade_CMockIgnoreArg_duty_cycle_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_IgnoreArg_duty_scale() ledc_set_fade_CMockIgnoreArg_duty_scale(__LINE__)
void ledc_set_fade_CMockIgnoreArg_duty_scale(UNITY_LINE_TYPE cmock_line);
#define ledc_isr_register_IgnoreAndReturn(cmock_retval) ledc_isr_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_isr_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_isr_register_StopIgnore() ledc_isr_register_CMockStopIgnore()
void ledc_isr_register_CMockStopIgnore(void);
#define ledc_isr_register_ExpectAndReturn(fn, arg, intr_alloc_flags, handle, cmock_retval) ledc_isr_register_CMockExpectAndReturn(__LINE__, fn, arg, intr_alloc_flags, handle, cmock_retval)
void ledc_isr_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, cmock_ledc_func_ptr1 fn, void* arg, int intr_alloc_flags, ledc_isr_handle_t* handle, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_isr_register_CALLBACK)(cmock_ledc_func_ptr1 fn, void* arg, int intr_alloc_flags, ledc_isr_handle_t* handle, int cmock_num_calls);
void ledc_isr_register_AddCallback(CMOCK_ledc_isr_register_CALLBACK Callback);
void ledc_isr_register_Stub(CMOCK_ledc_isr_register_CALLBACK Callback);
#define ledc_isr_register_StubWithCallback ledc_isr_register_Stub
#define ledc_isr_register_ExpectWithArrayAndReturn(fn, arg, arg_Depth, intr_alloc_flags, handle, handle_Depth, cmock_retval) ledc_isr_register_CMockExpectWithArrayAndReturn(__LINE__, fn, arg, arg_Depth, intr_alloc_flags, handle, handle_Depth, cmock_retval)
void ledc_isr_register_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, cmock_ledc_func_ptr1 fn, void* arg, int arg_Depth, int intr_alloc_flags, ledc_isr_handle_t* handle, int handle_Depth, esp_err_t cmock_to_return);
#define ledc_isr_register_ReturnThruPtr_arg(arg) ledc_isr_register_CMockReturnMemThruPtr_arg(__LINE__, arg, sizeof(void))
#define ledc_isr_register_ReturnArrayThruPtr_arg(arg, cmock_len) ledc_isr_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_len * sizeof(*arg))
#define ledc_isr_register_ReturnMemThruPtr_arg(arg, cmock_size) ledc_isr_register_CMockReturnMemThruPtr_arg(__LINE__, arg, cmock_size)
void ledc_isr_register_CMockReturnMemThruPtr_arg(UNITY_LINE_TYPE cmock_line, void* arg, size_t cmock_size);
#define ledc_isr_register_ReturnThruPtr_handle(handle) ledc_isr_register_CMockReturnMemThruPtr_handle(__LINE__, handle, sizeof(ledc_isr_handle_t))
#define ledc_isr_register_ReturnArrayThruPtr_handle(handle, cmock_len) ledc_isr_register_CMockReturnMemThruPtr_handle(__LINE__, handle, cmock_len * sizeof(*handle))
#define ledc_isr_register_ReturnMemThruPtr_handle(handle, cmock_size) ledc_isr_register_CMockReturnMemThruPtr_handle(__LINE__, handle, cmock_size)
void ledc_isr_register_CMockReturnMemThruPtr_handle(UNITY_LINE_TYPE cmock_line, ledc_isr_handle_t* handle, size_t cmock_size);
#define ledc_isr_register_IgnoreArg_fn() ledc_isr_register_CMockIgnoreArg_fn(__LINE__)
void ledc_isr_register_CMockIgnoreArg_fn(UNITY_LINE_TYPE cmock_line);
#define ledc_isr_register_IgnoreArg_arg() ledc_isr_register_CMockIgnoreArg_arg(__LINE__)
void ledc_isr_register_CMockIgnoreArg_arg(UNITY_LINE_TYPE cmock_line);
#define ledc_isr_register_IgnoreArg_intr_alloc_flags() ledc_isr_register_CMockIgnoreArg_intr_alloc_flags(__LINE__)
void ledc_isr_register_CMockIgnoreArg_intr_alloc_flags(UNITY_LINE_TYPE cmock_line);
#define ledc_isr_register_IgnoreArg_handle() ledc_isr_register_CMockIgnoreArg_handle(__LINE__)
void ledc_isr_register_CMockIgnoreArg_handle(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_set_IgnoreAndReturn(cmock_retval) ledc_timer_set_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_timer_set_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_timer_set_StopIgnore() ledc_timer_set_CMockStopIgnore()
void ledc_timer_set_CMockStopIgnore(void);
#define ledc_timer_set_ExpectAndReturn(speed_mode, timer_sel, clock_divider, duty_resolution, clk_src, cmock_retval) ledc_timer_set_CMockExpectAndReturn(__LINE__, speed_mode, timer_sel, clock_divider, duty_resolution, clk_src, cmock_retval)
void ledc_timer_set_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_timer_t timer_sel, uint32_t clock_divider, uint32_t duty_resolution, ledc_clk_src_t clk_src, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_timer_set_CALLBACK)(ledc_mode_t speed_mode, ledc_timer_t timer_sel, uint32_t clock_divider, uint32_t duty_resolution, ledc_clk_src_t clk_src, int cmock_num_calls);
void ledc_timer_set_AddCallback(CMOCK_ledc_timer_set_CALLBACK Callback);
void ledc_timer_set_Stub(CMOCK_ledc_timer_set_CALLBACK Callback);
#define ledc_timer_set_StubWithCallback ledc_timer_set_Stub
#define ledc_timer_set_IgnoreArg_speed_mode() ledc_timer_set_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_timer_set_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_set_IgnoreArg_timer_sel() ledc_timer_set_CMockIgnoreArg_timer_sel(__LINE__)
void ledc_timer_set_CMockIgnoreArg_timer_sel(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_set_IgnoreArg_clock_divider() ledc_timer_set_CMockIgnoreArg_clock_divider(__LINE__)
void ledc_timer_set_CMockIgnoreArg_clock_divider(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_set_IgnoreArg_duty_resolution() ledc_timer_set_CMockIgnoreArg_duty_resolution(__LINE__)
void ledc_timer_set_CMockIgnoreArg_duty_resolution(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_set_IgnoreArg_clk_src() ledc_timer_set_CMockIgnoreArg_clk_src(__LINE__)
void ledc_timer_set_CMockIgnoreArg_clk_src(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_rst_IgnoreAndReturn(cmock_retval) ledc_timer_rst_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_timer_rst_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_timer_rst_StopIgnore() ledc_timer_rst_CMockStopIgnore()
void ledc_timer_rst_CMockStopIgnore(void);
#define ledc_timer_rst_ExpectAndReturn(speed_mode, timer_sel, cmock_retval) ledc_timer_rst_CMockExpectAndReturn(__LINE__, speed_mode, timer_sel, cmock_retval)
void ledc_timer_rst_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_timer_t timer_sel, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_timer_rst_CALLBACK)(ledc_mode_t speed_mode, ledc_timer_t timer_sel, int cmock_num_calls);
void ledc_timer_rst_AddCallback(CMOCK_ledc_timer_rst_CALLBACK Callback);
void ledc_timer_rst_Stub(CMOCK_ledc_timer_rst_CALLBACK Callback);
#define ledc_timer_rst_StubWithCallback ledc_timer_rst_Stub
#define ledc_timer_rst_IgnoreArg_speed_mode() ledc_timer_rst_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_timer_rst_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_rst_IgnoreArg_timer_sel() ledc_timer_rst_CMockIgnoreArg_timer_sel(__LINE__)
void ledc_timer_rst_CMockIgnoreArg_timer_sel(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_pause_IgnoreAndReturn(cmock_retval) ledc_timer_pause_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_timer_pause_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_timer_pause_StopIgnore() ledc_timer_pause_CMockStopIgnore()
void ledc_timer_pause_CMockStopIgnore(void);
#define ledc_timer_pause_ExpectAndReturn(speed_mode, timer_sel, cmock_retval) ledc_timer_pause_CMockExpectAndReturn(__LINE__, speed_mode, timer_sel, cmock_retval)
void ledc_timer_pause_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_timer_t timer_sel, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_timer_pause_CALLBACK)(ledc_mode_t speed_mode, ledc_timer_t timer_sel, int cmock_num_calls);
void ledc_timer_pause_AddCallback(CMOCK_ledc_timer_pause_CALLBACK Callback);
void ledc_timer_pause_Stub(CMOCK_ledc_timer_pause_CALLBACK Callback);
#define ledc_timer_pause_StubWithCallback ledc_timer_pause_Stub
#define ledc_timer_pause_IgnoreArg_speed_mode() ledc_timer_pause_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_timer_pause_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_pause_IgnoreArg_timer_sel() ledc_timer_pause_CMockIgnoreArg_timer_sel(__LINE__)
void ledc_timer_pause_CMockIgnoreArg_timer_sel(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_resume_IgnoreAndReturn(cmock_retval) ledc_timer_resume_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_timer_resume_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_timer_resume_StopIgnore() ledc_timer_resume_CMockStopIgnore()
void ledc_timer_resume_CMockStopIgnore(void);
#define ledc_timer_resume_ExpectAndReturn(speed_mode, timer_sel, cmock_retval) ledc_timer_resume_CMockExpectAndReturn(__LINE__, speed_mode, timer_sel, cmock_retval)
void ledc_timer_resume_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_timer_t timer_sel, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_timer_resume_CALLBACK)(ledc_mode_t speed_mode, ledc_timer_t timer_sel, int cmock_num_calls);
void ledc_timer_resume_AddCallback(CMOCK_ledc_timer_resume_CALLBACK Callback);
void ledc_timer_resume_Stub(CMOCK_ledc_timer_resume_CALLBACK Callback);
#define ledc_timer_resume_StubWithCallback ledc_timer_resume_Stub
#define ledc_timer_resume_IgnoreArg_speed_mode() ledc_timer_resume_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_timer_resume_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_timer_resume_IgnoreArg_timer_sel() ledc_timer_resume_CMockIgnoreArg_timer_sel(__LINE__)
void ledc_timer_resume_CMockIgnoreArg_timer_sel(UNITY_LINE_TYPE cmock_line);
#define ledc_bind_channel_timer_IgnoreAndReturn(cmock_retval) ledc_bind_channel_timer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_bind_channel_timer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_bind_channel_timer_StopIgnore() ledc_bind_channel_timer_CMockStopIgnore()
void ledc_bind_channel_timer_CMockStopIgnore(void);
#define ledc_bind_channel_timer_ExpectAndReturn(speed_mode, channel, timer_sel, cmock_retval) ledc_bind_channel_timer_CMockExpectAndReturn(__LINE__, speed_mode, channel, timer_sel, cmock_retval)
void ledc_bind_channel_timer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, ledc_timer_t timer_sel, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_bind_channel_timer_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, ledc_timer_t timer_sel, int cmock_num_calls);
void ledc_bind_channel_timer_AddCallback(CMOCK_ledc_bind_channel_timer_CALLBACK Callback);
void ledc_bind_channel_timer_Stub(CMOCK_ledc_bind_channel_timer_CALLBACK Callback);
#define ledc_bind_channel_timer_StubWithCallback ledc_bind_channel_timer_Stub
#define ledc_bind_channel_timer_IgnoreArg_speed_mode() ledc_bind_channel_timer_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_bind_channel_timer_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_bind_channel_timer_IgnoreArg_channel() ledc_bind_channel_timer_CMockIgnoreArg_channel(__LINE__)
void ledc_bind_channel_timer_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_bind_channel_timer_IgnoreArg_timer_sel() ledc_bind_channel_timer_CMockIgnoreArg_timer_sel(__LINE__)
void ledc_bind_channel_timer_CMockIgnoreArg_timer_sel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_step_IgnoreAndReturn(cmock_retval) ledc_set_fade_with_step_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_fade_with_step_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_fade_with_step_StopIgnore() ledc_set_fade_with_step_CMockStopIgnore()
void ledc_set_fade_with_step_CMockStopIgnore(void);
#define ledc_set_fade_with_step_ExpectAndReturn(speed_mode, channel, target_duty, scale, cycle_num, cmock_retval) ledc_set_fade_with_step_CMockExpectAndReturn(__LINE__, speed_mode, channel, target_duty, scale, cycle_num, cmock_retval)
void ledc_set_fade_with_step_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, uint32_t scale, uint32_t cycle_num, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_fade_with_step_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, uint32_t scale, uint32_t cycle_num, int cmock_num_calls);
void ledc_set_fade_with_step_AddCallback(CMOCK_ledc_set_fade_with_step_CALLBACK Callback);
void ledc_set_fade_with_step_Stub(CMOCK_ledc_set_fade_with_step_CALLBACK Callback);
#define ledc_set_fade_with_step_StubWithCallback ledc_set_fade_with_step_Stub
#define ledc_set_fade_with_step_IgnoreArg_speed_mode() ledc_set_fade_with_step_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_fade_with_step_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_step_IgnoreArg_channel() ledc_set_fade_with_step_CMockIgnoreArg_channel(__LINE__)
void ledc_set_fade_with_step_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_step_IgnoreArg_target_duty() ledc_set_fade_with_step_CMockIgnoreArg_target_duty(__LINE__)
void ledc_set_fade_with_step_CMockIgnoreArg_target_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_step_IgnoreArg_scale() ledc_set_fade_with_step_CMockIgnoreArg_scale(__LINE__)
void ledc_set_fade_with_step_CMockIgnoreArg_scale(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_step_IgnoreArg_cycle_num() ledc_set_fade_with_step_CMockIgnoreArg_cycle_num(__LINE__)
void ledc_set_fade_with_step_CMockIgnoreArg_cycle_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_time_IgnoreAndReturn(cmock_retval) ledc_set_fade_with_time_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_fade_with_time_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_fade_with_time_StopIgnore() ledc_set_fade_with_time_CMockStopIgnore()
void ledc_set_fade_with_time_CMockStopIgnore(void);
#define ledc_set_fade_with_time_ExpectAndReturn(speed_mode, channel, target_duty, max_fade_time_ms, cmock_retval) ledc_set_fade_with_time_CMockExpectAndReturn(__LINE__, speed_mode, channel, target_duty, max_fade_time_ms, cmock_retval)
void ledc_set_fade_with_time_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, int max_fade_time_ms, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_fade_with_time_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, int max_fade_time_ms, int cmock_num_calls);
void ledc_set_fade_with_time_AddCallback(CMOCK_ledc_set_fade_with_time_CALLBACK Callback);
void ledc_set_fade_with_time_Stub(CMOCK_ledc_set_fade_with_time_CALLBACK Callback);
#define ledc_set_fade_with_time_StubWithCallback ledc_set_fade_with_time_Stub
#define ledc_set_fade_with_time_IgnoreArg_speed_mode() ledc_set_fade_with_time_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_fade_with_time_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_time_IgnoreArg_channel() ledc_set_fade_with_time_CMockIgnoreArg_channel(__LINE__)
void ledc_set_fade_with_time_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_time_IgnoreArg_target_duty() ledc_set_fade_with_time_CMockIgnoreArg_target_duty(__LINE__)
void ledc_set_fade_with_time_CMockIgnoreArg_target_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_with_time_IgnoreArg_max_fade_time_ms() ledc_set_fade_with_time_CMockIgnoreArg_max_fade_time_ms(__LINE__)
void ledc_set_fade_with_time_CMockIgnoreArg_max_fade_time_ms(UNITY_LINE_TYPE cmock_line);
#define ledc_fade_func_install_IgnoreAndReturn(cmock_retval) ledc_fade_func_install_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_fade_func_install_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_fade_func_install_StopIgnore() ledc_fade_func_install_CMockStopIgnore()
void ledc_fade_func_install_CMockStopIgnore(void);
#define ledc_fade_func_install_ExpectAndReturn(intr_alloc_flags, cmock_retval) ledc_fade_func_install_CMockExpectAndReturn(__LINE__, intr_alloc_flags, cmock_retval)
void ledc_fade_func_install_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int intr_alloc_flags, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_fade_func_install_CALLBACK)(int intr_alloc_flags, int cmock_num_calls);
void ledc_fade_func_install_AddCallback(CMOCK_ledc_fade_func_install_CALLBACK Callback);
void ledc_fade_func_install_Stub(CMOCK_ledc_fade_func_install_CALLBACK Callback);
#define ledc_fade_func_install_StubWithCallback ledc_fade_func_install_Stub
#define ledc_fade_func_install_IgnoreArg_intr_alloc_flags() ledc_fade_func_install_CMockIgnoreArg_intr_alloc_flags(__LINE__)
void ledc_fade_func_install_CMockIgnoreArg_intr_alloc_flags(UNITY_LINE_TYPE cmock_line);
#define ledc_fade_func_uninstall_Ignore() ledc_fade_func_uninstall_CMockIgnore()
void ledc_fade_func_uninstall_CMockIgnore(void);
#define ledc_fade_func_uninstall_StopIgnore() ledc_fade_func_uninstall_CMockStopIgnore()
void ledc_fade_func_uninstall_CMockStopIgnore(void);
#define ledc_fade_func_uninstall_Expect() ledc_fade_func_uninstall_CMockExpect(__LINE__)
void ledc_fade_func_uninstall_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_ledc_fade_func_uninstall_CALLBACK)(int cmock_num_calls);
void ledc_fade_func_uninstall_AddCallback(CMOCK_ledc_fade_func_uninstall_CALLBACK Callback);
void ledc_fade_func_uninstall_Stub(CMOCK_ledc_fade_func_uninstall_CALLBACK Callback);
#define ledc_fade_func_uninstall_StubWithCallback ledc_fade_func_uninstall_Stub
#define ledc_fade_start_IgnoreAndReturn(cmock_retval) ledc_fade_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_fade_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_fade_start_StopIgnore() ledc_fade_start_CMockStopIgnore()
void ledc_fade_start_CMockStopIgnore(void);
#define ledc_fade_start_ExpectAndReturn(speed_mode, channel, fade_mode, cmock_retval) ledc_fade_start_CMockExpectAndReturn(__LINE__, speed_mode, channel, fade_mode, cmock_retval)
void ledc_fade_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, ledc_fade_mode_t fade_mode, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_fade_start_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, ledc_fade_mode_t fade_mode, int cmock_num_calls);
void ledc_fade_start_AddCallback(CMOCK_ledc_fade_start_CALLBACK Callback);
void ledc_fade_start_Stub(CMOCK_ledc_fade_start_CALLBACK Callback);
#define ledc_fade_start_StubWithCallback ledc_fade_start_Stub
#define ledc_fade_start_IgnoreArg_speed_mode() ledc_fade_start_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_fade_start_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_fade_start_IgnoreArg_channel() ledc_fade_start_CMockIgnoreArg_channel(__LINE__)
void ledc_fade_start_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_fade_start_IgnoreArg_fade_mode() ledc_fade_start_CMockIgnoreArg_fade_mode(__LINE__)
void ledc_fade_start_CMockIgnoreArg_fade_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_and_update_IgnoreAndReturn(cmock_retval) ledc_set_duty_and_update_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_duty_and_update_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_duty_and_update_StopIgnore() ledc_set_duty_and_update_CMockStopIgnore()
void ledc_set_duty_and_update_CMockStopIgnore(void);
#define ledc_set_duty_and_update_ExpectAndReturn(speed_mode, channel, duty, hpoint, cmock_retval) ledc_set_duty_and_update_CMockExpectAndReturn(__LINE__, speed_mode, channel, duty, hpoint, cmock_retval)
void ledc_set_duty_and_update_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, uint32_t hpoint, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_duty_and_update_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t duty, uint32_t hpoint, int cmock_num_calls);
void ledc_set_duty_and_update_AddCallback(CMOCK_ledc_set_duty_and_update_CALLBACK Callback);
void ledc_set_duty_and_update_Stub(CMOCK_ledc_set_duty_and_update_CALLBACK Callback);
#define ledc_set_duty_and_update_StubWithCallback ledc_set_duty_and_update_Stub
#define ledc_set_duty_and_update_IgnoreArg_speed_mode() ledc_set_duty_and_update_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_duty_and_update_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_and_update_IgnoreArg_channel() ledc_set_duty_and_update_CMockIgnoreArg_channel(__LINE__)
void ledc_set_duty_and_update_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_and_update_IgnoreArg_duty() ledc_set_duty_and_update_CMockIgnoreArg_duty(__LINE__)
void ledc_set_duty_and_update_CMockIgnoreArg_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_duty_and_update_IgnoreArg_hpoint() ledc_set_duty_and_update_CMockIgnoreArg_hpoint(__LINE__)
void ledc_set_duty_and_update_CMockIgnoreArg_hpoint(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_time_and_start_IgnoreAndReturn(cmock_retval) ledc_set_fade_time_and_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_fade_time_and_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_fade_time_and_start_StopIgnore() ledc_set_fade_time_and_start_CMockStopIgnore()
void ledc_set_fade_time_and_start_CMockStopIgnore(void);
#define ledc_set_fade_time_and_start_ExpectAndReturn(speed_mode, channel, target_duty, max_fade_time_ms, fade_mode, cmock_retval) ledc_set_fade_time_and_start_CMockExpectAndReturn(__LINE__, speed_mode, channel, target_duty, max_fade_time_ms, fade_mode, cmock_retval)
void ledc_set_fade_time_and_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, uint32_t max_fade_time_ms, ledc_fade_mode_t fade_mode, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_fade_time_and_start_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, uint32_t max_fade_time_ms, ledc_fade_mode_t fade_mode, int cmock_num_calls);
void ledc_set_fade_time_and_start_AddCallback(CMOCK_ledc_set_fade_time_and_start_CALLBACK Callback);
void ledc_set_fade_time_and_start_Stub(CMOCK_ledc_set_fade_time_and_start_CALLBACK Callback);
#define ledc_set_fade_time_and_start_StubWithCallback ledc_set_fade_time_and_start_Stub
#define ledc_set_fade_time_and_start_IgnoreArg_speed_mode() ledc_set_fade_time_and_start_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_fade_time_and_start_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_time_and_start_IgnoreArg_channel() ledc_set_fade_time_and_start_CMockIgnoreArg_channel(__LINE__)
void ledc_set_fade_time_and_start_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_time_and_start_IgnoreArg_target_duty() ledc_set_fade_time_and_start_CMockIgnoreArg_target_duty(__LINE__)
void ledc_set_fade_time_and_start_CMockIgnoreArg_target_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_time_and_start_IgnoreArg_max_fade_time_ms() ledc_set_fade_time_and_start_CMockIgnoreArg_max_fade_time_ms(__LINE__)
void ledc_set_fade_time_and_start_CMockIgnoreArg_max_fade_time_ms(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_time_and_start_IgnoreArg_fade_mode() ledc_set_fade_time_and_start_CMockIgnoreArg_fade_mode(__LINE__)
void ledc_set_fade_time_and_start_CMockIgnoreArg_fade_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_step_and_start_IgnoreAndReturn(cmock_retval) ledc_set_fade_step_and_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_set_fade_step_and_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_set_fade_step_and_start_StopIgnore() ledc_set_fade_step_and_start_CMockStopIgnore()
void ledc_set_fade_step_and_start_CMockStopIgnore(void);
#define ledc_set_fade_step_and_start_ExpectAndReturn(speed_mode, channel, target_duty, scale, cycle_num, fade_mode, cmock_retval) ledc_set_fade_step_and_start_CMockExpectAndReturn(__LINE__, speed_mode, channel, target_duty, scale, cycle_num, fade_mode, cmock_retval)
void ledc_set_fade_step_and_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, uint32_t scale, uint32_t cycle_num, ledc_fade_mode_t fade_mode, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_set_fade_step_and_start_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, uint32_t target_duty, uint32_t scale, uint32_t cycle_num, ledc_fade_mode_t fade_mode, int cmock_num_calls);
void ledc_set_fade_step_and_start_AddCallback(CMOCK_ledc_set_fade_step_and_start_CALLBACK Callback);
void ledc_set_fade_step_and_start_Stub(CMOCK_ledc_set_fade_step_and_start_CALLBACK Callback);
#define ledc_set_fade_step_and_start_StubWithCallback ledc_set_fade_step_and_start_Stub
#define ledc_set_fade_step_and_start_IgnoreArg_speed_mode() ledc_set_fade_step_and_start_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_set_fade_step_and_start_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_step_and_start_IgnoreArg_channel() ledc_set_fade_step_and_start_CMockIgnoreArg_channel(__LINE__)
void ledc_set_fade_step_and_start_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_step_and_start_IgnoreArg_target_duty() ledc_set_fade_step_and_start_CMockIgnoreArg_target_duty(__LINE__)
void ledc_set_fade_step_and_start_CMockIgnoreArg_target_duty(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_step_and_start_IgnoreArg_scale() ledc_set_fade_step_and_start_CMockIgnoreArg_scale(__LINE__)
void ledc_set_fade_step_and_start_CMockIgnoreArg_scale(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_step_and_start_IgnoreArg_cycle_num() ledc_set_fade_step_and_start_CMockIgnoreArg_cycle_num(__LINE__)
void ledc_set_fade_step_and_start_CMockIgnoreArg_cycle_num(UNITY_LINE_TYPE cmock_line);
#define ledc_set_fade_step_and_start_IgnoreArg_fade_mode() ledc_set_fade_step_and_start_CMockIgnoreArg_fade_mode(__LINE__)
void ledc_set_fade_step_and_start_CMockIgnoreArg_fade_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_cb_register_IgnoreAndReturn(cmock_retval) ledc_cb_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ledc_cb_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, esp_err_t cmock_to_return);
#define ledc_cb_register_StopIgnore() ledc_cb_register_CMockStopIgnore()
void ledc_cb_register_CMockStopIgnore(void);
#define ledc_cb_register_ExpectAndReturn(speed_mode, channel, cbs, user_arg, cmock_retval) ledc_cb_register_CMockExpectAndReturn(__LINE__, speed_mode, channel, cbs, user_arg, cmock_retval)
void ledc_cb_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, ledc_cbs_t* cbs, void* user_arg, esp_err_t cmock_to_return);
typedef esp_err_t (* CMOCK_ledc_cb_register_CALLBACK)(ledc_mode_t speed_mode, ledc_channel_t channel, ledc_cbs_t* cbs, void* user_arg, int cmock_num_calls);
void ledc_cb_register_AddCallback(CMOCK_ledc_cb_register_CALLBACK Callback);
void ledc_cb_register_Stub(CMOCK_ledc_cb_register_CALLBACK Callback);
#define ledc_cb_register_StubWithCallback ledc_cb_register_Stub
#define ledc_cb_register_ExpectWithArrayAndReturn(speed_mode, channel, cbs, cbs_Depth, user_arg, user_arg_Depth, cmock_retval) ledc_cb_register_CMockExpectWithArrayAndReturn(__LINE__, speed_mode, channel, cbs, cbs_Depth, user_arg, user_arg_Depth, cmock_retval)
void ledc_cb_register_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, ledc_mode_t speed_mode, ledc_channel_t channel, ledc_cbs_t* cbs, int cbs_Depth, void* user_arg, int user_arg_Depth, esp_err_t cmock_to_return);
#define ledc_cb_register_ReturnThruPtr_cbs(cbs) ledc_cb_register_CMockReturnMemThruPtr_cbs(__LINE__, cbs, sizeof(ledc_cbs_t))
#define ledc_cb_register_ReturnArrayThruPtr_cbs(cbs, cmock_len) ledc_cb_register_CMockReturnMemThruPtr_cbs(__LINE__, cbs, cmock_len * sizeof(*cbs))
#define ledc_cb_register_ReturnMemThruPtr_cbs(cbs, cmock_size) ledc_cb_register_CMockReturnMemThruPtr_cbs(__LINE__, cbs, cmock_size)
void ledc_cb_register_CMockReturnMemThruPtr_cbs(UNITY_LINE_TYPE cmock_line, ledc_cbs_t* cbs, size_t cmock_size);
#define ledc_cb_register_ReturnThruPtr_user_arg(user_arg) ledc_cb_register_CMockReturnMemThruPtr_user_arg(__LINE__, user_arg, sizeof(void))
#define ledc_cb_register_ReturnArrayThruPtr_user_arg(user_arg, cmock_len) ledc_cb_register_CMockReturnMemThruPtr_user_arg(__LINE__, user_arg, cmock_len * sizeof(*user_arg))
#define ledc_cb_register_ReturnMemThruPtr_user_arg(user_arg, cmock_size) ledc_cb_register_CMockReturnMemThruPtr_user_arg(__LINE__, user_arg, cmock_size)
void ledc_cb_register_CMockReturnMemThruPtr_user_arg(UNITY_LINE_TYPE cmock_line, void* user_arg, size_t cmock_size);
#define ledc_cb_register_IgnoreArg_speed_mode() ledc_cb_register_CMockIgnoreArg_speed_mode(__LINE__)
void ledc_cb_register_CMockIgnoreArg_speed_mode(UNITY_LINE_TYPE cmock_line);
#define ledc_cb_register_IgnoreArg_channel() ledc_cb_register_CMockIgnoreArg_channel(__LINE__)
void ledc_cb_register_CMockIgnoreArg_channel(UNITY_LINE_TYPE cmock_line);
#define ledc_cb_register_IgnoreArg_cbs() ledc_cb_register_CMockIgnoreArg_cbs(__LINE__)
void ledc_cb_register_CMockIgnoreArg_cbs(UNITY_LINE_TYPE cmock_line);
#define ledc_cb_register_IgnoreArg_user_arg() ledc_cb_register_CMockIgnoreArg_user_arg(__LINE__)
void ledc_cb_register_CMockIgnoreArg_user_arg(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif


#ifdef __cplusplus
}
#endif
